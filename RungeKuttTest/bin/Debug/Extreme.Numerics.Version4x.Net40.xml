<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Extreme.Numerics.Version4x.Net40</name>
  </assembly>
  <members>
    <member name="T:Extreme.Mathematics.SingleComplex">
      <summary>
            Represents a complex number.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.#ctor(System.Single)">
      <summary>
            Constructs a complex number from a real number.
            </summary>
      <param name="realPart">The real part of the complex number.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.#ctor(System.Single,System.Single)">
      <summary>
            Constructs a complex number from its real and imaginary
            parts.
            </summary>
      <param name="realPart">The real part.</param>
      <param name="imaginaryPart">The imaginary part.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.#ctor(System.Single,System.Single,System.Boolean)">
      <summary>
            Constructs a complex number from rectangular or
            polar components.
            </summary>
      <param name="a">If <paramref name="polar" /> is <span class="keyword">true</span>,
            specifies the modulus of the complex number.
            If <paramref name="polar" /> is <span class="keyword">false</span>,
            specifies the real part.</param>
      <param name="b">If <paramref name="polar" /> is <span class="keyword">true</span>,
            specifies the argument of the complex number.
            If <paramref name="polar" /> is <span class="keyword">false</span>,
            specifies the imaginary part.</param>
      <param name="polar">Indicates whether the parameters
            <paramref name="a" /> and <paramref name="b" /> are for
            the polar (<paramref name="polar" />= <span class="keyword">true</span> or
            rectangular (<paramref name="polar" />= <span class="keyword">false</span>)
            representation.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Abs(Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns the absolute value of a <see cref="T:Extreme.Mathematics.SingleComplex" />
            number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The absolute value of <paramref name="z" /></returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Acos(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the inverse cosine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The inverse cosine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Acos(System.Single)">
      <summary>
            Gets the inverse cosine of a real number.
            </summary>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The inverse cosine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Acosh(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the inverse hyperbolic cosine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The inverse hyperbolic cosine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Add(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the sum
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Add(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Adds a <see cref="T:Extreme.Mathematics.SingleComplex" /> number to a real number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">A real number number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the sum
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Add(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Adds a <see cref="T:Extreme.Mathematics.SingleComplex" /> number to a real number.
            </summary>
      <param name="a">A real number number.</param>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the sum
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Arg(Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns the argument of a <see cref="T:Extreme.Mathematics.SingleComplex" />
            number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.Argument">
      <summary>
            Gets the argument of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Asin(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the inverse sine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The inverse sine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Asin(System.Single)">
      <summary>
            Gets the inverse sine of a real number.
            </summary>
      <param name="a">A real number.</param>
      <returns>The inverse sine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Asinh(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the inverse hyperbolic sine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The inverse hyperbolic sine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Atan(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the inverse tangent of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The inverse tangent of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Atanh(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the inverse hyperbolic tangent of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The inverse hyperbolic tangent of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Conjugate">
      <summary>
            Returns the conjugate of this instance.
            </summary>
      <returns>The conjugate to the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Conjugate(Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns the conjugate of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The conjugate to <paramref name="z" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.ConjugateMultiply(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies the <see cref="M:Extreme.Mathematics.SingleComplex.Conjugate(Extreme.Mathematics.SingleComplex)" /> of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number
            and a second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the product
            of the <see cref="M:Extreme.Mathematics.SingleComplex.Conjugate(Extreme.Mathematics.SingleComplex)" /> of <paramref name="z1" />
            and <paramref name="z2" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Cos(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the cosine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The cosine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Cosh(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the hyperbolic cosine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The hyperbolic cosine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Decrement(Extreme.Mathematics.SingleComplex)">
      <summary>
            Decrements the real part of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number
            by one.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleComplex" /> number with its real part
            decremented by one.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Divide(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.SingleComplex" /> number by another.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the first
            operand divided by the second.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Divide(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.SingleComplex" /> number by a real number.
            </summary>
      <param name="a">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z">The real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the complex
            number divided by the real number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Divide(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Divides a real number by a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the real
            number divided by the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Equals(Extreme.Mathematics.SingleComplex)">
      <summary>
            Compares a complex number to another complex number.
            </summary>
      <param name="other">A <see cref="T:Extreme.Mathematics.SingleComplex" /> value.</param>
      <returns>
        <span class="keyword">true</span> if the complex number is equal to <paramref name="other" />; otherwise <span class="keyword">false</span>.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Equals(System.Object)">
      <summary>
            Overridden. Returns a value indicating whether this
            instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare with this instance.</param>
      <returns>
        <span class="keyword">true</span> if <paramref name="obj" /> is an
            instance of <see cref="T:Extreme.Mathematics.SingleComplex" /> and equals the value of this
            instance; otherwise, <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Equals(System.Single)">
      <summary>
            Compares a complex number to a real number.
            </summary>
      <param name="other">A real number.</param>
      <returns>
        <span class="keyword">true</span> if the complex number is equal to <paramref name="other" />; otherwise <span class="keyword">false</span>.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Exp(Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns e raised to the specified power.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The number <see cref="F:Extreme.Mathematics.Constants.E" /> raised
            to the specified power.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.ExpI(System.Single)">
      <summary>
            Evaluates the exponential function for an imaginary
            argument.
            </summary>
      <param name="angle">The imaginary part of the complex
            number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number of unit length with
            argument equal to <paramref name="angle" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.FromPolar(System.Single,System.Single)">
      <summary>
            Constructs a complex number from polar components.
            </summary>
      <param name="modulus">The modulus of the complex number.</param>
      <param name="argument">The argument of the complex number.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleComplex" /> with the specified modulus and argument.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.GetHashCode">
      <summary>
            Overridden. Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.GetImaginaryPart(Extreme.Mathematics.SingleComplex[])">
      <summary>
            Returns an array of Doubles that contains the imaginary
            parts of an array of <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="sourceArray">An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.</param>
      <returns>A <see cref="T:System.Single" /> array containing the
            imaginary parts of the complex numbers in
            <paramref name="sourceArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.GetRealPart(Extreme.Mathematics.SingleComplex[])">
      <summary>
            Returns an array of Doubles that contains the real
            parts of an array of <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="sourceArray">An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.</param>
      <returns>A <see cref="T:System.Single" /> array containing the
            real parts of the complex numbers in
            <paramref name="sourceArray" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="sourceArray" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="F:Extreme.Mathematics.SingleComplex.I">
      <summary>
            Represents the square root of -1.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.Im">
      <summary>
            Gets  the imaginary part of the complex number.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Imaginary(System.Single)">
      <summary>
            Constructs a complex number that has a purely imaginary value.
            </summary>
      <param name="imaginaryPart">The imaginary part of the complex number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> value representing the number i<paramref name="imaginaryPart" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Increment(Extreme.Mathematics.SingleComplex)">
      <summary>
            Increments the real part of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number
            by one.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleComplex" /> number with its real part
            incremented by one.</returns>
    </member>
    <member name="F:Extreme.Mathematics.SingleComplex.Infinity">
      <summary>
            Represents complex infinity.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.IsImaginary">
      <summary>
            Indicates whether a <see cref="T:Extreme.Mathematics.SingleComplex" /> number is a pure
            imaginary number.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.IsInfinity(Extreme.Mathematics.SingleComplex)">
      <summary>
            Indicates whether a <see cref="T:Extreme.Mathematics.SingleComplex" /> number is
            infinite.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>
        <span class="keyword">true</span> if the real or imaginary part
            is <see cref="F:System.Single.PositiveInfinity" /> or
            <see cref="F:System.Single.NegativeInfinity" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.IsNaN(Extreme.Mathematics.SingleComplex)">
      <summary>
            Indicates whether a <see cref="T:Extreme.Mathematics.SingleComplex" /> number is
            undefined.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>
        <span class="keyword">true</span> if the real or imaginary part
            is <see cref="F:System.Single.NaN" />; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.IsReal">
      <summary>
            Indicates whether a <see cref="T:Extreme.Mathematics.SingleComplex" /> number is, in fact,
            real.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.IsZero">
      <summary>
            Indicates whether a <see cref="T:Extreme.Mathematics.SingleComplex" /> number is equal to
            zero.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Log(Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns the natural logarithm of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The natural logarithm of <paramref name="z" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Log(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns the logarithm of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number
            to the specified base.
            </summary>
      <param name="newBase">A <see cref="T:Extreme.Mathematics.SingleComplex" /> that is the
            base of the logarithm.</param>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number whose
            logarithm is to be calculated.</param>
      <returns>The base <paramref name="newBase" /> logarithm of
            <paramref name="z" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Log10(Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns the base 10 logarithm of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The base 10 logarithm of <paramref name="z" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.Modulus">
      <summary>
            Gets the modulus or absolute value of a
            <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">The
            value provided for the modulus is negative.</exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.ModulusSquared">
      <summary>
            Returns the square of the modulus of a <see cref="T:Extreme.Mathematics.SingleComplex" />
            number.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Multiply(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the product
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Multiply(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the product
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Multiply(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number.
            </summary>
      <param name="a">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z">The real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the product
            of the two operands.</returns>
    </member>
    <member name="F:Extreme.Mathematics.SingleComplex.NaN">
      <summary>
            Represents complex NaN, or Not a Number.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Negate(Extreme.Mathematics.SingleComplex)">
      <summary>
            Negates a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that has its real
            and imaginary part negated.</returns>
    </member>
    <member name="F:Extreme.Mathematics.SingleComplex.One">
      <summary>
            Represents the complex number one.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Addition(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the sum
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Addition(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Adds a <see cref="T:Extreme.Mathematics.SingleComplex" /> number to a real number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">A real number number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the sum
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Addition(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Adds a <see cref="T:Extreme.Mathematics.SingleComplex" /> number to a real number.
            </summary>
      <param name="a">A real number number.</param>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the sum
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Decrement(Extreme.Mathematics.SingleComplex)">
      <summary>
            Decrements the real part of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number
            by one.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleComplex" /> number with its real part
            decremented by one.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Division(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.SingleComplex" /> number by another.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the first
            operand divided by the second.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Division(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.SingleComplex" /> number by a real number.
            </summary>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">The real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the complex
            number divided by the real number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Division(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Divides a real number by a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the real
            number divided by the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Equality(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Compares two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers for equality.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>
        <span class="keyword">true</span> if the two complex numbers are
            equal; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Equality(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Compares a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number for equality.
            </summary>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">The real number.</param>
      <returns>
        <span class="keyword">true</span> if the two numbers are
            equal; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Equality(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Compares a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number for equality.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>
        <span class="keyword">true</span> if the two numbers are
            equal; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Explicit(Extreme.Mathematics.DoubleComplex)~Extreme.Mathematics.SingleComplex">
      <summary>
            Casts a <see cref="T:Extreme.Mathematics.DoubleComplex" /> number to a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">The complex number to convert.</param>
      <returns>A single-precision floating-point number whose real and imaginary components are the components
            of <paramref name="z" /> converted to single precision.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Explicit(Extreme.Mathematics.SingleComplex)~System.Single">
      <summary>
            Casts a <see cref="T:Extreme.Mathematics.SingleComplex" /> number to a real number. The
            imaginary part must be zero.
            </summary>
      <param name="z">The complex number to convert.</param>
      <returns>A floating-point number with the same value
            as the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Implicit(Extreme.Mathematics.SingleComplex)~Extreme.Mathematics.DoubleComplex">
      <summary>
            Casts a <see cref="T:Extreme.Mathematics.SingleComplex" /> number to a <see cref="T:Extreme.Mathematics.DoubleComplex" /> number.
            </summary>
      <param name="z">The complex number to convert.</param>
      <returns>A double-precision floating-point number with the same value as <paramref name="z" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Implicit(System.Single)~Extreme.Mathematics.SingleComplex">
      <summary>
            Casts a real number to a <see cref="T:Extreme.Mathematics.SingleComplex" /> type.
            </summary>
      <param name="a">A float-precision floating-point
            number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number with the same value
            as the real number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Increment(Extreme.Mathematics.SingleComplex)">
      <summary>
            Increments the real part of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number
            by one.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleComplex" /> number with its real part
            incremented by one.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Inequality(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Compares two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers for inequality.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>
        <span class="keyword">true</span> if the two complex numbers are
            different; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Inequality(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Compares a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number
            for inequality.
            </summary>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">The real number.</param>
      <returns>
        <span class="keyword">true</span> if the two numbers are
            different; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Inequality(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Compares a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number
            for inequality.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>
        <span class="keyword">true</span> if the two numbers are
            different; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Multiply(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the product
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Multiply(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the product
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Multiply(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.SingleComplex" /> number and a real number.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the product
            of the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Subtraction(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the difference
            between the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Subtraction(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Subtracts a real number from a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">The real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the complex
            number minus the real number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_Subtraction(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Subtracts a <see cref="T:Extreme.Mathematics.SingleComplex" /> number from a real number.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the real
            number minus the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_UnaryNegation(Extreme.Mathematics.SingleComplex)">
      <summary>
            Negates a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that has its real
            and imaginary part negated.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.op_UnaryPlus(Extreme.Mathematics.SingleComplex)">
      <summary>
            Applies the unary plus operator to a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The same <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Plus(Extreme.Mathematics.SingleComplex)">
      <summary>
            Applies the unary plus operator to a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The same <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Pow(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.SingleComplex" /> number raised to the specified
            power.
            </summary>
      <param name="z1">The base <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The exponent <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals
            <paramref name="z1" /> raised to the power
            <paramref name="z2" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Pow(Extreme.Mathematics.SingleComplex,System.Int32)">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.SingleComplex" /> number raised to the specified
            integer power.
            </summary>
      <param name="z">The base <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="n">The exponent.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals
            <paramref name="z" /> raised to the power
            <paramref name="n" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Pow(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.SingleComplex" /> number raised to the specified
            power.
            </summary>
      <param name="z">The base <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">The exponent.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals
            <paramref name="a" /> raised to the power
            <paramref name="a" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplex.Re">
      <summary>
            Gets the real part of the <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.RootOfUnity(System.Int32,System.Int32)">
      <summary>
            Returns a complex number that is the specified
            root of unity of the specified degree.
            </summary>
      <param name="degree">The degree of the root.</param>
      <param name="index">The index of the root.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex">complex number</see> that is the
            <paramref name="index" />th root of unity of degree
            <paramref name="degree" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="degree" /> is equal to zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Sin(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the sine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The sine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Sinh(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the hyperbolic sine of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The hyperbolic sine of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Sqrt(Extreme.Mathematics.SingleComplex)">
      <summary>
            Returns the first square root of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number</param>
      <returns>The square root of <paramref name="z" />
            that is either real and positive, or has a positive
            imaginary part.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Sqrt(System.Single)">
      <summary>
            Returns the first square root of a real number.
            </summary>
      <param name="a">A real number</param>
      <returns>The square root of <paramref name="a" />
            that is either real and positive, or imaginary with
            a positive imaginary part.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Subtract(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleComplex" /> numbers.
            </summary>
      <param name="z1">The first <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="z2">The second <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that is the difference
            between the two operands.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Subtract(Extreme.Mathematics.SingleComplex,System.Single)">
      <summary>
            Subtracts a real number from a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <param name="a">The real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the complex
            number minus the real number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Subtract(System.Single,Extreme.Mathematics.SingleComplex)">
      <summary>
            Subtracts a <see cref="T:Extreme.Mathematics.SingleComplex" /> number from a real number.
            </summary>
      <param name="a">The real number.</param>
      <param name="z">The <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplex" /> number that equals the real
            number minus the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Tan(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the tangent of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The tangent of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.Tanh(Extreme.Mathematics.SingleComplex)">
      <summary>
            Gets the hyperbolic tangent of a <see cref="T:Extreme.Mathematics.SingleComplex" /> number.
            </summary>
      <param name="z">A <see cref="T:Extreme.Mathematics.SingleComplex" /> number.</param>
      <returns>The hyperbolic tangent of the complex number.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.ToString">
      <summary>
            Converts the numeric value of this instance to its
            equivalent string representation.
            </summary>
      <returns>The string representation of the value of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.ToString(System.IFormatProvider)">
      <summary>
            Converts the numeric value of this instance to its
            equivalent string representation using the specified
            culture-specific format information.
            </summary>
      <param name="provider">An <see cref="T:System.IFormatProvider" />
            that supplies culture-specific formatting information.
            </param>
      <returns>The string representation of the value of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.ToString(System.String)">
      <summary>
            Converts the numeric value of this instance to its
            equivalent string representation using the specified
            format.
            </summary>
      <param name="format">A format string.
            </param>
      <returns>The string representation of the value of this instance.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="format" />
            is invalid.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplex.ToString(System.String,System.IFormatProvider)">
      <summary>
            Converts the numeric value of this instance to its
            equivalent string representation using the specified
            format and culture-specific format information.
            </summary>
      <param name="format">A format string.
            </param>
      <param name="provider">An <see cref="T:System.IFormatProvider" />
            that supplies culture-specific formatting information.
            </param>
      <returns>The string representation of the value of this instance.</returns>
      <exception cref="T:System.FormatException">
        <paramref name="format" />
            is invalid.</exception>
    </member>
    <member name="F:Extreme.Mathematics.SingleComplex.Zero">
      <summary>
            Represents the complex number zero.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.SingleComplexMatrix">
      <summary>
            Represents a matrix, a two-dimensional array of real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> of the specified
            dimensions using the specified values array.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> from serialization
            values.
            </summary>
      <param name="info">The values needed to serialize or deserialize
            the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Add(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the sum
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Add(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Adds a multiple of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> and returns
            the result.
            </summary>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before adding.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before adding.</param>
      <param name="factor">Multiplier for the matrix <paramref name="matrix" />.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the sum of the specified form of this matrix
            and the matrix <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and the matrix
            <paramref name="matrix" /> are not compatible for the specified operation.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.AddProductToVector(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />
            and stores the result in a second vector of type <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.AsGeneralMatrix">
      <summary>
            Returns this matrix as a general matrix.
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that has the same value as this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Clone">
      <summary>
            Constructs a deep copy of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.ColumnCount">
      <summary>
            Gets the number of columns in the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.Columns">
      <summary>
            Gets the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexColumnCollection" /> for this instance.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ComponentwiseDivide(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Divides the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ComponentwiseDivide(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Divides the components of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> whose components are equal to the quotient
            of the components of <paramref name="matrix1" /> divided <paramref name="matrix2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix1" /> does not equal the number of rows of <paramref name="matrix2" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not equal the number of columns of <paramref name="matrix2" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies the components of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> whose components are equal to the
            products of the components of <paramref name="matrix1" /> and <paramref name="matrix2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix1" /> does not equal the number of rows of <paramref name="matrix2" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not equal the number of columns of <paramref name="matrix2" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Conjugate">
      <summary>
            Returns the conjugate transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            conjugate transpose of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ConjugateTranspose">
      <summary>
            Returns the conjugate transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            conjugate transpose of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CopyTo(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />
            to another matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> whose
            components are to be set.</param>
      <returns>A reference to the destination matrix.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> is less than
            the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> is less than
            the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Create(Extreme.Mathematics.SingleComplex[0:,0:])">
      <summary>
            Constructs a new matrix from a
            two-dimensional array.
            </summary>
      <param name="values">A two-dimensional array of
            <see cref="T:Extreme.Mathematics.SingleComplex" /> values. The first dimension
            enumerates the rows. The second dimension
            enumerates the columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Create(System.Int32,System.Int32)">
      <summary>
            Constructs a new matrix with the specified
            number of rows and columns
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Create(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex)">
      <summary>
            Constructs a new matrix with the specified
            number of rows and columns whose elements are all equal to the specified value.
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="value">The value of each element.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Create(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new matrix of the specified
            dimensions using the specified values array.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contain the elements of the matrix in the order specified by
            <paramref name="elementOrder" /></param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Create(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new matrix of the specified
            dimensions using the specified values array.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contain the elements of the matrix in
            column-major order.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly for component storage without being copied. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />
            will also affect the original array, and vice versa. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new array. </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Create(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new matrix.
            </summary>
      <param name="RowCount">The number of rows in the matrix.</param>
      <param name="columnCount">The number of columns in the matrix.</param>
      <param name="values">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the values of the matrix.</param>
      <param name="offset">Offset of the first component of the matrix in <paramref name="values" />.</param>
      <param name="stride">Distance between the first element of each row or column.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that indicates whether rows or columns
            are stored contiguously.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateHermitian(System.Int32)">
      <summary>
            Constructs a new Hermitian matrix
            with the specified dimension.
            </summary>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateHermitian(System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixTriangle)">
      <summary>
            Constructs a new Hermitian matrix of the
            specified dimension using the specified values.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            upper or lower triangle of the component values.</param>
      <param name="values">An <see cref="T:System.Array" /> of
            <see cref="T:Extreme.Mathematics.SingleComplex" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateHermitian(System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixTriangle,System.Boolean)">
      <summary>
            Constructs a new Hermitian matrix of the
            specified dimension using the specified values.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            the upper or lower triangle of the component values.</param>
      <param name="values">An <see cref="T:System.Array" /> of
            <see cref="T:Extreme.Mathematics.SingleComplex" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <param name="reuseComponentArray">A bool value that indicates
            whether the <paramref name="values" /> array should be
            copied or reused for internal storage.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateLowerTriangular(System.Int32)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateLowerTriangular(System.Int32,System.Int32)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateLowerTriangular(System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateLowerTriangular(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="values">A SingleComplex array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />
            will also affect the original array. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array. </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateLowerTriangular(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="values">A SingleComplex array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateUpperTriangular(System.Int32)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateUpperTriangular(System.Int32,System.Int32)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateUpperTriangular(System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateUpperTriangular(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="values">A SingleComplex array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />
            will also affect the original array. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array. </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.CreateUpperTriangular(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="values">A SingleComplex array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to.</param>
      <returns>
        <strong>True</strong> if the specified object is
            identical to this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.FrobeniusNorm">
      <summary>
            Returns the Frobenius norm of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The Frobenius norm of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetColumn(System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            that points at the specified column.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of rows.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetColumn(System.Int32,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of components that are to make up the new vector.
            </param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br />
            The <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> specified by <paramref name="rowRange" />
            is outside the bounds of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetColumn(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns<br />
            - or - <br /><paramref name="startRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A column <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetColumnEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> than can be used to enumerate
            the columns of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:Extreme.Mathematics.SingleComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetComponents">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetComponents(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetConditionNumber">
      <summary>
            Calculates the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetDiagonal">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the diagonal elements
            of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the diagonal
            of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the specified
            diagonal of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to
            -<see cref="P:Extreme.Mathematics.SingleComplexMatrix.RowCount" />, or greater than or equal
            to <see cref="P:Extreme.Mathematics.SingleComplexMatrix.ColumnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetImaginaryPart">
      <summary>
            Returns a real matrix containing the imaginary components of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the imaginary part of each component of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetInverse">
      <summary>
            Calculates the inverse of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> inverse of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the values
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with values.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetRealPart">
      <summary>
            Returns a real matrix containing the real components of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the real part of each component of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetRow(System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            that points at the specified row.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetRow(System.Int32,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="columnRange">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br />
            The <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> specified by <paramref name="columnRange" />
            is outside the bounds of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetRow(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            over the specified range.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows
            <para>-or-</para><para><paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para><para>-or-</para><para><paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows
            <para>-or-</para><para><paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para><para>-or-</para><para><paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetRowEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.IEnumerator" /> instance that allows you to
            enumerate the rows of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:Extreme.Mathematics.SingleComplexVector" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetSubmatrix(Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of rows that are to make up the new matrix.
            </param>
      <param name="columnRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of columns that are to make up the new matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that contains the
            specified rows and columns.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetSubmatrix(Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of rows that are to make up the new matrix.
            </param>
      <param name="columnRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of columns that are to make up the new matrix.
            </param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix <paramref name="m" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that contains the
            specified rows and columns.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="startRow">The first row of the
            sub-matrix.</param>
      <param name="endRow">The last row of the sub-matrix.</param>
      <param name="startColumn">The first column of the
            sub-matrix.</param>
      <param name="endColumn">The last column of the
            sub-matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that contains the
            specified rows and columns.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="startRow">Index of the first row of the sub-matrix.</param>
      <param name="endRow">Index of the last row of the sub-matrix.</param>
      <param name="startColumn">Index of the first column of the sub-matrix.</param>
      <param name="endColumn">Index of the last column of the sub-matrix.</param>
      <param name="rowStride">The increment for the row index in the original matrix corresponding to an
            increment of one in the row index of the new matrix.</param>
      <param name="columnStride">The increment for the column index in the original matrix corresponding to an
            increment of one in the column index of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix <paramref name="m" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that contains the
            specified rows and columns.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.InfinityNorm">
      <summary>
            Returns the infinity norm of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The infinity norm of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.IsSingular">
      <summary>
            Gets a value indicating whether this matrix is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.Item(Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets or sets the components of a submatrix of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of rows that are to make up the new matrix.
            </param>
      <param name="columnRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of columns that are to make up the new matrix.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="rowRange" /> does not equal
            the number of rows of <paramref name="value" />.
            <para>-or-</para><para>
            The length of the range specified by <paramref name="columnRange" /> does not equal
            the number of columns of <paramref name="value" />.
            </para></exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.Item(Extreme.Mathematics.LinearAlgebra.Range,System.Int32)">
      <summary>
            Gets or sets the components of a column of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range .
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="rowRange" /> does not equal
            the length of <paramref name="value" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.Item(System.Int32,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets or sets the components of a row of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="columnRange">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="columnRange" /> does not equal
            the length of <paramref name="value" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.Item(System.Int32,System.Int32)">
      <summary>
            Gets or sets the specified element in this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns in this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />. Or, <paramref name="row" />
            is less than zero or greater than or equal to the
            number of rows in this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether the matrix <paramref name="a" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the product of this matrix
            and the matrix <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="matrix" /> is <see langword="null" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Multiply(Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Multiply(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the product
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Multiply(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Multiply(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.OneNorm">
      <summary>
            Returns the 1-norm of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The 1-norm of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Addition(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the sum
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Equality(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> are equal.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>
        <span class="keyword">true</span> if the two vectors have the
            same length and identical components; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Explicit(Extreme.Mathematics.ComplexMatrix)~Extreme.Mathematics.SingleComplexMatrix">
      <summary>
            Converts a double-precision matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.ComplexMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Explicit(Extreme.Mathematics.SingleComplexMatrix)~Extreme.Mathematics.ComplexMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexMatrix" /> with the same size and with the same components as
            <paramref name="original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Inequality(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> are not equal.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>
        <span class="keyword">true</span> if the two vectors have different
            lengths, or not all their components are identical;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Multiply(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the product
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Multiply(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Multiply(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.op_Subtraction(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is equal to the matrix
            <paramref name="matrix1" /> minus the matrix  <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.RowCount">
      <summary>
            Gets the number of rows in the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexMatrix.Rows">
      <summary>
            Gets the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexRowCollection" /> for this instance.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.SetToZero">
      <summary>
            Sets all elements of the matrix to zero.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.SetValue(Extreme.Mathematics.SingleComplex)">
      <summary>
            Sets all elements of the matrix to the specified value.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.SetValue(Extreme.Mathematics.SingleComplex,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ShallowCopy">
      <summary>
            Makes a shallow copy of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Subtract(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is equal to the matrix
            <paramref name="matrix1" /> minus the matrix  <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToArray">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToArray(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToDenseMatrix">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is a copy of
            this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexMatrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToGeneralMatrix">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is a copy of
            this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>A <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToString(System.String)">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="format">A <see cref="T:System.String" /> specifying the format to use.</param>
      <returns>A <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.ToString(System.String,System.IFormatProvider)">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="format">A <see cref="T:System.String" /> specifying the format to use.</param>
      <param name="formatProvider">The <see cref="T:System.IFormatProvider" /> to use to format the value.</param>
      <returns>A <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Trace">
      <summary>
            Gets the sum of the diagonal elements of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The sum of the diagonal elements of this
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            transpose of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="T:Extreme.Mathematics.SingleComplexVector">
      <summary>
            Represents a vector, a one-dimensional array of
            real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.ComplexVector" /> with the specified
            number of components.
            </summary>
      <param name="length">The number of elements in the new
            <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.ComplexVector" /> from serialization
            data.
            </summary>
      <param name="info">The data needed to serialize or deserialize
            the <see cref="T:Extreme.Mathematics.ComplexVector" />. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.AbsoluteMaxIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.AbsoluteMinIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Add(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds the scaled product of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> and a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to this <strong>ComplexVector</strong>.
            </summary>
      <param name="factor">The scale factor for the matrix-vector
            product.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Add(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds a scaled ComplexVector to this ComplexVector.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">The vector to add.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Add(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds the product of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> and a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to this <strong>ComplexVector</strong>.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.SingleComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Add(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds another ComplexVector to this ComplexVector.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to add.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Add(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.ComplexVector" /> values.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            the sum of the corresponding components of
            <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Apply(System.Func{Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex})">
      <summary>
            Applies a function to the elements of a <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="function">A delegate that represents a function of one complex variable</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Apply(System.Func{Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex},Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Applies a function to the elements of a <see cref="T:Extreme.Mathematics.ComplexVector" />
            and returns the result in a new vector.
            </summary>
      <param name="function">A delegate that represents a function of one complex variable</param>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> whose elements
            to apply <paramref name="factor" /> to.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.AsGeneralVector">
      <summary>
            Returns a dense comlex vector with the same components as this vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the same components as this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Clone">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>The cloned <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.ComplexVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.CloneData">
      <summary>
            If possible, gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ComponentwiseConjugateMultiply(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies the components of the conjugate of a <see cref="T:Extreme.Mathematics.ComplexVector" /> by the corresponding
            components of another vector.
            </summary>
      <param name="vector1">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are equal to the
            products of the components of the conjugate pf <paramref name="vector1" /> and <paramref name="vector2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ComponentwiseDivide(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Divides the components of this instance by the corresponding
            components of another vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ComponentwiseDivide(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Divides the components of a <see cref="T:Extreme.Mathematics.ComplexVector" /> by the corresponding
            components of another vector.
            </summary>
      <param name="vector1">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are equal to the quotient
            of the components of <paramref name="vector1" /> divided <paramref name="vector2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ComponentwiseDivide(Extreme.Mathematics.SingleVector)">
      <summary>
            Divides the components of this instance by the corresponding
            components of a real vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ComponentwiseMultiply(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ComponentwiseMultiply(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies the components of a <see cref="T:Extreme.Mathematics.SingleComplexVector" /> by the corresponding
            components of another vector.
            </summary>
      <param name="vector1">A <see cref="T:Extreme.Mathematics.SingleComplexVector" />.</param>
      <param name="vector2">A <see cref="T:Extreme.Mathematics.SingleComplexVector" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are equal to the
            products of the components of <paramref name="vector1" /> and <paramref name="vector2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ComponentwiseMultiply(Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of a real vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Conjugate">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are the complex conjugate of this vector's components.
            </summary>
      <returns>The conjugate <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Convolution(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Calculates the convolution of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A vector containing the convolution of <paramref name="vector1" /> and
            <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.CopyTo(Extreme.Mathematics.SingleComplex[])">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.ComplexVector" />
            to another vector.
            </summary>
      <param name="array">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that
            is to hold the components of this <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="array" /> is not long enough to hold the result.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.CopyTo(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.ComplexVector" />
            to another vector.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> whose
            components are to be set.</param>
      <returns>A reference to the destination vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector" /> is not long enough to hold the result.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.CopyTo(Extreme.Mathematics.SingleComplexVector,System.Int32)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.ComplexVector" />
            to another vector starting at the specified position.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> whose
            components are to be set.</param>
      <param name="index">The index in <paramref name="vector" />
            where copying is to start.</param>
      <returns>A reference to the destination vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector" /> is not long enough to hold the result.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Create(Extreme.Mathematics.SingleComplex[])">
      <summary>
            Constructs a new vector with the specified
            components.
            </summary>
      <param name="values">A variable length list of
            SingleComplex parameters specifying the components of the
            vector, or an array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Create(Extreme.Mathematics.SingleComplex[],System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />
            will also affect the original array.If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Create(System.Collections.Generic.IList{Extreme.Mathematics.SingleComplex})">
      <summary>
            Constructs a new vector with the specified
            components.
            </summary>
      <param name="values">A <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.Double" /> specifying the components of the
            vector.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Create(System.Int32)">
      <summary>
            Constructs a new vector with the specified
            length.
            </summary>
      <param name="length">The length of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Create(System.Int32,Extreme.Mathematics.SingleComplex[],System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />
            will also affect the original array. If <span class="keyword">false</span>, the
            components are copied from <paramref name="values" /> to a new
            array.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="length" /> is less than zero.</para>
        <para>-or-</para>
        <para>The length of <paramref name="values" /> is less than <paramref name="length" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Create(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <param name="length">The length of the vector.</param>
      <param name="data">A <see cref="T:System.Double" /> array containing the components.</param>
      <param name="offset">The offset of the first element of the vector in <paramref name="data" />.</param>
      <param name="stride">The stride between successive elements of the vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Create(System.Single[],System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="realComponents">An array of SingleComplex values specifying the
            real parts of the components of the vector.</param>
      <param name="imaginaryComponents">An array of SingleComplex values specifying the
            imaginary parts of the components of the vector.</param>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="realComponents" />
            does not equal the length of <paramref name="imaginaryComponents" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="realComponents" /> is <see langword="null" /><para>-or-</para><para><paramref name="imaginaryComponents" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.CreateConstant(System.Int32,Extreme.Mathematics.SingleComplex)">
      <summary>
            Constructs a new constant vector.
            </summary>
      <param name="value">The constant value of all
            the components.</param>
      <param name="length">The length of the vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexConstantVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Divide(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplex)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a constant.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="factor">A number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            divided by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.DotProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.DotProduct(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns the dot product of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A real number that is the dot product of the
            two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to.</param>
      <returns>
        <strong>True</strong> if the specified object is
            identical to this <see cref="T:Extreme.Mathematics.ComplexVector" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.FourierTransform(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns the Fourier transform of a vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the Fourier
            transform of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetAmplitude">
      <summary>
            Returns a vector containing the amplitude (modulus) of each component of this vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the amplitude of the components of this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetComponents">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetEnumerator">
      <summary>
            Returns a <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:Extreme.Mathematics.SingleComplex" /> for this
            <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:Extreme.Mathematics.SingleComplex" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetImaginaryPart">
      <summary>
            Returns a real vector containing the imaginary components of the vector.
            </summary>
      <returns>A single-precision vector containing the imaginary part of each component of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetPhase">
      <summary>
            Returns a vector containing the phase (argument) of each component of this vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the phase of the components of this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetRealPart">
      <summary>
            Returns a real vector containing the real components of the vector.
            </summary>
      <returns>A single-precision vector containing the real part of each component of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetSubvector(Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="range">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value specifying the
            range of components in this instance that will make up the new
            vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The range specified by <paramref name="range" /> is at least
            partly outside the bounds of this <see cref="T:Extreme.Mathematics.ComplexVector" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetSubvector(System.Int32,System.Int32)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="startIndex">The index of the first element of this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to be contained in the new
            vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetSubvector(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="startIndex">The index of the first element of this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.InverseFourierTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Returns the inverse Fourier transform of a vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the inverse Fourier transform
            of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexVector.Item(Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets or sets a range of components of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="range" /> does not equal
            the length of <paramref name="value" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexVector.Item(System.Int32)">
      <summary>
            Gets or sets a specific component of this vector.
            </summary>
      <param name="index">The zero-based index of the component.</param>
    </member>
    <member name="P:Extreme.Mathematics.SingleComplexVector.Length">
      <summary>
            Gets the number of elements in the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Multiply(Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Multiply(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a constant.
            </summary>
      <param name="factor">A number.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Multiply(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Adds the scaled product of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> and a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to this <strong>ComplexVector</strong>.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Multiply(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.MatrixOperationSide)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value
            that indicates whether the matrix <paramref name="matrix" /> is the
            left or right operand of the multiplication.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Negate(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Negates a <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components
            are equal to minus the corresponding component of
            <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Norm">
      <summary>
            Returns the two-norm of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>The two-norm of the <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Norm(System.Int32)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="order">An integer specifying the order
            of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Norm(System.Single)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="order">A float-precision floating-point
            number specifying the order of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Normalize">
      <summary>
            Scales the <see cref="T:Extreme.Mathematics.ComplexVector" /> to make its
            two-norm equal to one.
            </summary>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.NormInternal(System.Int32)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="order">An integer
            specifying the order of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.NormInternal(System.Single)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="order">A <see cref="T:Extreme.Mathematics.SingleComplex" /> value
            specifying the order of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.NormSquared">
      <summary>
            Returns the square of the two-norm of this <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>The square of the two-norm of this <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.OneNorm">
      <summary>
            Returns the one-norm of this <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>The one-norm of this <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Addition(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.ComplexVector" /> values.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            the sum of the corresponding components of
            <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Division(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplex)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a constant.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="factor">A number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            divided by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Equality(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.ComplexVector" /> are equal.
            </summary>
      <param name="vector1">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>
        <span class="keyword">true</span> if the two vectors have the
            same length and identical components; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Explicit(Extreme.Mathematics.ComplexVector)~Extreme.Mathematics.SingleComplexVector">
      <summary>
            Converts a double-precision vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Explicit(Extreme.Mathematics.SingleComplexVector)~Extreme.Mathematics.ComplexVector">
      <summary>
            Converts a single-precision vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.SingleComplexVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Inequality(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.ComplexVector" /> are not equal.
            </summary>
      <param name="vector1">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>
        <span class="keyword">true</span> if the two vectors have different
            lengths, or not all their components are identical;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Multiply(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a constant.
            </summary>
      <param name="factor">A number.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Multiply(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by a constant.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="factor">A number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_Subtraction(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.ComplexVector" /> values.
            </summary>
      <param name="vector1">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to subtract
            from.</param>
      <param name="vector2">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to subtract.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            equal to the corresponding component of
            <paramref name="vector1" /> minus the corresponding component
            of <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.op_UnaryNegation(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Negates a <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components
            are equal to minus the corresponding component of
            <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.SetValue(Extreme.Mathematics.SingleComplex)">
      <summary>
            Sets all the components of the <see cref="T:Extreme.Mathematics.ComplexVector" /> to
            the specified value.
            </summary>
      <param name="value">The value to be assigned to each component
            of this <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.SetValue(Extreme.Mathematics.SingleComplex,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ShallowCopy">
      <summary>
            Makes a shallow copy of this <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Subtract(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Subtracts the product of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> and a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> from this <strong>ComplexVector</strong>.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Subtract(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Subtracts another ComplexVector from this ComplexVector.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to subtract.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Subtract(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.ComplexVector" /> values.
            </summary>
      <param name="vector1">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to subtract
            from.</param>
      <param name="vector2">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to subtract.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> whose components are
            equal to the corresponding component of
            <paramref name="vector1" /> minus the corresponding component
            of <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Swap(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Swaps the elements of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> is not equal to the
            length of <paramref name="vector2" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.SwapElements(System.Int32,System.Int32)">
      <summary>
            Exchanges two elements of the vector.
            </summary>
      <param name="index1">The index of the first element.</param>
      <param name="index2">The index of the second element.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToConjugate">
      <summary>
            Changes the components of the vector to their complex conjugate.
            </summary>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToDenseVector">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that is a copy of
            this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToGeneralVector">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that is a copy of
            this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <returns>A <see cref="T:System.String" /> representation of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToString(System.String)">
      <summary>
            Converts the numeric value of this <see cref="T:Extreme.Mathematics.ComplexVector" /> instance
            to its equivalent string representation, using the
            specified format.
            </summary>
      <param name="format">A format string.</param>
      <returns>A <see cref="T:System.String" /> representation of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToString(System.String,System.IFormatProvider)">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="format">A <see cref="T:System.String" /> specifying the format to use.</param>
      <param name="formatProvider">The <see cref="T:System.IFormatProvider" /> to use to format the value.</param>
      <returns>A <see cref="T:System.String" /> representation of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.ToStringInternal(System.Text.StringBuilder,System.String,System.IFormatProvider)">
      <summary>
            Writes a string representation of this <see cref="T:Extreme.Mathematics.ComplexVector" />
            to an instance of <see cref="T:System.Text.StringBuilder" /> using the specified
            number format.
            </summary>
      <param name="sb">A <see cref="T:System.Text.StringBuilder" /> instance.</param>
      <param name="format">A <see cref="T:System.String" /> used to format the
            vector components.</param>
      <param name="formatProvider">The <see cref="T:System.IFormatProvider" /> to use to format the value.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleComplexVector.Zero">
      <summary>
            Sets all the components of the <see cref="T:Extreme.Mathematics.ComplexVector" /> to 0.
            </summary>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="T:Extreme.Mathematics.SingleInterval">
      <summary>
            Represents an interval of real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.#ctor(System.Double,System.Double)">
      <summary>
            Constructs a new interval.
            </summary>
      <param name="lowerBound">
        <see cref="T:System.Double" /> value that specifies the lower bound of the interval.</param>
      <param name="upperBound">
        <see cref="T:System.Double" /> value that specifies the upper bound of the interval.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Add(Extreme.Mathematics.SingleInterval,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns the sum of two intervals.
            </summary>
      <param name="interval1">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="interval2">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are the sum of the bounds of
            <paramref name="interval1" /> and <paramref name="interval2" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Add(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns an interval shifted by a specified value..
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the sum of the bounds of
            <paramref name="interval" /> and <paramref name="shift" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Add(System.Double,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns an interval shifted by a specified value..
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the sum of the bounds of
            <paramref name="interval" /> and <paramref name="shift" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Contains(System.Double)">
      <summary>
            Tests whether a number is contained in the interval.
            </summary>
      <param name="value">A real number.</param>
      <returns>
        <span class="keyword">true</span> if <paramref name="value" /> lies inside the interval; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Divide(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns a scaled interval.
            </summary>
      <param name="factor">A <see cref="T:System.Double" /> specifying the multiplication factor.</param>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are the bounds of
            <paramref name="interval" /> divided by <paramref name="factor" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Equals(System.Object)">
      <summary>
            Returns a value indicating whether this instance is equal to a specified object.
            </summary>
      <param name="obj">An object to compare with this instance or <see langword="null" />.</param>
      <returns>
        <span class="keyword">true</span> if <paramref name="obj" /> is an instance of
            <see cref="T:Extreme.Mathematics.Interval" /> and equals the value of this instance; otherwise, <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleInterval.LowerBound">
      <summary>
            Gets the lower bound of the interval.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Multiply(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns a scaled interval.
            </summary>
      <param name="factor">A <see cref="T:System.Double" /> specifying the multiplication factor.</param>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are <paramref name="factor" /> times the bounds of
            <paramref name="interval" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Multiply(System.Double,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns a scaled interval.
            </summary>
      <param name="factor">A <see cref="T:System.Double" /> specifying the multiplication factor.</param>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are <paramref name="factor" /> times the bounds of
            <paramref name="interval" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Addition(Extreme.Mathematics.SingleInterval,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns the sum of two intervals.
            </summary>
      <param name="interval1">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="interval2">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are the sum of the bounds of
            <paramref name="interval1" /> and <paramref name="interval2" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Addition(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns an interval shifted by a specified value..
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the sum of the bounds of
            <paramref name="interval" /> and <paramref name="shift" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Addition(System.Double,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns an interval shifted by a specified value..
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the sum of the bounds of
            <paramref name="interval" /> and <paramref name="shift" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Division(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns a scaled interval.
            </summary>
      <param name="factor">A <see cref="T:System.Double" /> specifying the multiplication factor.</param>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are the bounds of
            <paramref name="interval" /> divided by <paramref name="factor" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Equality(Extreme.Mathematics.SingleInterval,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:Extreme.Mathematics.Interval" /> are equal.
            </summary>
      <param name="interval1">A <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="interval2">A <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>
        <span class="keyword">true</span> if <paramref name="interval1" /> and <paramref name="interval1" /> are
            equal; otherwise, <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Inequality(Extreme.Mathematics.SingleInterval,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns a value indicating whether two instances of <see cref="T:Extreme.Mathematics.Interval" /> are not equal.
            </summary>
      <param name="interval1">A <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="interval2">A <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>
        <span class="keyword">true</span> if <paramref name="interval1" /> and <paramref name="interval1" /> are
            not equal; otherwise, <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Multiply(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns a scaled interval.
            </summary>
      <param name="factor">A <see cref="T:System.Double" /> specifying the multiplication factor.</param>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are <paramref name="factor" /> times the bounds of
            <paramref name="interval" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Multiply(System.Double,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns a scaled interval.
            </summary>
      <param name="factor">A <see cref="T:System.Double" /> specifying the multiplication factor.</param>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are <paramref name="factor" /> times the bounds of
            <paramref name="interval" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Subtraction(Extreme.Mathematics.SingleInterval,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns the sum of two intervals.
            </summary>
      <param name="interval1">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="interval2">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are the difference between the bounds of
            <paramref name="interval1" /> and <paramref name="interval2" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Subtraction(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns an interval shifted to the left by a specified value.
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the difference between the bounds of
            <paramref name="interval" /> and <paramref name="shift" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.op_Subtraction(System.Double,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns an interval negated and shifted to the right by a specified value.
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the difference between <paramref name="shift" /> and
            the bounds of <paramref name="interval" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Subtract(Extreme.Mathematics.SingleInterval,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns the sum of two intervals.
            </summary>
      <param name="interval1">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="interval2">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <returns>The interval whose bounds are the difference between the bounds of
            <paramref name="interval1" /> and <paramref name="interval2" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Subtract(Extreme.Mathematics.SingleInterval,System.Double)">
      <summary>
            Returns an interval shifted to the left by a specified value.
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the difference between the bounds of
            <paramref name="interval" /> and <paramref name="shift" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.Subtract(System.Double,Extreme.Mathematics.SingleInterval)">
      <summary>
            Returns an interval negated and shifted to the right by a specified value.
            </summary>
      <param name="interval">An <see cref="T:Extreme.Mathematics.Interval" />.</param>
      <param name="shift">A real number.</param>
      <returns>The interval whose bounds are the difference between <paramref name="shift" /> and
            the bounds of <paramref name="interval" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.ToString">
      <summary>
            Gets a string representation of the interval.
            </summary>
      <returns>A string representation of the interval.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.ToString(System.String)">
      <summary>
            Gets a string representation of the interval.
            </summary>
      <param name="format">A <see cref="T:System.String" /> that specifies the format to use.</param>
      <returns>A string representation of the interval.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleInterval.ToString(System.String,System.IFormatProvider)">
      <summary>
            Gets a string representation of the interval.
            </summary>
      <param name="format">A <see cref="T:System.String" /> that specifies the format to use.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> object used to format the numbers.</param>
      <returns>A string representation of the interval.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleInterval.UpperBound">
      <summary>
            Gets the upper bound of the interval.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleInterval.Width">
      <summary>
            Gets the width of the interval.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.SingleMatrix">
      <summary>
            Represents a matrix, a two-dimensional array of real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SingleMatrix" /> of the specified
            dimensions using the specified data array.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SingleMatrix" /> from serialization
            data.
            </summary>
      <param name="info">The data needed to serialize or deserialize
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Add(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the sum
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and the matrix
            <paramref name="matrix2" /> are not compatible for the specified operation.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Add(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds a multiple of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> to this <see cref="T:Extreme.Mathematics.SingleMatrix" /> and returns
            the result.
            </summary>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before adding.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before adding.</param>
      <param name="factor">Multiplier for the matrix <paramref name="matrix" />.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the sum of the specified form of this matrix
            and the matrix <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and the matrix
            <paramref name="matrix" /> are not compatible for the specified operation.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Add(System.Single)">
      <summary>
            Adds a constant to a matrix.
            </summary>
      <param name="value">The value to add.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second vector of type <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Apply(System.Func{System.Single,System.Single})">
      <summary>
            Applies a function to the elements of a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="function">A delegate that represents a function of one variable.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Apply(System.Func{System.Single,System.Single},Extreme.Mathematics.SingleMatrix)">
      <summary>
            Applies a function to the elements of a <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and returns the result in a new matrix.
            </summary>
      <param name="function">A delegate that represents a function of one variable</param>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> whose elements
            to apply <paramref name="factor" /> to.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ApplyToColumns(System.Func{Extreme.Mathematics.SingleVector,System.Single})">
      <summary>
            Applies a function to each column in a matrix and returns the result as a vector.
            </summary>
      <param name="function">A delegate that represents a real-valued function of multiple variables.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the result of applying
            <paramref name="function" /> to each column of the matrix.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ApplyToRows(System.Func{Extreme.Mathematics.SingleVector,System.Single})">
      <summary>
            Applies a function to each column in a matrix and returns the result as a vector.
            </summary>
      <param name="function">A delegate that represents a real-valued function of multiple variables.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the result of applying
            <paramref name="function" /> to each column of the matrix.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.AsDenseMatrix">
      <summary>
            Returns this matrix as a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that has the same value as
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.AsGeneralMatrix">
      <summary>
            Returns this matrix as a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that has the same value as
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Clone">
      <summary>
            Constructs a deep copy of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
      <exception cref="T:System.NotImplementedException">Always thrown.</exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.ColumnCount">
      <summary>
            Gets the number of columns in the <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.Columns">
      <summary>
            Gets the <see cref="T:Extreme.Mathematics.LinearAlgebra.ColumnCollection" /> for this instance.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ComponentwiseDivide(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Divides the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ComponentwiseDivide(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Divides the components of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleMatrix" /> whose components are equal to the quotient
            of the components of <paramref name="matrix1" /> divided <paramref name="matrix2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix1" /> does not equal the number of rows of <paramref name="matrix2" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not equal the number of columns of <paramref name="matrix2" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies the components of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleMatrix" /> whose components are equal to the
            products of the components of <paramref name="matrix1" /> and <paramref name="matrix2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix1" /> does not equal the number of rows of <paramref name="matrix2" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not equal the number of columns of <paramref name="matrix2" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CopyTo(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            to another matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> whose
            components are to be set.</param>
      <returns>A reference to the destination matrix.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> is less than
            the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> is less than
            the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Create(System.Int32,System.Int32)">
      <summary>
            Constructs a new matrix with the specified
            number of rows and columns
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Create(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,System.Single})">
      <summary>
            Constructs a new matrix with the specified
            number of rows and columns whose elements are all equal to the specified value.
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="filler">A delegate that takes a row, column pair and returns the value of the corresponding component..</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filler" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Create(System.Int32,System.Int32,System.Single)">
      <summary>
            Constructs a new matrix with the specified
            number of rows and columns whose elements are all equal to the specified value.
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="value">The value of each element.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Create(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new matrix of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" /> values
            that contain the elements of the matrix in the order specified by
            <paramref name="elementOrder" /></param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Create(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new matrix of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" /> values
            that contain the elements of the matrix in
            column-major order.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly for component storage without being copied. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />
            will also affect the original array, and vice versa. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new array. </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Create(System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new matrix.
            </summary>
      <param name="RowCount">The number of rows in the matrix.</param>
      <param name="columnCount">The number of columns in the matrix.</param>
      <param name="values">A <see cref="T:System.Single" /> array containing the values of the matrix.</param>
      <param name="offset">Offset of the first component of the matrix in <paramref name="values" />.</param>
      <param name="stride">Distance between the first element of each row or column.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that indicates whether rows or columns
            are stored contiguously.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Create(System.Single[0:,0:])">
      <summary>
            Constructs a new matrix from a
            two-dimensional array.
            </summary>
      <param name="values">A two-dimensional array of
            <see cref="T:System.Single" /> values. The first dimension
            enumerates the rows. The second dimension
            enumerates the columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateBanded(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new general band matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="lowerBandwidth">The number of diagonals below the main diagonal that may contain nonzero components.</param>
      <param name="upperBandwidth">The number of diagonals above the main diagonal that may contain nonzero components.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateConstant(System.Int32,System.Int32,System.Single)">
      <summary>
            Constructs a new constant matrix.
            </summary>
      <param name="value">The constant value of all
            the components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateDiagonal(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
      <param name="RowCount">The number of rows and columns of the matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateDiagonal(System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
      <param name="values">A <see cref="T:System.Single" /> array containing the diagonal components of the matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateLowerBanded(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs an upper or lower band matrix
            </summary>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="RowCount">The number of rows and columns.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="bandwidth">The number of diagonals above or below the main diagonal that may contain
            nonzero components.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateLowerTriangular(System.Int32)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateLowerTriangular(System.Int32,System.Int32)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateLowerTriangular(System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateLowerTriangular(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="values">A float array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            will also affect the original array. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array. </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateLowerTriangular(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new lower triangular matrix.
            </summary>
      <param name="values">A float array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSparse(System.Int32,System.Int32)">
      <summary>
            Constructs a new sparse matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSparse(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new sparse matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="nonzeroCount">The expected number of nonzero components.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="nonzeroCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSparse(System.Int32,System.Int32,System.Int32[],System.Int32[],System.Single[])">
      <summary>
            Constructs a new sparse matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="rowIndexes">An integer array containing the row indexes of the nonzero components.</param>
      <param name="columnIndexes">An integer array containing the column indexes of the nonzero components.</param>
      <param name="values">A <see cref="T:System.Single" /> array containing the values of the nonzero components.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="rowIndexes" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="columnIndexes" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="rowIndexes" /> is not equal to the length of <paramref name="values" />.</para>
        <para>-or-</para>
        <para>The length of <paramref name="columnIndexes" /> is not equal to the length of <paramref name="values" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSparse(System.Int32,System.Int32,System.Single)">
      <summary>
            Constructs a new sparse matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="fillFactor">A value between 0 and 1 that specifies the initial capacity of nonzero components
            as a proportion of the total number of components of the matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="fillFactor" /> is less than or equal to zero or greater than 1.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSymmetric(System.Int32)">
      <summary>
            Constructs a new symmetrical matrix
            with the specified dimension.
            </summary>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSymmetric(System.Int32,System.Single[],Extreme.Mathematics.MatrixTriangle)">
      <summary>
            Constructs a new symmetrical matrix of the
            specified dimension using the specified data.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            the upper or lower triangle of the component data.</param>
      <param name="values">An <see cref="T:System.Array" /> of
            <see cref="T:System.Single" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSymmetric(System.Int32,System.Single[],Extreme.Mathematics.MatrixTriangle,System.Boolean)">
      <summary>
            Constructs a new symmetrical matrix of the
            specified dimension using the specified data.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            the upper or lower triangle of the component data.</param>
      <param name="values">An <see cref="T:System.Array" /> of
            <see cref="T:System.Single" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <param name="reuseComponentArray">A bool value that indicates
            whether the <paramref name="values" /> array should be
            copied or reused for internal storage.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateSymmetricBanded(System.Int32,System.Int32)">
      <summary>
            Constructs a symmetric band matrix.
            </summary>
      <param name="RowCount">The number of rows and columns of the matrix.</param>
      <param name="bandwidth">The upper and lower bandwidth.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateUpperBanded(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs an upper or lower band matrix
            </summary>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="RowCount">The number of rows and columns.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="bandwidth">The number of diagonals above or below the main diagonal that may contain
            nonzero components.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateUpperTriangular(System.Int32)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateUpperTriangular(System.Int32,System.Int32)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateUpperTriangular(System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateUpperTriangular(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="values">A float array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            will also affect the original array. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array. </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.CreateUpperTriangular(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new upper triangular matrix.
            </summary>
      <param name="values">A float array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Divide(Extreme.Mathematics.SingleMatrix,System.Single)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="factor">A real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the matrix <paramref name="matrix" />
            divided by <paramref name="factor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Equals(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Determines whether the specified <see cref="T:Extreme.Mathematics.SingleMatrix" />
            is equal to the current <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="other">The matrix to compare this
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> to.</param>
      <returns>
        <span class="keyword">true</span> if the specified matrix is
            identical to this <see cref="T:Extreme.Mathematics.SingleMatrix" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> to.</param>
      <returns>
        <span class="keyword">true</span> if the specified object is
            identical to this <see cref="T:Extreme.Mathematics.SingleMatrix" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.FrobeniusNorm">
      <summary>
            Returns the Frobenius norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The Frobenius norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetColumn(System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            that points at the specified column.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of rows.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetColumn(System.Int32,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of components that are to make up the new vector.
            </param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br />
            The <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> specified by <paramref name="rowRange" />
            is outside the bounds of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetColumn(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A column <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetColumnEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> than can be used to enumerate
            the columns of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetColumnSums">
      <summary>
            Returns the sums of the components of each column of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the sum of the corresponding column of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetComponents">
      <summary>
            Gets the components of the vector.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetComponents(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the vector.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetConditionNumber">
      <summary>
            Calculates the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetDiagonal">
      <summary>
            Gets a vector view of the diagonal elements
            of this instance.
            </summary>
      <returns>A single-precision vector view of the diagonal
            of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a vector view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A single-precision vector view of the diagonal
            of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to
            -<see cref="P:Extreme.Mathematics.SingleMatrix.RowCount" />, or greater than or equal
            to <see cref="P:Extreme.Mathematics.SingleMatrix.ColumnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetExponential">
      <summary>
            Computes the matrix exponential of a square matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the matrix exponential of this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetInverse">
      <summary>
            Calculates the inverse of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The matrix inverse of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetPseudoInverse">
      <summary>
            Calculates the Moore-Penrose pseudo-inverse of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The matrix inverse of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetRow(System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            that points at the specified row.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetRow(System.Int32,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="columnRange">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br />
            The <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> specified by <paramref name="columnRange" />
            is outside the bounds of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetRow(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            over the specified range.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows
            <para>-or-</para><para><paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para><para>-or-</para><para><paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows
            <para>-or-</para><para><paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para><para>-or-</para><para><paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetRowEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.IEnumerator" /> instance that allows you to
            enumerate the rows of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:Extreme.Mathematics.SingleVector" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetRowSums">
      <summary>
            Returns the sums of the components of each row of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the sum of the corresponding row of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetSingularValues">
      <summary>
            Gets a vector containing the singular values of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the singular values of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetSubmatrix(Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of rows that are to make up the new matrix.
            </param>
      <param name="columnRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of columns that are to make up the new matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that contains the
            specified rows and columns.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetSubmatrix(Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of rows that are to make up the new matrix.
            </param>
      <param name="columnRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of columns that are to make up the new matrix.
            </param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that contains the
            specified rows and columns.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="startRow">The first row of the
            sub-matrix.</param>
      <param name="endRow">The last row of the sub-matrix.</param>
      <param name="startColumn">The first column of the
            sub-matrix.</param>
      <param name="endColumn">The last column of the
            sub-matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that contains the
            specified rows and columns.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is a submatrix of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="startRow">Index of the first row of the sub-matrix.</param>
      <param name="endRow">Index of the last row of the sub-matrix.</param>
      <param name="startColumn">Index of the first column of the sub-matrix.</param>
      <param name="endColumn">Index of the last column of the sub-matrix.</param>
      <param name="rowStride">The increment for the row index in the original matrix corresponding to an
            increment of one in the row index of the new matrix.</param>
      <param name="columnStride">The increment for the column index in the original matrix corresponding to an
            increment of one in the column index of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that contains the
            specified rows and columns.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.InfinityNorm">
      <summary>
            Returns the infinity norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The infinity norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.IsLowerTriangular">
      <summary>
            Gets a value that indicates if all components of the matrix above the main diagonal are zero.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.IsSingular">
      <summary>
            Gets a value indicating whether this matrix is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.IsSymmetrical">
      <summary>
            Gets a value that indicates if the matrix is symmetrical about the main diagonal.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.IsUnitDiagonal">
      <summary>
            Gets a value indicating whether all diagonal elements
            of this instance are equal to 1.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.IsUpperTriangular">
      <summary>
            Gets a value that indicates if all components of the matrix below the main diagonal are zero.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.Item(Extreme.Mathematics.LinearAlgebra.Range,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets or sets the components of a submatrix of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of rows that are to make up the new matrix.
            </param>
      <param name="columnRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range of columns that are to make up the new matrix.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="rowRange" /> does not equal
            the number of rows of <paramref name="value" />.
            <para>-or-</para><para>
            The length of the range specified by <paramref name="columnRange" /> does not equal
            the number of columns of <paramref name="value" />.
            </para></exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.Item(Extreme.Mathematics.LinearAlgebra.Range,System.Int32)">
      <summary>
            Gets or sets the components of a column of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="rowRange">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value that specifies
            the range .
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="rowRange" /> does not equal
            the length of <paramref name="value" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.Item(System.Int32,Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets or sets the components of a row of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="columnRange">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="columnRange" /> does not equal
            the length of <paramref name="value" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.Item(System.Int32,System.Int32)">
      <summary>
            Gets or sets the specified element in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />. Or, <paramref name="row" />
            is less than zero or greater than or equal to the
            number of rows in this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Max">
      <summary>
            Returns the value of the largest component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The value of the largest component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Min">
      <summary>
            Returns the value of the smallest component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The value of the smallest component in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether <paramref name="matrix" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product of this matrix
            and the matrix <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="matrix" /> is <see langword="null" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Multiply(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Multiply(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies a vector by a
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A single-precision vector that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Multiply(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies a vector by a
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A single-precision vector that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Multiply(System.Single,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="factor">A real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the matrix <paramref name="matrix" />
            multiplied by <paramref name="factor" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.NonzeroComponents">
      <summary>
            Gets a collection of the nonzero components of the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.NormInternal(Extreme.Mathematics.MatrixNorm)">
      <summary>
            Calculates a matrix norm.
            </summary>
      <param name="norm">A <see cref="T:System.Char" /> value that specifies the type of norm
            that should be returned.</param>
      <returns>The norm of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.OneNorm">
      <summary>
            Returns the 1-norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The 1-norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Addition(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the sum
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Division(Extreme.Mathematics.SingleMatrix,System.Single)">
      <summary>
            Divides a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="factor">A real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that equals <paramref name="matrix" />
            divided by <paramref name="factor" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Equality(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.SingleMatrix" /> are equal.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>
        <span class="keyword">true</span> if the two vectors have the
            same length and identical components; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Explicit(Extreme.Mathematics.Matrix)~Extreme.Mathematics.SingleMatrix">
      <summary>
            Converts a double-precision matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Explicit(Extreme.Mathematics.SingleMatrix)~Extreme.Mathematics.Matrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.SingleMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> with the same size and with the same components as
            <see cref="!:original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Inequality(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.SingleMatrix" /> are not equal.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>
        <span class="keyword">true</span> if the two matrices have different
            sizes, or not all their components are identical;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Multiply(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Multiply(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies a vector by a
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A single-precision vector that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Multiply(Extreme.Mathematics.SingleMatrix,System.Single)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="factor">A real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product of
            of <paramref name="matrix" /> and <paramref name="factor" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Multiply(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies a vector by a
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A single-precision vector that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Multiply(System.Single,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="factor">A real number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product of
            of <paramref name="matrix" /> and <paramref name="factor" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.op_Subtraction(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is equal to the matrix
            <paramref name="matrix1" /> minus the matrix  <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.PermuteColumns(Extreme.Mathematics.Permutation)">
      <summary>
            Permutes the columns of the matrix using the specified <see cref="T:Extreme.Mathematics.Permutation" />.
            </summary>
      <param name="permutation">A <see cref="T:Extreme.Mathematics.Permutation" /> object.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.PermuteRows(Extreme.Mathematics.Permutation)">
      <summary>
            Permutes the rows of the matrix using the specified <see cref="T:Extreme.Mathematics.Permutation" />.
            </summary>
      <param name="permutation">A <see cref="T:Extreme.Mathematics.Permutation" /> object.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.PermuteRowsAndColumns(Extreme.Mathematics.Permutation)">
      <summary>
            Permutes the rows and columns of the matrix using the specified <see cref="T:Extreme.Mathematics.Permutation" />.
            </summary>
      <param name="permutation">A <see cref="T:Extreme.Mathematics.Permutation" /> object.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.PermuteRowsAndColumns(Extreme.Mathematics.Permutation,Extreme.Mathematics.Permutation)">
      <summary>
            Permutes the rows and columns of the matrix using the specified row and column <see cref="T:Extreme.Mathematics.Permutation" />.
            </summary>
      <param name="rowPermutation">The <see cref="T:Extreme.Mathematics.Permutation" /> used to permute the rows.</param>
      <param name="columnPermutation">The <see cref="T:Extreme.Mathematics.Permutation" /> used to permute the columns.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.RowCount">
      <summary>
            Gets the number of rows in the <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleMatrix.Rows">
      <summary>
            Gets the <see cref="T:Extreme.Mathematics.LinearAlgebra.RowCollection" /> for this instance.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ScaleColumns(Extreme.Mathematics.SingleVector)">
      <summary>
            Scales the columns of the matrix by the values specified by a vector.
            </summary>
      <param name="factors">A single-precision vector containing the scale factors.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factors" /> is <see langowrd="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="factors" /> does not equal the number of columns of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ScaleRows(Extreme.Mathematics.SingleVector)">
      <summary>
            Scales the rows of the matrix by the values specified by a vector.
            </summary>
      <param name="factors">A single-precision vector containing the scale factors.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factors" /> is <see langowrd="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="factors" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.SetToZero">
      <summary>
            Sets all elements of the matrix to zero.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.SetValue(System.Single)">
      <summary>
            Sets all elements of the matrix to the specified value.
            </summary>
      <param name="value">The new value.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ShallowCopy">
      <summary>
            Makes a shallow copy of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.SingleVector" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Subtract(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is equal to the matrix
            <paramref name="matrix1" /> minus the matrix  <paramref name="matrix2" />.
            </returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and the matrix
            <paramref name="matrix2" /> are not compatible for the specified operation.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" /><br>-or-</br>
            The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.SwapColumns(System.Int32,System.Int32)">
      <summary>
            Swaps the columns with the specified indices.
            </summary>
      <param name="column1">The zero-based index of the first column.</param>
      <param name="column2">The zero-based index of the second column.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.SwapRows(System.Int32,System.Int32)">
      <summary>
            Swaps the rows with the specified indices.
            </summary>
      <param name="row1">The zero-based index of the first row.</param>
      <param name="row2">The zero-based index of the second row.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToArray">
      <summary>
            Gets the components of the vector.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToArray(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the vector.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToDenseMatrix">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is a copy of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToGeneralMatrix">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is a copy of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToString(System.String)">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="format">A <see cref="T:System.String" /> specifying the format to use.</param>
      <returns>A <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ToString(System.String,System.IFormatProvider)">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="format">A <see cref="T:System.String" /> specifying the format to use.</param>
      <param name="formatProvider">The <see cref="T:System.IFormatProvider" /> to use to format the value.</param>
      <returns>A <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Trace">
      <summary>
            Gets the sum of the diagonal elements of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The sum of the diagonal elements of this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.TwoNorm">
      <summary>
            Returns the two-norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The two-norm of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.UnscaleColumns(Extreme.Mathematics.SingleVector)">
      <summary>
            Scales the columns of the matrix by the inverse of the values specified by a vector.
            </summary>
      <param name="factors">A single-precision vector containing the scale factors.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factors" /> is <see langowrd="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="factors" /> does not equal the number of columns of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.UnscaleRows(Extreme.Mathematics.SingleVector)">
      <summary>
            Scales the rows of the matrix by the inverse of the values specified by a vector.
            </summary>
      <param name="factors">A single-precision vector containing the scale factors.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="factors" /> is <see langowrd="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="factors" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleMatrix.ValidateAddProductToVector(Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Validates the parameters of a call to <see cref="M:Extreme.Mathematics.SingleMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)" /></summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
    </member>
    <member name="T:Extreme.Mathematics.SingleMatrixFiller">
      <summary>
            Represents a function that can be used to set the components of a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <returns>The value of the component at the specified position.</returns>
    </member>
    <member name="T:Extreme.Mathematics.SingleVector">
      <summary>
            Represents a vector, a one-dimensional array of
            real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SingleVector" /> with the specified
            number of components.
            </summary>
      <param name="length">The number of elements in the new
            <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SingleVector" /> from serialization
            data.
            </summary>
      <param name="info">The data needed to serialize or deserialize
            the vector. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Abs(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the absolute values of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the absolute values of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.AbsoluteMaxIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.AbsoluteMinIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.SingleVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Add(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds the product of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> and a
            <see cref="T:Extreme.Mathematics.SingleVector" /> to this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the length of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the length of
            <paramref name="vector" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Add(Extreme.Mathematics.SingleVector)">
      <summary>
            Adds another vector to this vector.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> to add.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Add(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleVector" /> values.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>A single-precision vector whose components are
            the sum of the corresponding components of
            <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Add(System.Single)">
      <summary>
            Adds a constant to a vector.
            </summary>
      <param name="value">The value to add.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Add(System.Single,Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds the scaled product of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> and a
            <see cref="T:Extreme.Mathematics.SingleVector" /> to this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="factor">The scale factor for the matrix-vector
            product.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the length of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the length of
            <paramref name="vector" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Add(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds a scaled vector to this vector.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">The vector to add.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Apply(System.Func{System.Single,System.Single})">
      <summary>
            Applies a function to the elements of a vector.
            </summary>
      <param name="function">A delegate that represents a function of one variable</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Apply(System.Func{System.Single,System.Single},Extreme.Mathematics.SingleVector)">
      <summary>
            Applies a function to the elements of a vector
            and returns the result in a new vector.
            </summary>
      <param name="function">A delegate that represents a function of one variable</param>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> whose elements
            to apply <paramref name="factor" /> to.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.AsGeneralVector">
      <summary>
            Returns this vector as a dense vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> with the same components as this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Clone">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.SingleVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CloneData">
      <summary>
            If possible, gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ComponentwiseDivide(Extreme.Mathematics.SingleVector)">
      <summary>
            Divides the components of this instance by the corresponding
            components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ComponentwiseDivide(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Divides the components of a vector by the corresponding
            components of another vector.
            </summary>
      <param name="vector1">A single-precision vector.</param>
      <param name="vector2">A single-precision vector.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleVector" /> whose components are equal to the quotient
            of the components of <paramref name="vector1" /> divided <paramref name="vector2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ComponentwiseMultiply(Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ComponentwiseMultiply(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies the components of a vector by the corresponding
            components of another vector.
            </summary>
      <param name="vector1">A single-precision vector.</param>
      <param name="vector2">A single-precision vector.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleVector" /> whose components are equal to the
            products of the components of <paramref name="vector1" /> and <paramref name="vector2" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Convolution(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Calculates the convolution of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>A vector containing the convolution of <paramref name="vector1" /> and
            <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CopyTo(Extreme.Mathematics.SingleVector)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.SingleVector" />
            to another vector.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> whose
            components are to be set.</param>
      <returns>A reference to the destination vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="vector" /> is less than the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CopyTo(Extreme.Mathematics.SingleVector,System.Int32)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.SingleVector" />
            to another vector starting at the specified position.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> whose
            components are to be set.</param>
      <param name="index">The index in <paramref name="vector" />
            where copying is to start.</param>
      <returns>A reference to the destination vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="vector" /> is less than <paramref name="index" /> plus the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CopyTo(System.Single[])">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.SingleVector" />
            to another vector.
            </summary>
      <param name="array">A <see cref="T:System.Single" /> array that
            is to hold the components of this <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="array" /> is less than the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Cos(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the cosines of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the cosines of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Create(System.Collections.Generic.IList{System.Single})">
      <summary>
            Constructs a new vector with the specified
            components.
            </summary>
      <param name="values">An <see cref="T:System.Collections.Generic.IList`1" /> of <see cref="T:System.Double" /> specifying the components of the
            vector.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Create(System.Int32)">
      <summary>
            Constructs a new vector with the specified
            length.
            </summary>
      <param name="length">The length of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Create(System.Int32,System.Func{System.Int32,System.Single})">
      <summary>
            Constructs a new dense vector.
            </summary>
      <param name="length">The length of the vector.</param>
      <param name="filler">A delegate that returns the value of a component given its index.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are initialized using <paramref name="filler" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Create(System.Int32,System.Single[],System.Boolean)">
      <summary>
            Constructs a new dense vector with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />
            will also affect the original array. If <span class="keyword">false</span>, the
            components are copied from <paramref name="values" /> to a new
            array.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="length" /> is less than zero.</para>
        <para>-or-</para>
        <para>The length of <paramref name="values" /> is less than <paramref name="length" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Create(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Constructs a new dense vector.
            </summary>
      <param name="length">The length of the vector.</param>
      <param name="values">A <see cref="T:System.Double" /> array containing the components.</param>
      <param name="offset">The offset of the first element of the vector in <paramref name="values" />.</param>
      <param name="stride">The stride between successive elements of the vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Create(System.Single[])">
      <summary>
            Constructs a new vector with the specified
            components.
            </summary>
      <param name="values">A variable length list of
            float parameters specifying the components of the
            vector, or an array of <see cref="T:System.Single" /> values.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Create(System.Single[],System.Boolean)">
      <summary>
            Constructs a new dense vector with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />
            will also affect the original array.If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateConstant(System.Int32,System.Single)">
      <summary>
            Constructs a new constant vector.
            </summary>
      <param name="value">The constant value of all
            the components.</param>
      <param name="length">The length of the vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateLogarithmicRange(System.Int32,System.Single,System.Single,System.Single,System.Boolean)">
      <summary>
            Constructs a new vector with components evenly spaced in a logarithmic scale.
            </summary>
      <param name="length">The number of values.</param>
      <param name="start">The exponent of the first value in the range.</param>
      <param name="stop">The exponent of the last value in the range.</param>
      <param name="baseValue">The base of the logarithmic scale.</param>
      <param name="endPoint">Indicates whether <paramref name="stop" /> is included in the sequence.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseValue" /> is less than or equal to zero.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateLogarithmicRange(System.Single,System.Int32,System.Int32)">
      <summary>
            Constructs a new vector with components evenly spaced in a logarithmic scale.
            </summary>
      <param name="start">The exponent of the first value in the range.</param>
      <param name="stop">The exponent of the last value in the range.</param>
      <param name="baseValue">The base of the logarithmic scale.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentException">
        <paramref name="stop" /> is less than <paramref name="start" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="baseValue" /> is equal to zero.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateRange(System.Single)">
      <summary>
            Constructs a new vector with components from 0 up to the specified value.
            </summary>
      <param name="stop">The upper bound for the range.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateRange(System.Single,System.Single)">
      <summary>
            Constructs a new vector with components from the specified range..
            </summary>
      <param name="start">The first value in the range.</param>
      <param name="stop">The (inclusive) upper bound for the range.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateRange(System.Single,System.Single,System.Int32)">
      <summary>
            Constructs a new vector with components from the specified range..
            </summary>
      <param name="start">The first value in the range.</param>
      <param name="stop">The (inclusive) upper bound for the range.</param>
      <param name="steps">The number of values.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="steps" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateSparse(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" /> of the specified length.
            </summary>
      <param name="length">The length of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateSparse(System.Int32,System.Int32)">
      <summary>
            Constructs a new sparse vector of the specified length.
            </summary>
      <param name="length">The length of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</param>
      <param name="capacity">An integer specifying the expected number of nonzero components of the vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="capacity" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateSparse(System.Int32,System.Int32[],System.Single[])">
      <summary>
            Constructs a new sparse vector with the specified components.
            </summary>
      <param name="length">The length of the new vector.</param>
      <param name="indexes">An integer array containing the zero-based indexes of the nonzero components.</param>
      <param name="values">A <see cref="T:System.Double" /> array containing the corresponding values.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="indexes" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="values" /> is not equal to the length of <paramref name="indexes" />.</para>
      </exception>
      <exception cref="T:System.ArgumentException">
            One or more elements of <paramref name="indexes" /> is less than zero or greater than or equal to
            <paramref name="length" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.CreateSparse(System.Int32,System.Single)">
      <summary>
            Constructs a new sparse vector of the specified length.
            </summary>
      <param name="length">The length of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</param>
      <param name="fillFactor">A value between 0 and 1 that specifies the initial capacity of nonzero components
            as a proportion of the total number of components of the matrix.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="fillFactor" /> is less than or equal to zero or greater than 1.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Divide(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Divides a vector by a constant.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="factor">A number.</param>
      <returns>A single-precision vector whose components are
            the corresponding components of <paramref name="vector" />
            divided by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.DotProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.DotProduct(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the dot product of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>A real number that is the dot product of the
            two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Equals(Extreme.Mathematics.SingleVector)">
      <summary>
            Determines whether the specified <see cref="T:Extreme.Mathematics.SingleVector" />
            is equal to the current <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="other">The matrix to compare this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to.</param>
      <returns>
        <span class="keyword">true</span> if the specified matrix is
            identical to this <see cref="T:Extreme.Mathematics.SingleVector" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to.</param>
      <returns>
        <span class="keyword">true</span> if the specified object is
            identical to this <see cref="T:Extreme.Mathematics.SingleVector" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Exp(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the exponential of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the exponential of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.FourierTransform(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the Fourier transform of a vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SignalProcessing.ComplexConjugateSignalVector" /> containing the Fourier
            transform of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetEnumerator">
      <summary>
            Returns a <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:System.Single" /> for this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>A <see cref="T:System.Collections.Generic.IEnumerator`1" /> of <see cref="T:System.Single" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetSubvector(Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="range">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Range" /> value specifying the
            range of components in this instance that will make up the new
            vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The range specified by <paramref name="range" /> is at least
            partly outside the bounds of this <see cref="T:Extreme.Mathematics.SingleVector" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetSubvector(System.Int32,System.Int32)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="startIndex">The index of the first element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetSubvector(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="startIndex">The index of the first element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetSubvector(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.Intent)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="startIndex">The index of the first element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <param name="intent">A <see cref="T:Extreme.Mathematics.Intent" /> value that
            specifies the intended use of the subvector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetSum">
      <summary>
            Gets the sum of the components of the vector.
            </summary>
      <returns>The sum of the components.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Inverse(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the inverses (reciprocals) of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the inverses (reciprocals) of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.InverseFourierTransform(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns the inverse Fourier transform of a vector.
            </summary>
      <param name="complexVector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the inverse Fourier transform
            of <paramref name="complexVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="complexVector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.SingleVector.IsSparse">
      <summary>
            Gets a value that indicates whether the vector is sparse.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleVector.Item(Extreme.Mathematics.LinearAlgebra.Range)">
      <summary>
            Gets or sets a range of components of the vector.
            </summary>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of the range specified by <paramref name="range" /> does not equal
            the length of <paramref name="value" />.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleVector.Item(System.Int32)">
      <summary>
            Gets or sets a specific component of this vector.
            </summary>
      <param name="index">The zero-based index of the component.</param>
    </member>
    <member name="P:Extreme.Mathematics.SingleVector.Length">
      <summary>
            Gets the number of elements in the vector.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Log(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the logarithms of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the natural logarithms of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Max">
      <summary>
            Returns the value of the largest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>The value of the largest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Max(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the maximums of the components of two vectors.
            </summary>
      <param name="vector1">A single-precision vector.</param>
      <param name="vector2">A single-precision vector.</param>
      <returns>A vector whose components are the largest of the corresponding components
            of <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector1" /> is not
            equal to the length of <paramref name="vector2" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Max(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Returns a vector whose components are the maximum of the components of a vector
            and a real number..
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="value">A real number.</param>
      <returns>A vector whose components are the largest of the corresponding component
            of <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Max(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the maximum of the components of a vector
            and a real number..
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="value">A real number.</param>
      <returns>A vector whose components are the largest of the corresponding component
            of <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.MaxIndex">
      <summary>
            Returns the index of the largest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>The index of the largest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Min">
      <summary>
            Returns the value of the smallest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>The value of the smallest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Min(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the minimums of the components of two vectors.
            </summary>
      <param name="vector1">A single-precision vector.</param>
      <param name="vector2">A single-precision vector.</param>
      <returns>A vector whose components are the smallest of the corresponding components
            of <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector1" /> is not
            equal to the length of <paramref name="vector2" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Min(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Returns a vector whose components are the minimums of the components of a vector
            and a real number.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="value">A real number.</param>
      <returns>A vector whose components are the smallest of the corresponding component
            of <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Min(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the minimums of the components of a vector
            and a real number.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="value">A real number.</param>
      <returns>A vector whose components are the smallest of the corresponding component
            of <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.MinIndex">
      <summary>
            Returns the index of the smallest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>The index of the smallest component in this
            <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Multiply(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds the scaled product of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> and a
            <see cref="T:Extreme.Mathematics.SingleVector" /> to this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows or columns of <paramref name="matrix" /> does not equal the length of this instance.
            <para>-or-</para><para><paramref name="matrix" /> is not a square matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Multiply(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.MatrixOperationSide)">
      <summary>
            Multiplies a vector by a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value
            that indicates whether the <paramref name="matrix" /> is the
            left or right operand of the multiplication.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows or columns of <paramref name="matrix" /> does not equal the length of this instance.
            <para>-or-</para><para><paramref name="matrix" /> is not a square matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Multiply(System.Single)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Multiply(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies a vector by a constant.
            </summary>
      <param name="factor">A number.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A single-precision vector whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Negate(Extreme.Mathematics.SingleVector)">
      <summary>
            Negates a vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleVector" /> whose components
            are equal to minus the corresponding component of
            <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="P:Extreme.Mathematics.SingleVector.NonzeroComponents">
      <summary>
            Gets a collection of <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleIndexValuePair" /> objects
            representing the nonzero components of this instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SingleVector.NonzeroCount">
      <summary>
            Gets the number of nonzero components in the vector.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Norm">
      <summary>
            Returns the two-norm of the vector.
            </summary>
      <returns>The two-norm of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Norm(System.Int32)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="order">An integer specifying the order
            of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Norm(System.Single)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="order">A float-precision floating-point
            number specifying the order of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Normalize">
      <summary>
            Scales the vector to make its
            two-norm equal to one.
            </summary>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.NormInternal(System.Int32)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="order">An integer
            specifying the order of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.NormInternal(System.Single)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="order">A <see cref="T:System.Single" /> value
            specifying the order of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.NormSquared">
      <summary>
            Returns the square of the two-norm of this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>The square of the two-norm of this <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.OneNorm">
      <summary>
            Returns the one-norm of this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>The one-norm of this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Addition(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.SingleVector" /> values.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>A single-precision vector whose components are
            the sum of the corresponding components of
            <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Addition(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Adds a vector and a constant.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="value">The constant.</param>
      <returns>A single-precision vector whose components are
            the sum of the corresponding components of
            <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Addition(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds a vector and a constant.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="value">The constant.</param>
      <returns>A single-precision vector whose components are
            the sum of the corresponding components of
            <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Division(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Divides a vector by a constant.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="factor">A number.</param>
      <returns>A single-precision vector whose components are
            the corresponding components of <paramref name="vector" />
            divided by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Equality(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.SingleVector" /> are equal.
            </summary>
      <param name="vector1">A single-precision vector.</param>
      <param name="vector2">A single-precision vector.</param>
      <returns>
        <span class="keyword">true</span> if the two vectors have the
            same length and identical components; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Explicit(Extreme.Mathematics.SingleVector)~Extreme.Mathematics.Vector">
      <summary>
            Converts a single-precision vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.SingleVector" /> to convert.</param>
      <returns>A single-precision vector of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Explicit(Extreme.Mathematics.Vector)~Extreme.Mathematics.SingleVector">
      <summary>
            Converts a double-precision vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.Vector" /> to convert.</param>
      <returns>A single-precision vector of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Implicit(System.Single[])~Extreme.Mathematics.SingleVector">
      <summary>
            Implicitly converts a <see cref="T:System.Double" /> array to a vector.
            </summary>
      <param name="values">A <see cref="T:System.Double" /> array.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> equivalent to <paramref name="values" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Inequality(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a value indicating whether two instances
            of <see cref="T:Extreme.Mathematics.SingleVector" /> are not equal.
            </summary>
      <param name="vector1">A single-precision vector.</param>
      <param name="vector2">A single-precision vector.</param>
      <returns>
        <span class="keyword">true</span> if the two vectors have different
            lengths, or not all their components are identical;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Multiply(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Multiplies a vector by a constant.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="factor">A number.</param>
      <returns>A single-precision vector whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Multiply(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies a vector by a constant.
            </summary>
      <param name="factor">A number.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A single-precision vector whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Subtraction(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleVector" /> values.
            </summary>
      <param name="vector1">The <see cref="T:Extreme.Mathematics.SingleVector" /> to subtract
            from.</param>
      <param name="vector2">The <see cref="T:Extreme.Mathematics.SingleVector" /> to subtract.</param>
      <returns>A single-precision vector whose components are
            equal to the corresponding component of
            <paramref name="vector1" /> minus the corresponding component
            of <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Subtraction(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Subtracts a constant from a vector.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="value">The constant.</param>
      <returns>A single-precision vector whose components are
            the difference of the corresponding components of
            <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_Subtraction(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Subtracts a vector from a constant.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="value">The constant.</param>
      <returns>A single-precision vector whose components are
            the difference between the corresponding components of
            <paramref name="vector" /> and <paramref name="value" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.op_UnaryNegation(Extreme.Mathematics.SingleVector)">
      <summary>
            Negates a vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.SingleVector" /> whose components
            are equal to minus the corresponding component of
            <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Permute(Extreme.Mathematics.Permutation)">
      <summary>
            Permutes a vector.
            </summary>
      <param name="permutation">The <see cref="T:Extreme.Mathematics.Permutation" /> to apply to the vector.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Permute(Extreme.Mathematics.SingleVector,Extreme.Mathematics.Permutation)">
      <summary>
            Permutes a vector.
            </summary>
      <param name="vector">The vector to permute.</param>
      <param name="permutation">The <see cref="T:Extreme.Mathematics.Permutation" /> to apply to the vector.</param>
      <returns>
            A new vector that contains the elements of <paramref name="vector" /> permuted using <paramref name="permutation" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Pow(Extreme.Mathematics.SingleVector,System.Int32)">
      <summary>
            Returns a vector whose components are the components of another vector raised to the specified power.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="exponent">The power to raise each component to.</param>
      <returns>A vector whose components are the components of <paramref name="vector" />
            raised to the power <paramref name="exponent" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Pow(Extreme.Mathematics.SingleVector,System.Single)">
      <summary>
            Returns a vector whose components are the components of another vector raised to the specified power.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <param name="exponent">The power to raise each component to.</param>
      <returns>A vector whose components are the components of <paramref name="vector" />
            raised to the power <paramref name="exponent" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.SetToZero">
      <summary>
            Sets all the components of the vector to 0.
            </summary>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.SetValue(System.Single)">
      <summary>
            Sets all the components of the vector to
            the specified value.
            </summary>
      <param name="value">The value to be assigned to each component
            of this <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.SetValue(System.Single,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ShallowCopy">
      <summary>
            Makes a shallow copy of this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Sin(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the sines of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the sines of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Sqrt(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the square roots of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the square roots of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Subtract(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleVector)">
      <summary>
            Subtracts the product of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> and a
            <see cref="T:Extreme.Mathematics.SingleVector" /> from this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the length of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the length of
            <paramref name="vector" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Subtract(Extreme.Mathematics.SingleVector)">
      <summary>
            Subtracts another Vector from this Vector.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> to subtract.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Subtract(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.SingleVector" /> values.
            </summary>
      <param name="vector1">The <see cref="T:Extreme.Mathematics.SingleVector" /> to subtract
            from.</param>
      <param name="vector2">The <see cref="T:Extreme.Mathematics.SingleVector" /> to subtract.</param>
      <returns>A single-precision vector whose components are
            equal to the corresponding component of
            <paramref name="vector1" /> minus the corresponding component
            of <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Swap(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Swaps the elements of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> is not equal to the
            length of <paramref name="vector2" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector1" /> does not equal the length of <paramref name="vector2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.SwapElements(System.Int32,System.Int32)">
      <summary>
            Exchanges two elements of the vector.
            </summary>
      <param name="index1">The index of the first element.</param>
      <param name="index2">The index of the second element.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Tan(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a vector whose components are the tangents of the components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A vector whose components are the tangents of the components of <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToArray">
      <summary>
            Gets the components of the vector.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToColumnMatrix">
      <summary>
            Creates a matrix with the vector as its only column..
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToDenseVector">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is a copy of
            this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Vector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToGeneralVector">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is a copy of
            this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToSparseVector">
      <summary>
            Creates a copy of the vector as a <see cref="M:Extreme.Mathematics.SingleVector.ToSparseVector" />.
            </summary>
      <returns>A <see cref="M:Extreme.Mathematics.SingleVector.ToSparseVector" /> with the same value as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToString">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <returns>A <see cref="T:System.String" /> representation of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToString(System.String)">
      <summary>
            Converts the numeric value of this <see cref="T:Extreme.Mathematics.SingleVector" /> instance
            to its equivalent string representation, using the
            specified format.
            </summary>
      <param name="format">A format string.</param>
      <returns>A <see cref="T:System.String" /> representation of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToString(System.String,System.IFormatProvider)">
      <summary>
            Returns a <see cref="T:System.String" /> representation of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="format">A <see cref="T:System.String" /> specifying the format to use.</param>
      <param name="formatProvider">The <see cref="T:System.IFormatProvider" /> to use to format the value.</param>
      <returns>A <see cref="T:System.String" /> representation of this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.ToStringInternal(System.Text.StringBuilder,System.String,System.IFormatProvider)">
      <summary>
            Writes a string representation of this <see cref="T:Extreme.Mathematics.SingleVector" />
            to an instance of <see cref="T:System.Text.StringBuilder" /> using the specified
            number format.
            </summary>
      <param name="sb">A <see cref="T:System.Text.StringBuilder" /> instance.</param>
      <param name="format">A <see cref="T:System.String" /> used to format the
            vector components.</param>
      <param name="provider">The <see cref="T:System.IFormatProvider" /> to use to format the value.</param>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.WeightedNorm(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the weighted two-norm of the vector.
            </summary>
      <param name="weightVector"></param>
      <returns>The two-norm of the vector.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The vector <paramref name="weightVector" /> is not the same length as this vector.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SingleVector.Zero">
      <summary>
            Sets all the components of the vector to 0.
            </summary>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="T:Extreme.Mathematics.SingleVectorFiller">
      <summary>
            Represents a delegate that can be used to set the components of a vector.
            </summary>
      <param name="index">The index of the component.</param>
      <returns>The value of the component at the specified index.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.ISingleLeastSquaresSolver">
      <summary>
            Represents an object that can solve a system of linear
            equations in the least squares sense.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleLeastSquaresSolver.LeastSquaresSolve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the vector <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleLeastSquaresSolver.LeastSquaresSolve(Extreme.Mathematics.SingleVector)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" /> and overwrites
            the right-hand side with the result.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix underlying
            this system of equations.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix">
      <summary>
            Represents the methods available for matrices that can be resized.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.AppendColumn">
      <summary>
            Appends an empty column at the end of a matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.AppendColumn(Extreme.Mathematics.SingleVector)">
      <summary>
            Appends a column at the end of a matrix.
            </summary>
      <param name="data">A single-precision vector containing the data for the column.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The legth of <paramref name="data" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.AppendColumns(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Appends zero or more columns at the end of a matrix.
            </summary>
      <param name="data">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the data for the column.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="data" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.AppendRow">
      <summary>
            Appends an empty row at the end of a matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.AppendRow(Extreme.Mathematics.SingleVector)">
      <summary>
            Appends a row at the end of a matrix.
            </summary>
      <param name="data">A single-precision vector containing the data for the row.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The legth of <paramref name="data" /> does not equal the number of columns of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.AppendRows(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Appends zero or more rows at the end of a matrix.
            </summary>
      <param name="data">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the data for the row.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of columns of <paramref name="data" /> does not equal the number of columns of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.DeleteColumn(System.Int32)">
      <summary>
            Deletes a column from a matrix.
            </summary>
      <param name="column">The zero-based index of the column to delete.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.DeleteColumns(System.Int32,System.Int32)">
      <summary>
            Deletes a series of columns from a matrix.
            </summary>
      <param name="column">The zero-based index of the first column to delete.</param>
      <param name="count">The number of columns to delete.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns.
            <para>-or-</para><para><paramref name="count" /> is less than zero or greater than the number of columns
            from <paramref name="column" /> to the end.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.DeleteRow(System.Int32)">
      <summary>
            Deletes a row from a matrix.
            </summary>
      <param name="row">The zero-based index of the row to delete.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.DeleteRows(System.Int32,System.Int32)">
      <summary>
            Deletes a series of rows from a matrix.
            </summary>
      <param name="row">The zero-based index of the first row to delete.</param>
      <param name="count">The number of rows to delete.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows.
            <para>-or-</para><para><paramref name="count" /> is less than zero or greater than the number of rows
            from <paramref name="row" /> to the end.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.InsertColumn(System.Int32,Extreme.Mathematics.SingleVector)">
      <summary>
            Inserts a column into a matrix that the specified index.
            </summary>
      <param name="index">The index of the new column.</param>
      <param name="data">A single-precision vector containing the data for the column.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater
            than the number of columns.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="data" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.InsertColumns(System.Int32,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Inserts zero or more columns into a matrix that the specified index.
            </summary>
      <param name="index">The index where the new columns will be inserted.</param>
      <param name="data">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the data for the columns.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater
            than the number of columns.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="data" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.InsertRow(System.Int32,Extreme.Mathematics.SingleVector)">
      <summary>
            Inserts a row into a matrix that the specified index.
            </summary>
      <param name="index">The index of the new row.</param>
      <param name="data">A single-precision vector containing the data for the row.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater
            than the number of rows.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="data" /> does not equal the number of columns of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.InsertRows(System.Int32,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Inserts zero or more rows into a matrix that the specified index.
            </summary>
      <param name="index">The index where the new rows will be inserted.</param>
      <param name="data">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the data for the rows.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater
            than the number of rows.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of columns of <paramref name="data" /> does not equal the number of columns of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.ReplaceColumns(System.Int32,System.Int32,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Inserts zero or more columns into a matrix in place of zero or more other columns.
            </summary>
      <param name="index">The index of the first column that will be replaced.</param>
      <param name="count">The number of columns to replace.</param>
      <param name="data">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the data for the columns.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater
            than the number of columns.
            <para>-or-</para><para><paramref name="count" /> is less than zero or greater than the number of columns
            from <paramref name="index" /> to the end.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="data" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.ReplaceRows(System.Int32,System.Int32,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Inserts zero or more rows into a matrix in place of zero or more other rows.
            </summary>
      <param name="index">The index of the first row that will be replaced.</param>
      <param name="count">The number of rows to replace.</param>
      <param name="data">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the data for the rows.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater
            than the number of rows.
            <para>-or-</para><para><paramref name="count" /> is less than zero or greater than the number of rows
            from <paramref name="index" /> to the end.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of columns of <paramref name="data" /> does not equal the number of columns of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.ISingleResizableMatrix.Resize(System.Int32,System.Int32)">
      <summary>
            Resizes a matrix.
            </summary>
      <param name="RowCount">The new number of rows.</param>
      <param name="columnCount">The new number of columns.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.ISingleStorage">
      <summary>
            Represents the interface that allows access to an object's
            internal storage of float-precision floating-point numbers.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.ISingleStorage.StorageArray">
      <summary>
            Gets the <see cref="T:System.Single" /> array that stores
            the data for the instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.ISingleStorage.StorageIncrement">
      <summary>
            Gets the increment between successive elements of this
            instance in the <see cref="P:Extreme.Mathematics.LinearAlgebra.ISingleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.ISingleStorage.StorageOffset">
      <summary>
            Gets the index of the first element of this instance
            in the <see cref="P:Extreme.Mathematics.LinearAlgebra.ISingleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Kernel">
      <summary>
            Encapsulates the currently active BLAS implementation.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.ComplexLapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.ComplexLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.ComplexLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.ComplexLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.ComplexSparse">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.Lapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.Level1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.Level2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.Level3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Kernel.Sparse">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Kernel.UseFromAssembly(System.Reflection.Assembly)">
      <summary>
            Instructs the library to use a custom BLAS implementation contained in a .NET assembly.
            </summary>
      <param name="assembly">The <see cref="T:System.Reflection.Assembly" /> that contains the implementation.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Kernel.UseHybrid">
      <summary>
            Instructs the library to use a hybrid of the managed and default native BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Kernel.UseHybrid(Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider)">
      <summary>
            Instructs the library to use the managed and the specified native BLAS implementation.
            </summary>
      <param name="nativeProvider">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider" /> object that specifies the alternate provider.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Kernel.UseManaged">
      <summary>
            Instructs the library to use the managed BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Kernel.UseNative">
      <summary>
            Instructs the library to use the native BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Kernel.UseProvider(Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider)">
      <summary>
            Instructs the library to use the specified <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider" />.
            </summary>
      <param name="provider">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider" /> object.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Kernel.WithMaxDegreeOfParallelism(System.Int32)">
      <summary>
            Returns a managed linear algebra provider that uses the specified degree of parallelism.
            </summary>
      <param name="degree">An integer that specifies the degree of parallelism.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider" /> that will use at most <paramref name="degree" /> threads.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition">
      <summary>
            Represents the Cholesky decomposition of a
            positive-definite symmetric <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleBandMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.CholeskyDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleBandMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.CholeskyDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.Decompose">
      <summary>
            Performs the actual Cholesky decomposition.
            </summary>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixNotPositiveDefiniteException">The
            matrix is not positive definite.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the decomposed <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the factorized
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of the matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally overwrites
            the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandCholeskyDecomposition.UpperTriangularFactor">
      <summary>
            Gets the lower <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.CholeskyDecomposition" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition">
      <summary>
            Represents the LU decomposition of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleBandMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.LUDecomposition" /> object.,
            </summary>
      <param name="bandMatrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bandMatrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleBandMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.LUDecomposition" /> object.
            </summary>
      <param name="bandMatrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="bandMatrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="bandMatrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.ApplyP(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the matrix
            <paramref name="matrix" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> is returned.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the elements of
            <paramref name="matrix" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.ApplyP(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and returns the result as a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /><paramref name="matrix" />
            with its elements permuted.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.ApplyP(Extreme.Mathematics.SingleVector)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a vector.
            </summary>
      <param name="vector">A single-precision vector with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleVector" /><paramref name="vector" />
            with its elements permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.ApplyP(Extreme.Mathematics.SingleVector,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a vector.
            </summary>
      <param name="vector">A single-precision vector with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="vector" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.SingleVector" /> is returned.
            </param>
      <returns>A single-precision vector with the elements of
            <paramref name="vector" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.Decompose">
      <summary>
            Performs the actual LU decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the matrix underlying this
            system of equations.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandLUDecomposition.UpperTriangularFactor">
      <summary>
            Gets the upper <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.LUDecomposition" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix">
      <summary>
            Represents a sparse matrix with nonzero elements only on a diagonal band containing the main diagonal.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs an upper or lower band matrix
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="RowCount">The number of rows and columns.</param>
      <param name="bandwidth">The number of diagonals above or below the main diagonal that may contain
            nonzero components.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new triangular band matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="bandwidth">The number of diagonals above or below the main diagonal
            that may contain nonzero components.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a symmetric band matrix.
            </summary>
      <param name="RowCount">The number of rows and columns of the matrix.</param>
      <param name="bandwidth">The upper and lower bandwidth.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new general band matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="lowerBandwidth">The number of diagonals below the main diagonal that may contain nonzero components.</param>
      <param name="upperBandwidth">The number of diagonals above the main diagonal that may contain nonzero components.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Constructs a new band matrix.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="lowerBandwidth">The number of diagonals below the main diagonal that may contain nonzero components.</param>
      <param name="upperBandwidth">The number of diagonals above the main diagonal that may contain nonzero components.</param>
      <param name="allocateForLUDecomposition">A <see cref="T:System.Boolean" /> value that indicates whether extra space should
            be allocated to store the components of the LU decomposition of the matrix.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.CopyTo(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            to another matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> whose
            components are to be set.</param>
      <returns>A reference to the destination matrix.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> is less than
            the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> is less than
            the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.Extract(Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix,Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new upper or lower <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> from the components of a triangular matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that supplies the components.</param>
      <param name="bandwidth">The bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>
            A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> with the same components as <paramref name="matrix" /> with
            lower and upper bandwidth <paramref name="bandwidth" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.Extract(Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix,Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.Intent)">
      <summary>
            Constructs a new upper or lower <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> from the components of a triangular matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that supplies the components.</param>
      <param name="bandwidth">The bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <param name="intent">A <see cref="T:Extreme.Mathematics.Intent" /> value that specifies the intended use of the extracted
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <returns>
            A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> with the same components as <paramref name="matrix" /> with
            bandwidth equal to <paramref name="bandwidth" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.Extract(Extreme.Mathematics.SingleMatrix,System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> from the components of another matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that supplies the components.</param>
      <param name="lowerBandwidth">The lower bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="upperBandwidth">The upper bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <returns>
            A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> with the same components as <paramref name="matrix" /> with
            lower bandwidth <paramref name="lowerBandwidth" /> and upper bandwidth <paramref name="upperBandwidth" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.Extract(Extreme.Mathematics.SingleMatrix,System.Int32,System.Int32,Extreme.Mathematics.Intent)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> from the components of another matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that supplies the components.</param>
      <param name="lowerBandwidth">The lower bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="upperBandwidth">The upper bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="intent">A <see cref="T:Extreme.Mathematics.Intent" /> value that specifies the intended use of the extracted
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <returns>
            A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> with the same components as <paramref name="matrix" /> with
            lower bandwidth <paramref name="lowerBandwidth" /> and upper bandwidth <paramref name="upperBandwidth" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.ExtractSymmetric(Extreme.Mathematics.SingleMatrix,System.Int32,Extreme.Mathematics.MatrixTriangle)">
      <summary>
            Constructs a new symmetric <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> from the components of a matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that supplies the components.</param>
      <param name="bandwidth">The bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the components are to be taken from the upper or lower
            triangular part of <paramref name="matrix" />.</param>
      <returns>
            A symmetric <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> with the same components as <paramref name="matrix" /> with
            bandwidth <paramref name="bandwidth" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.ExtractSymmetric(Extreme.Mathematics.SingleMatrix,System.Int32,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.Intent)">
      <summary>
            Constructs a new symmetric <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> from the components of a matrix.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that supplies the components.</param>
      <param name="bandwidth">The bandwidth of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the components are to be taken from the upper or lower
            triangular part of <paramref name="matrix" />.</param>
      <param name="intent">A <see cref="T:Extreme.Mathematics.Intent" /> value that specifies the intended use of the extracted
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.</param>
      <returns>
            A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> with the same components as <paramref name="matrix" /> with
            bandwidth equal to <paramref name="bandwidth" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A column <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a vector view of the diagonal elements
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A single-precision vector view of the diagonal
            of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.GetInverse">
      <summary>
            Calculates the inverse matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            is singular and does not have an inverse.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows
            <para>-or-</para><para><paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para><para>-or-</para><para><paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsLowerTriangular">
      <summary>
            Gets a value indicating whether this
            instance is lower triangular.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsSymmetric">
      <summary>
            Gets a value indicating whether this
            instance is triangleMode triangular.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsSymmetrical">
      <summary>
            Gets a value that indicates if the matrix is symmetrical about the main diagonal.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsUnitDiagonal">
      <summary>
            Gets a value indicating whether all diagonal elements
            of this instance are equal to 1.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.IsUpperTriangular">
      <summary>
            Gets a value indicating whether this
            instance is triangleMode triangular.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.LowerBandwidth">
      <summary>
            Gets the lower bandwidth of the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.BandMatrix)~Extreme.Mathematics.LinearAlgebra.SingleBandMatrix">
      <summary>
            Converts a double-precision band matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.BandMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleBandMatrix)~Extreme.Mathematics.LinearAlgebra.BandMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.BandMatrix" /> with the same size and with the same components as
            <paramref name="original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the vector <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.ToArray(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the vector.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.ToGeneralBandMatrix">
      <summary>
            Makes a copy of this instance and returns it as a general
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is a copy of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.ToGeneralBandMatrix(System.Boolean)">
      <summary>
            Makes a copy of this instance and returns it as a general
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix" />.
            </summary>
      <param name="allocateForLUDecomposition">A <see cref="T:System.Boolean" /> that indicates
            whether to allocate extra storage for a subsequent LU decomposition.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is a copy of
            this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.TotalBandwidth">
      <summary>
            Gets the total bandwidth of the matrix.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandMatrix.UpperBandwidth">
      <summary>
            Gets the upper bandwidth of the matrix.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleBandVector">
      <summary>
            Represents a vector that has one or more zero components at
            the beginning and/or at the end.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" /> with the specified
            length and non-zero range.
            </summary>
      <param name="length">The length of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.</param>
      <param name="startIndex">The index of the first non-zero component
            of this vector.</param>
      <param name="endIndex">The index of the last non-zero component
            of this vector</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para><para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.#ctor(System.Int32,System.Int32,System.Int32,System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" /> with the specified
            length and non-zero omponents.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="startIndex">The index of the first non-zero component
            of this vector.</param>
      <param name="endIndex">The index of the last non-zero component
            of this vector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para><para>-or-</para><para><paramref name="endIndex" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.#ctor(System.Int32,System.Int32,System.Int32,System.Single[],System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" /> with the specified
            length and non-zero omponents.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="startIndex">The index of the first non-zero component
            of this vector.</param>
      <param name="endIndex">The index of the last non-zero component
            of this vector.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this instance
            will also affect the original array.If <span class="keyword">false</span>, the
            components are copied from <paramref name="values" /> to a new
            array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para><para>-or-</para><para><paramref name="endIndex" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            instance that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            instance that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.AbsoluteMaxIndex">
      <summary>
            Returns the index of the component in this
            instance that has the largest absolute
            value.
            </summary>
      <returns>The index of the component in this
            instance that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            instance that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            instance that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.AbsoluteMinIndex">
      <summary>
            Returns the index of the component in this
            instance that has the smallest absolute
            value.
            </summary>
      <returns>The index of the component in this
            instance that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Add(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds a scaled vector to this instance.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> to add.</param>
      <returns>A reference to this vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="vector" /> does not equal the length of
            this instance.</para>
      </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            An attempt is made to modify a component of a fixed
            <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Apply(System.Func{System.Single,System.Single})">
      <summary>
            Applies a function to the writeable elements of a vector.
            </summary>
      <param name="function">A delegate that represents a function of one variable</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this instance using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.CopyTo(Extreme.Mathematics.SingleVector,System.Int32)">
      <summary>
            Copies the components of this instance
            to another <see cref="T:Extreme.Mathematics.SingleVector" /> starting at the specified position.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> whose
            components are to be set.</param>
      <param name="index">The index in <paramref name="vector" />
            where copying is to start.</param>
      <returns>A reference to the copied vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="vector" /> is less than <paramref name="index" /> plus the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.CopyTo(System.Single[])">
      <summary>
            Copies the components of this instance
            to another vector.
            </summary>
      <param name="array">A <see cref="T:System.Single" /> array that
            is to hold the components of this instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="array" /> is less than the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.DotProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandVector.EndIndex">
      <summary>
            Gets the index of the last non-zero component in this vector.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to.</param>
      <returns>
        <span class="keyword">true</span> if the specified object is
            identical to this instance; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.GetEnumerator">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator" /> for this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.GetSubvector(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.Intent)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="startIndex">The index of the first element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            <see cref="T:Extreme.Mathematics.SingleVector" /> to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this instance corresponding to an
            increment of one in the new vector.</param>
      <param name="intent">A <see cref="T:Extreme.Mathematics.Intent" /> value that
            specifies the intended use of the subvector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.GetSum">
      <summary>
            Gets the sum of the components of the vector.
            </summary>
      <returns>The sum of the components.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.IsComponentWritable(System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Max">
      <summary>
            Returns the value of the largest component in this
            instance.
            </summary>
      <returns>The value of the largest component in this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.MaxIndex">
      <summary>
            Returns the index of the largest component in this instance.
            </summary>
      <returns>The index of the largest component in this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Min">
      <summary>
            Returns the value of the smallest component in this instance.
            </summary>
      <returns>The value of the smallest component in this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.MinIndex">
      <summary>
            Returns the index of the smallest component in this instance.
            </summary>
      <returns>The index of the smallest component in this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Multiply(System.Single)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            The vector has a unit element and <paramref name="factor" /> is not equal to 1.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.OneNorm">
      <summary>
            Returns the one-norm of this instance.
            </summary>
      <returns>The one-norm of this instance.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.BandVector)~Extreme.Mathematics.LinearAlgebra.SingleBandVector">
      <summary>
            Converts a double-precision band vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleBandVector)~Extreme.Mathematics.LinearAlgebra.BandVector">
      <summary>
            Converts a single-precision band vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.SetValue(System.Single)">
      <summary>
            Sets all the writeable components of this instance to
            the specified value.
            </summary>
      <param name="value">The value to be assigned to each component
            of this instance.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.SetValue(System.Single,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            An attempt is made to modify a component of a fixed
            <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandVector.StartIndex">
      <summary>
            Gets the index of the first non-zero component in this vector.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandVector.StorageArray">
      <summary>
            Gets the <see cref="T:System.Single" /> array that stores
            the data for the instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandVector.StorageIncrement">
      <summary>
            Gets the increment between successive elements of this
            instance in the <see cref="P:Extreme.Mathematics.LinearAlgebra.IDoubleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandVector.StorageOffset">
      <summary>
            Gets the index of the first element of this instance
            in the <see cref="P:Extreme.Mathematics.LinearAlgebra.IDoubleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.Swap(Extreme.Mathematics.LinearAlgebra.SingleBandVector,Extreme.Mathematics.LinearAlgebra.SingleBandVector)">
      <summary>
            Swaps the elements of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.</param>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> is not equal to the length of
            <paramref name="vector2" />.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">The position of the
            non-zero part of <paramref name="vector1" /> is not equal to the position
            of the non-zero part of <paramref name="vector2" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.ToArray">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.ToDenseVector">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is a copy of
            this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Vector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator">
      <summary>
            Represents an object that iterates over the components of
            a <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator.#ctor(Extreme.Mathematics.LinearAlgebra.SingleBandVector)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator" />
            for the specified <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator.Current">
      <summary>
            Gets or the current component of the <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator.Dispose">
      <summary>
            Implements the IDisposable interface.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator.MoveNext">
      <summary>
            Advances the enumerator to the next component of the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.
            </summary>
      <returns>
        <span class="keyword">true</span> if the enumerator was successfully
            advanced to the next component; <span class="keyword">false</span> if the
            enumerator has passed the last component of the
            <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleBandVector.BandVectorEnumerator.Reset">
      <summary>
            Sets the enumerator to its initial position, which is
            before the first component of the <see cref="T:Extreme.Mathematics.LinearAlgebra.BandVector" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition">
      <summary>
            Represents the Cholesky decomposition of a
            positive-definite <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.CholeskyDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.CholeskyDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.Decompose">
      <summary>
            Performs the actual Cholesky decomposition.
            </summary>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixNotPositiveDefiniteException">The
            matrix is not positive definite.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the decomposed <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the factorized
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is the inverse matrix of the
            <see cref="P:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.BaseMatrix">base matrix</see> of this decomposition.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.LowerTriangularFactor">
      <summary>
            Gets the lower <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.CholeskyDecomposition" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of the matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally overwrites
            the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleCholeskyDecomposition.TryDecompose">
      <summary>
            Attempts to perform the actual Cholesky decomposition.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleColumnCollection">
      <summary>
            Represents the collection of columns of a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleColumnCollection.Count">
      <summary>
            Gets the number of columns in the collection.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleColumnCollection.GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for this <see cref="T:Extreme.Mathematics.LinearAlgebra.ColumnCollection" />.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for this <see cref="T:Extreme.Mathematics.LinearAlgebra.ColumnCollection" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleColumnCollection.Item(System.Int32)">
      <summary>
            Gets or sets the components of the specified column in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.ColumnCollection" />.
            </summary>
      <param name="index">The zero-based index of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the number of columns in the matrix.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleColumnCollection.Permute(Extreme.Mathematics.Permutation)">
      <summary>
            Permutes the columns.
            </summary>
      <param name="permutation">A <see cref="T:Extreme.Mathematics.Permutation" /> object.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix">
      <summary>
            Represents a matrix whose components all have the same value..
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.#ctor(System.Int32,System.Int32,System.Single)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="value">The value of each component.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="a" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="b" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a vector view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A single-precision vector containing the diagonal components if
            <paramref name="index" /> equals the index of the nonzero diagonal; otherwise
            a <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" /> with value zero.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to -
            <see cref="F:Extreme.Mathematics.Matrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.Matrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetInverse">
      <summary>
            Calculates the inverse of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" /> that is the inverse of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is a submatrix of
            this matrix.
            </summary>
      <param name="startRow">Index of the first row of the sub-matrix.</param>
      <param name="endRow">Index of the last row of the sub-matrix.</param>
      <param name="startColumn">Index of the first column of the sub-matrix.</param>
      <param name="endColumn">Index of the last column of the sub-matrix.</param>
      <param name="rowStride">The increment for the row index in the original matrix corresponding to an
            increment of one in the row index of the new matrix.</param>
      <param name="columnStride">The increment for the column index in the original matrix corresponding to an
            increment of one in the column index of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not the new matrix should be transposed.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that contains the specified rows and columns. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.IsSingular">
      <summary>
            Gets a value indicating whether this matrix is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.ConstantMatrix)~Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix">
      <summary>
            Converts a double-precision constant matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix)~Extreme.Mathematics.LinearAlgebra.ConstantMatrix">
      <summary>
            Converts a single-precision matrix to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.SingleVector" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.ToArray(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the vector.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleConstantVector">
      <summary>
            Represents a vector whose components are all the same.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.#ctor(System.Int32,System.Single)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" />.
            </summary>
      <param name="value">The constant value of all
            the components.</param>
      <param name="length">The length of the vector.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.SingleVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="method" /> is not a valid <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.DotProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>Always returns <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.ConstantVector)~Extreme.Mathematics.LinearAlgebra.SingleConstantVector">
      <summary>
            Converts a double-precision constant vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleConstantVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleConstantVector)~Extreme.Mathematics.LinearAlgebra.ConstantVector">
      <summary>
            Converts a single-precision vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleConstantVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.SetValue(System.Single,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            An attempt is made to modify a component of a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.ToArray">
      <summary>
            Gets the components of the vector.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleConstantVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Vector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleDecomposition">
      <summary>
            Represents a matrix decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.#ctor(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDecomposition" /> object.,
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is to be
            factorized.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.#ctor(Extreme.Mathematics.SingleMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDecomposition" /> object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is to be
            factorized.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.BaseMatrix">
      <summary>
            Gets the underlying matrix of the decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.Decompose">
      <summary>
            Performs the actual decomposition.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.Done">
      <summary>
            Gets or sets a value that indicates whether the decomposition
            has been performed.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="P:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.BaseMatrix" /> of this decomposition
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.Overwrite">
      <summary>
            Gets or sets a value indicating whether the
            <see cref="P:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.BaseMatrix" /> should be overwritten by
            its decomposition.
            </summary>
      <exception cref="T:System.InvalidOperationException">The
            property is read-only because the matrix has already
            been factorized.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDecomposition.SetSingular">
      <summary>
            Sets a flag that indicates the underlying matrix of this
            decomposition is singular.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix">
      <summary>
            Represents a general, dense, square or rectangular <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the specified
            number of rows and columns
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the specified
            number of rows and columns
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order of the elements in
            the storage array <paramref name="values" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,System.Func{System.Int32,System.Int32,System.Single})">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the specified
            number of rows and columns whose elements are all equal to the specified value.
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="filler">A delegate that takes a row, column pair and returns the value of the corresponding component..</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="filler" /> is <see langword="null" />.
            </exception>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,System.Single)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the specified
            number of rows and columns whose elements are all equal to the specified value.
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="value">The value of each element.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" /> values
            that contain the elements of the matrix in
            column-major elementOrder.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" /> values
            that contain the elements of the matrix in the order specified by
            <paramref name="elementOrder" /></param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" /> values
            that contain the elements of the matrix in
            column-major elementOrder.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly for component storage without being copied. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />
            will also affect the original array, and vice versa. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new array. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,System.Single[],System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" /> values
            that contain the elements of the matrix in
            column-major elementOrder.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly for component storage without being copied. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />
            will also affect the original array, and vice versa. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="RowCount">The number of rows in the matrix.</param>
      <param name="columnCount">The number of columns in the matrix.</param>
      <param name="values">A <see cref="T:System.Single" /> array containing the values of the matrix.</param>
      <param name="offset">Offset of the first component of the matrix in <paramref name="data" />.</param>
      <param name="stride">Distance between the first element of each row or column.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that indicates whether rows or columns
            are stored contiguously.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> from serialization
            data.
            </summary>
      <param name="info">The data needed to serialize or deserialize
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.#ctor(System.Single[0:,0:])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> from a
            two-dimensional array.
            </summary>
      <param name="values">A two-dimensional array of
            <see cref="T:System.Single" /> values. The first dimension
            enumerates the rows. The second dimension
            enumerates the columns.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Add(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> objects and returns the result.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the sum
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="matrix1" /> do not
            equal the dimensions of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Add(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> objects and stores the
            result in a third <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="factor">A <see cref="T:System.Single" /> that specifies the
            multiplier for the second matrix.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="resultMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to receive
            the result of the multiplication.</param>
      <returns>A reference to <paramref name="resultMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para><para>-or-</para><para><paramref name="resultMatrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of <paramref name="matrix2" /> does not
            equal the dimensions of <paramref name="matrix1" />.
            <para>-or-</para><para>The dimensions of <paramref name="resultMatrix" /> does not
            equal the dimensions of <paramref name="matrix1" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Add(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds a <see cref="T:Extreme.Mathematics.SingleMatrix" /> to this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to add
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of the matrix <paramref name="matrix" />
            do not match the dimensions of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Add(System.Single,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds a multiple of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> to this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="factor">The multiplication factor.</param>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to add
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of the matrix <paramref name="matrix" />
            do not match the dimensions of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.AddOuterProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Updates a matrix with the outer product of a
            <see cref="T:Extreme.Mathematics.SingleVector" /> and itself.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows and columns of the matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.AddOuterProduct(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Updates a matrix with the scaled outer product of
            a vector and itself.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows and columns of the matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.AddOuterProduct(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Updates a matrix with the scaled outer product of two vectors.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector1">The first (column) vector.</param>
      <param name="vector2">The second (row) vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />, or the length
            of <paramref name="vector1" /> does not equal the number
            of columns.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.AddProduct(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Adds the product of two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> objects
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of any of the three matrices involved
            in this operation are not compatible.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.AddProduct(System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Adds a multiple of the product of two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> object
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="factor">Multiplier for the matrix product.</param>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of any of the three matrices involved
            in this operation are not compatible.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="a" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="b" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.CloneData(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies whether to store the elements
            in column-major or row-major elementOrder.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetColumnEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> than can be used to enumerate
            the columns of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>An object that implements <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a vector view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> view of the specified
            diagonal of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to -
            <see cref="F:Extreme.Mathematics.Matrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.Matrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetIdentity(System.Int32)">
      <summary>
            Returns an identity matrix of the specified dimension.
            </summary>
      <param name="dimension">An integer greater than 0.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> of the specified
            dimension that has ones on the main diagonal and is zero everywhere
            else.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetRowEnumerator">
      <summary>
            Constructs an <see cref="T:System.Collections.IEnumerator" /> object that can be used
            to enumerate the rows of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GeneralMatrixRowEnumerator" /> structure.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is a submatrix of
            this matrix.
            </summary>
      <param name="startRow">Index of the first row of the sub-matrix.</param>
      <param name="endRow">Index of the last row of the sub-matrix.</param>
      <param name="startColumn">Index of the first column of the sub-matrix.</param>
      <param name="endColumn">Index of the last column of the sub-matrix.</param>
      <param name="rowStride">The increment for the row index in the original matrix corresponding to an
            increment of one in the row index of the new matrix.</param>
      <param name="columnStride">The increment for the column index in the original matrix corresponding to an
            increment of one in the column index of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not the new matrix should be transposed.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that contains the specified rows and columns. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>Always returns <span class="keyword">true</span>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />. Or, <paramref name="row" />
            is less than zero or greater than or equal to the
            number of rows in this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the product
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> objects and stores
            the result in a third <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the left factor of
            the multiplication.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the right factor of
            the multiplication.</param>
      <param name="resultMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to receive
            the result of the multiplication.</param>
      <returns>A reference to <paramref name="resultMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para><para>-or-</para><para><paramref name="resultMatrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="resultMatrix" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="resultMatrix" />.</para><para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether the matrix <paramref name="a" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product of this matrix
            and <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and
            the matrix <paramref name="matrix" /> are not compatible for the specified operation.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Multiply(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> on the right by a square
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance, which is the product
            of the original <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with <paramref name="matrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not match
            the number of columns in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />,
            <para>-or-</para><para>The matrix <paramref name="matrix" /> is not square.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.MultiplyByTranspose">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> by its
            <see cref="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Transpose" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is
            the product of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with its
            transpose.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.NormInternal(Extreme.Mathematics.MatrixNorm)">
      <summary>
            Calculates a matrix norm.
            </summary>
      <param name="norm">A <see cref="T:System.Char" /> value that specifies the type of norm
            that should be returned.</param>
      <returns>The norm of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.DenseMatrix)~Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix">
      <summary>
            Converts a double-precision matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)~Extreme.Mathematics.LinearAlgebra.DenseMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.SingleMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseMatrix" /> with the same size and with the same components as
            <see cref="!:original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.PreMultiply(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> on the left by a
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">The second <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the product
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with <paramref name="matrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not match
            the number of columns in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />,
            <para>-or-</para><para>The matrix <paramref name="matrix" /> is not square.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.SetToZero">
      <summary>
            Sets all elements of the matrix to zero.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Sort(System.Int32)">
      <summary>
            Sorts the matrix by the specified column.
            </summary>
      <param name="column">The column to sort the matrix by.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.StorageArray">
      <summary>
            Gets the <see cref="T:System.Single" /> array that stores
            the data for the instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.StorageIncrement">
      <summary>
            Gets the increment between successive elements of this
            instance in the <see cref="P:Extreme.Mathematics.LinearAlgebra.IDoubleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.StorageOffset">
      <summary>
            Gets the index of the first element of this instance
            in the <see cref="P:Extreme.Mathematics.LinearAlgebra.IDoubleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Subtract(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is equals the
            matrix <paramref name="matrix2" /> subtracted from
            <paramref name="matrix1" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="matrix1" /> do not
            equal the dimensions of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Subtract(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> objects and stores the
            result in a third <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="resultMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to receive
            the result of the multiplication.</param>
      <returns>A reference to <paramref name="resultMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para><para>-or-</para><para><paramref name="resultMatrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of <paramref name="matrix2" /> does not
            equal the dimensions of <paramref name="matrix1" />.
            <para>-or-</para><para>The dimensions of <paramref name="resultMatrix" /> does not
            equal the dimensions of <paramref name="matrix1" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.SubtractProduct(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Subtracts the product of two <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> object
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of any of the three matrices involved
            in this operation are not compatible.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleDenseVector">
      <summary>
            Represents a vector with arbitrary components.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.#ctor(System.Int32)">
      <summary>
            Constructs a new dense vector with the specified
            length.
            </summary>
      <param name="length">The length of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.#ctor(System.Int32,System.Func{System.Int32,System.Single})">
      <summary>
            Constructs a new dense vector and initializes it using the specified delegate.
            </summary>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="filler">
            A delegate that returns the component value for a given index.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="filler" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="length" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.#ctor(System.Int32,System.Single[])">
      <summary>
            Constructs a new dense vector with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="length" /> is less than zero.</para>
        <para>-or-</para>
        <para>The length of <paramref name="values" /> is less than <paramref name="length" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.#ctor(System.Int32,System.Single[],System.Boolean)">
      <summary>
            Constructs a new dense vector with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />
            will also affect the original array. If <span class="keyword">false</span>, the
            components are copied from <paramref name="values" /> to a new
            array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="length" /> is less than zero.</para>
        <para>-or-</para>
        <para>The length of <paramref name="values" /> is less than <paramref name="length" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.#ctor(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Constructs a new dense vector.
            </summary>
      <param name="length">The length of the vector.</param>
      <param name="data">A <see cref="T:System.Double" /> array containing the components.</param>
      <param name="offset">The offset of the first element of the vector in <paramref name="data" />.</param>
      <param name="stride">The stride between successive elements of the vector.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.#ctor(System.Single[])">
      <summary>
            Constructs a new dense vector with the specified
            components.
            </summary>
      <param name="values">A variable length list of
            float parameters specifying the components of the
            vector, or an array of <see cref="T:System.Single" /> values.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.#ctor(System.Single[],System.Boolean)">
      <summary>
            Constructs a new dense vector with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:System.Single" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />
            will also affect the original array.If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.AbsoluteMaxIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.AbsoluteMinIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Add(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> values.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            the sum of the corresponding components of
            <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Add(System.Single,Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds the scaled product of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> and a
            <see cref="T:Extreme.Mathematics.SingleVector" /> to this <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="factor">The scale factor for the matrix-vector
            product.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the length of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the length of
            <paramref name="vector" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Add(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds a scaled Vector to this vector.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">The vector to add.</param>
      <returns>A reference to this vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="vector" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="vector" /> does not equal the length of
            this instance.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Apply(System.Func{System.Single,System.Single})">
      <summary>
            Applies a function to the elements of a dense vector.
            </summary>
      <param name="function">A delegate that represents a function of one variable</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.AsGeneralVector">
      <summary>
            Returns this vector as a dense vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> with the same components as this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.SingleVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.CopyTo(Extreme.Mathematics.SingleVector,System.Int32)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />
            to another vector starting at the specified position.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> whose
            components are to be set.</param>
      <param name="index">The index in <paramref name="vector" />
            where copying is to start.</param>
      <returns>A reference to the copied vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="vector" /> is less than <paramref name="index" /> plus the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.CopyTo(System.Single[])">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />
            to another vector.
            </summary>
      <param name="array">A <see cref="T:System.Single" /> array that
            is to hold the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="array" /> is less than the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Divide(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Single)">
      <summary>
            Divides a dense vector by a constant.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="factor">A number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            divided by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.DotProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to.</param>
      <returns>
        <span class="keyword">true</span> if the specified object is
            identical to this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.GetEnumerator">
      <summary>
            Returns a <see cref="!:GeneralVectorEnumerator" /> for this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>A <see cref="!:GeneralVectorEnumerator" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.GetSubvector(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.Intent)">
      <summary>
            Returns a vector that points to a part of
            this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /></summary>
      <param name="startIndex">The index of the first element of this
            vector to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            vector to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this vector corresponding to an
            increment of one in the new vector.</param>
      <param name="intent">
            A <see cref="T:Extreme.Mathematics.Intent" /> value that indicates how the subvector will be used once it is created.
            </param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of the vector.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than the length of the vector.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>Always returns <span class="keyword">true</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Max">
      <summary>
            Returns the value of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The value of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.MaxIndex">
      <summary>
            Returns the index of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The index of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Min">
      <summary>
            Returns the value of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The value of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.MinIndex">
      <summary>
            Returns the index of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The index of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a dense vector by a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Multiply(System.Single)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Multiply(System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a dense vector by a constant.
            </summary>
      <param name="factor">A number.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Negate(Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Negates a dense vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A new dense vector whose components
            are equal to minus the corresponding component of
            <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.OneNorm">
      <summary>
            Returns the one-norm of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The one-norm of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Addition(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> values.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            the sum of the corresponding components of
            <paramref name="vector1" /> and <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Division(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Single)">
      <summary>
            Divides a dense vector by a constant.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="factor">A number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            divided by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.DenseVector)~Extreme.Mathematics.LinearAlgebra.SingleDenseVector">
      <summary>
            Converts a double-precision vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to convert.</param>
      <returns>A single-precision vector of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleDenseVector)~Extreme.Mathematics.LinearAlgebra.DenseVector">
      <summary>
            Converts a single-precision vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.SingleVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Implicit(System.Single[])~Extreme.Mathematics.LinearAlgebra.SingleDenseVector">
      <summary>
            Implicitly converts a <see cref="T:System.Double" /> array to a dense vector.
            </summary>
      <param name="data">A <see cref="T:System.Double" /> array.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> equivalent to <paramref name="data" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a dense vector by a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Multiplies a dense vector by a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is the product
            of <paramref name="matrix" /> and <paramref name="vector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of columns in <paramref name="matrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Single)">
      <summary>
            Multiplies a dense vector by a constant.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="factor">A number.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Multiply(System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a dense vector by a constant.
            </summary>
      <param name="factor">A number.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            the corresponding components of <paramref name="vector" />
            multiplied by <paramref name="factor" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_Subtraction(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> values.
            </summary>
      <param name="vector1">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to subtract
            from.</param>
      <param name="vector2">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to subtract.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            equal to the corresponding component of
            <paramref name="vector1" /> minus the corresponding component
            of <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.op_UnaryNegation(Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Negates a dense vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A new dense vector whose components
            are equal to minus the corresponding component of
            <paramref name="vector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.SetValue(System.Single)">
      <summary>
            Sets all the components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to
            the specified value.
            </summary>
      <param name="value">The value to be assigned to each component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.SetValue(System.Single,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.StorageArray">
      <summary>
            Gets the <see cref="T:System.Single" /> array that stores
            the data for the instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.StorageIncrement">
      <summary>
            Gets the increment between successive elements of this
            instance in the <see cref="P:Extreme.Mathematics.LinearAlgebra.IDoubleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.StorageOffset">
      <summary>
            Gets the index of the first element of this instance
            in the <see cref="P:Extreme.Mathematics.LinearAlgebra.IDoubleStorage.StorageArray" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Subtract(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> values.
            </summary>
      <param name="vector1">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to subtract
            from.</param>
      <param name="vector2">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to subtract.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are
            equal to the corresponding component of
            <paramref name="vector1" /> minus the corresponding component
            of <paramref name="vector2" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="vector1" /> and <paramref name="vector2" /> do not
            have the same length.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.Swap(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Swaps the elements of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> is not equal to the
            length of <paramref name="vector2" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.ToArray">
      <summary>
            Gets the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDenseVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix">
      <summary>
            Represents a matrix whose only nonzero components lie on a diagonal.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.#ctor(Extreme.Mathematics.SingleVector)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
      <param name="data">A single-precision vector array containing the diagonal components of the matrix.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
      <param name="RowCount">The number of rows and columns of the matrix.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.#ctor(System.Int32,System.Int32,Extreme.Mathematics.SingleVector)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
      <param name="RowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="data">A single-precision vector containing the components of the diagonal.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.#ctor(System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
      <param name="data">A <see cref="T:System.Single" /> array containing the diagonal components of the matrix.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="a" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="b" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.DiagonalIndex">
      <summary>
            Gets the index of the nonzero diagonal of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a vector view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A single-precision vector containing the diagonal components if
            <paramref name="index" /> equals the index of the nonzero diagonal; otherwise
            a <see cref="T:Extreme.Mathematics.LinearAlgebra.ConstantVector" /> with value zero.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to -
            <see cref="F:Extreme.Mathematics.Matrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.Matrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetInverse">
      <summary>
            Calculates the inverse of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" /> that is the inverse of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is a submatrix of
            this matrix.
            </summary>
      <param name="startRow">Index of the first row of the sub-matrix.</param>
      <param name="endRow">Index of the last row of the sub-matrix.</param>
      <param name="startColumn">Index of the first column of the sub-matrix.</param>
      <param name="endColumn">Index of the last column of the sub-matrix.</param>
      <param name="rowStride">The increment for the row index in the original matrix corresponding to an
            increment of one in the row index of the new matrix.</param>
      <param name="columnStride">The increment for the column index in the original matrix corresponding to an
            increment of one in the column index of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not the new matrix should be transposed.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that contains the specified rows and columns. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.IsSingular">
      <summary>
            Gets a value indicating whether this matrix is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.DiagonalMatrix)~Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix">
      <summary>
            Converts a double-precision diagonal matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DiagonalMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix)~Extreme.Mathematics.LinearAlgebra.DiagonalMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DiagonalMatrix" /> with the same size and with the same components as
            <see cref="!:original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.op_Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix)">
      <summary>
            Multiplies a matrix on the right by a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />..
            </summary>
      <param name="diagonalMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product
            of <paramref name="diagonalMatrix" /> and <paramref name="matrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="diagonalMatrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="matrix" /> does not
            equal the number of rows of <paramref name="diagonalMatrix" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.op_Multiply(Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies a matrix on the left by a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />..
            </summary>
      <param name="diagonalMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix" />.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product
            of <paramref name="diagonalMatrix" /> and <paramref name="matrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="diagonalMatrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="diagonalMatrix" /> does not
            equal the number of rows of <paramref name="matrix" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.SingleVector" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.ToArray(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the vector.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleDiagonalMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition">
      <summary>
            Represents the eigenvalue decomposition of a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.EigenvalueDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.EigenvalueDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The matrix <paramref name="matrix" /> is not square.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.Decompose">
      <summary>
            Calculates the actual eigenvalue decomposition.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.Eigenvalues">
      <summary>
            Gets the eigenvalues of the matrix.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.Eigenvectors">
      <summary>
            Gets the eigenvectors of the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.RawEigenvectors">
      <summary>
            Gets the eigenvectors of the matrix.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.RealEigenvalues">
      <summary>
            Gets the real eigenvalues of the matrix.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.RealEigenvectors">
      <summary>
            Gets the real eigenvectors of the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleEigenvalueDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector">
      <summary>
            Represents a vector whose components are arbitrary components of another vector.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.#ctor(System.Int32,System.Single[],System.Int32[],System.Int32,System.Int32)">
      <summary>
            Constructs a new indexed vector.
            </summary>
      <param name="length">The length of the vector.</param>
      <param name="data">A <see cref="T:System.Double" /> array containing the data for the vector.</param>
      <param name="indexes">An <see cref="T:System.Int32" /> array containing the indexes into <paramref name="data" />
            of the components of the vector.</param>
      <param name="offset">Offset into <paramref name="indexes" /> where the index of the first component
            is stored.</param>
      <param name="stride">The increment for the index into <paramref name="indexes" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.#ctor(System.Single[],System.Int32[])">
      <summary>
            Constructs a new indexed vector.
            </summary>
      <param name="data">A <see cref="T:System.Double" /> array containing the data for the vector.</param>
      <param name="indexes">An <see cref="T:System.Int32" /> array containing the indexes into <paramref name="data" />
            of the components of the vector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.SingleVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.CopyTo(System.Single[])">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />
            to another vector.
            </summary>
      <param name="array">A <see cref="T:System.Single" /> array that
            is to hold the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="array" /> is less than the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.GetSubvector(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.Intent)">
      <summary>
            Returns a vector that points to a part of
            this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /></summary>
      <param name="startIndex">The index of the first element of this
            vector to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            vector to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this vector corresponding to an
            increment of one in the new vector.</param>
      <param name="intent">A <see cref="T:Extreme.Mathematics.Intent" /> value that
            specifies the intended use of the subvector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of the vector.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than the length of the vector.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>Always returns <span class="keyword">true</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleIndexedVector.SetValue(System.Single,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleIndexValuePair">
      <summary>
            Represents the value of a component at a specified position in a vector.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleIndexValuePair.Index">
      <summary>
            The index of the component.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleIndexValuePair.Value">
      <summary>
            The value of the component.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleKernel">
      <summary>
            Encapsulates the currently active BLAS implementation.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.ComplexLapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for float-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.ComplexLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for float-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.ComplexLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for float-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.ComplexLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for float-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.ComplexSparse">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for float-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.Lapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for float-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.Level1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for float-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.Level2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for float-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.Level3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for float-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleKernel.Sparse">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for float-precision arguments.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleKernel.UseFromAssembly(System.Reflection.Assembly)">
      <summary>
            Instructs the library to use a custom BLAS implementation contained in a .NET assembly.
            </summary>
      <param name="assembly">The <see cref="T:System.Reflection.Assembly" /> that contains the implementation.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleKernel.UseHybrid">
      <summary>
            Instructs the library to use a hybrid of the managed and default native BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleKernel.UseHybrid(Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider)">
      <summary>
            Instructs the library to use the managed and the specified native BLAS implementation.
            </summary>
      <param name="nativeProvider">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider" /> object that specifies the alternate provider.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleKernel.UseManaged">
      <summary>
            Instructs the library to use the managed BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleKernel.UseNative">
      <summary>
            Instructs the library to use the native BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleKernel.UseProvider(Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider)">
      <summary>
            Instructs the library to use the specified <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider" />.
            </summary>
      <param name="provider">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider" /> object.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver">
      <summary>
            Represents the solution to a least squares problem.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.#ctor(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.SingleVector)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.LeastSquaresSolver" />
            from the matrix of observations and the vector of
            outcomes.
            </summary>
      <param name="observations">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> whose rows
            contain the observations of the least squares problem.
            </param>
      <param name="outcomes">A single-precision vector containing
            the outcomes of each of the observations in
            <paramref name="observations" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.GetPredictions">
      <summary>
            Returns a vector containing the predicted
            outcomes of the least squares solution.
            </summary>
      <returns>A single-precision vector containing the predicted
            outcomes of the least squares solution.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.GetResiduals">
      <summary>
            Returns a vector containing the residuals
            of the least squares solution.
            </summary>
      <returns>A single-precision vector containing the residuals
            of the least squares solution.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.GetResidualSumOfSquares">
      <summary>
            Returns the sum of the squares of the residuals
            of the least squares solution.
            </summary>
      <returns>The sum of the squares of the residuals
            of the least squares solution.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.GetResidues">
      <summary>
            Returns a vector containing the residuals
            of the least squares solution.
            </summary>
      <returns>A single-precision vector containing the residuals
            of the least squares solution.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.Solution">
      <summary>
            Gets the solution to the least squares problem.
            </summary>
      <returns>A single-precision vector containing the least
            norm solution to the least squares problem.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.SolutionMethod">
      <summary>
            Gets or sets the <see cref="T:Extreme.Mathematics.LinearAlgebra.LeastSquaresSolutionMethod" />
            used to calculate this <see cref="T:Extreme.Mathematics.LinearAlgebra.LeastSquaresSolver" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLeastSquaresSolver.Solve">
      <summary>
            Solves the least squares problem and returns the
            least norm solution.
            </summary>
      <returns>A single-precision vector containing the least
            norm solution to the least squares problem.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation">
      <summary>
            Defines methods for the solution of a system of
            simultaneous linear equations and related operations.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.#ctor">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation" /> from serialization
            data.
            </summary>
      <param name="info">The data needed to serialize or deserialize
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation" />. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition number of a matrix.
            </summary>
      <returns>An estimate for the condition number of
            the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.GetDeterminant">
      <summary>
            Calculates the determinant of a matrix.
            </summary>
      <returns>The determinant of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.GetInverse">
      <summary>
            Calculates the inverse matrix..
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            linear transformation is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> of the linear transformation
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="T:Extreme.Mathematics.SingleMatrix" />
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.Rank">
      <summary>
            Returns the numerical rank of a matrix.
            </summary>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.Solve(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            <para>-or-</para><para>The <see cref="T:Extreme.Mathematics.SingleMatrix" /> is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException"></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.Solve(Extreme.Mathematics.SingleVector)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.SolveTranspose(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            <para>-or-</para><para>The <see cref="T:Extreme.Mathematics.SingleMatrix" /> is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException"></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation.SolveTranspose(Extreme.Mathematics.SingleVector)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition">
      <summary>
            Represents the LU decomposition of a general
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.LUDecomposition" /> object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.#ctor(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.LUDecomposition" /> object.,
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.ApplyP(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="matrix" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> is returned.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the elements of
            <paramref name="matrix" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.ApplyP(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and returns the result as a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /><paramref name="matrix" />
            with its elements permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.ApplyP(Extreme.Mathematics.SingleVector)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a vector.
            </summary>
      <param name="vector">A single-precision vector with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleVector" /><paramref name="vector" />
            with its elements permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector" />
            does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.ApplyP(Extreme.Mathematics.SingleVector,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a vector.
            </summary>
      <param name="vector">A single-precision vector with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="vector" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.SingleVector" /> is returned.
            </param>
      <returns>A single-precision vector with the elements of
            <paramref name="vector" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector" />
            does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.Decompose">
      <summary>
            Performs the actual LU decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the matrix underlying this
            system of equations.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the inverse of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.GetInverse(System.Boolean)">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="overwrite">If <span class="keyword">false</span>, the inverse matrix is returned as a new instance.
            If <span class="keyword">true</span>, the decomposition is overwritten with the solution. In this case,
            the LU decomposition is no longer valid after the call to this method.</param>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.LowerTriangularFactor">
      <summary>
            Returns the lower <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            component of this <see cref="T:Extreme.Mathematics.LinearAlgebra.LUDecomposition" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.RowPermutation"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleLUDecomposition.UpperTriangularFactor">
      <summary>
            Gets the upper <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.LUDecomposition" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleMatrixView">
      <summary>
            Represents a view on all or part of a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.#ctor(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.MatrixView" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to create
            the view on.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix <paramref name="matrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.#ctor(Extreme.Mathematics.SingleMatrix,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.MatrixView" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to create
            the view on.</param>
      <param name="startRow">Index of the first row
            of <paramref name="matrix" /> in the view.</param>
      <param name="endRow">Index of the last row
            of <paramref name="matrix" /> in the view.</param>
      <param name="startColumn">Index of the first column
            of <paramref name="matrix" /> in the view.</param>
      <param name="endColumn">Index of the last column
            of <paramref name="matrix" /> in the view.</param>
      <param name="rowStride">The increment for the row index
            of <paramref name="matrix" /> corresponding to an
            increment of one in the rows of the new matrix.</param>
      <param name="columnStride">The increment for the column index
            of <paramref name="matrix" /> corresponding to an
            increment of one in the columns of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix <paramref name="matrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A column <see cref="T:Extreme.Mathematics.SingleVector" /> vector that
            allows you to iterate through the rows of this matrix.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns<br />
            - or - <br /><paramref name="startRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.SingleVector" /> vector that
            allows you to iterate through the columns of this matrix.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleMatrixView.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix">
      <summary>
            Represents a permutation matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.#ctor(Extreme.Mathematics.Permutation)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix" /></summary>
      <param name="permutation">The permutation that is equivalent to multiplying a vector or matrix
            on the left by the permutation matrix.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="permutation" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix" /></summary>
      <param name="RowCount">The number of rows and columns of the matrix.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="RowCount" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with <paramref name="vector" />.</param>
      <param name="beta">Multiplier for <paramref name="resultVector" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.GetConditionNumber">
      <summary>
            Calculates the condition
            number of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The condition number of
            the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.GetInverse">
      <summary>
            Calculates the inverse of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The matrix inverse of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.GetPseudoInverse">
      <summary>
            Calculates the Moore-Penrose pseudo-inverse of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The matrix inverse of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>Always returns <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.IsSingular">
      <summary>
            Gets a value indicating whether this matrix is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.PermutationMatrix)~Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix">
      <summary>
            Converts a double-precision permutation matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.PermutationMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.Permutation">
      <summary>
            Gets the <see cref="P:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.Permutation" /> represented by this permutation matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            Always thrown.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution is
            returned.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.SingleVector" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.ToArray(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the vector.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" /> value that specifies
            whether the components should be listed by row or by column.</param>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SinglePermutationMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition">
      <summary>
            Represents the QR decomposition of a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            decomposed.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.#ctor(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is to be
            decomposed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.ApplyQ(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Multiplies a matrix in place by the orthogonal matrix
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with
            the same number of rows as Q.</param>
      <returns>A reference to the transformed matrix.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.ApplyQ(Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector in place by the orthogonal vector
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> with
            the same number of rows as Q.</param>
      <returns>A reference to the transformed vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.ApplyQ(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Multiplies a matrix in place by the orthogonal matrix
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />, or its
            transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with
            the same number of rows as Q.</param>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" />
            value that specifies whether the matrix Q (or its
            transpose) should be the left or right operand of
            the multiplication.</param>
      <param name="operation">A <see cref="T:Extreme.Mathematics.TransposeOperation" />
            enumeration value that specifies whether to multiply
            by the original or the transposed orthogonal matrix Q.</param>
      <returns>A reference to the transformed matrix.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.ApplyQ(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Multiplies a matrix in place by the orthogonal matrix
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />, or its
            transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with
            the same number of rows as Q.</param>
      <param name="operation">A <see cref="T:Extreme.Mathematics.TransposeOperation" />
            enumeration value that specifies whether to multiply
            by the transposed orthogonal matrix.</param>
      <returns>A reference to the transformed matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.ApplyQ(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector in place by the orthogonal vector
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />, or its
            transpose.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> with
            the same number of rows as Q.</param>
      <param name="operation">A <see cref="T:Extreme.Mathematics.TransposeOperation" />
            enumeration value that specifies whether to multiply
            by the transposed orthogonal vector.</param>
      <returns>A reference to the transformed vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.ColumnPermutation">
      <summary>
            Returns the permutation used to permute the columns of the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.Decompose">
      <summary>
            Calculates the actual QR decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.LeastSquaresSolve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.SingleVector" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.LeastSquaresSolve(Extreme.Mathematics.SingleVector)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.OrthogonalFactor">
      <summary>
            Gets the orthogonal matrix Q of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.TrimmedUpperTriangularFactor">
      <summary>
            Gets the upper triangular matrix R of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.UpperTriangularFactor">
      <summary>
            Gets the upper triangular matrix R of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleQRDecomposition.UseColumnPivoting">
      <summary>
            Gets or sets a value that specifies whether to use column pivoting to improve stability.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleRowCollection">
      <summary>
            Represents the collection of rows of a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleRowCollection.Count">
      <summary>
            Gets the number of rows in the collection.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleRowCollection.GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for this <see cref="T:Extreme.Mathematics.LinearAlgebra.RowCollection" />.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for this <see cref="T:Extreme.Mathematics.LinearAlgebra.RowCollection" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleRowCollection.Item(System.Int32)">
      <summary>
            Gets or sets the components of the specified row in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.RowCollection" />.
            </summary>
      <param name="index">The zero-based index of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the number of rows in the matrix.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleRowCollection.Permute(Extreme.Mathematics.Permutation)">
      <summary>
            Permutes the rows.
            </summary>
      <param name="permutation">A <see cref="T:Extreme.Mathematics.Permutation" /> object.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleRowColumnValueTriplet">
      <summary>
            Represents the value of a component at a specified position in a matrix.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleRowColumnValueTriplet.Column">
      <summary>
            The column of the component.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleRowColumnValueTriplet.Row">
      <summary>
            The row of the component.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleRowColumnValueTriplet.Value">
      <summary>
            The value of the component.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition">
      <summary>
            Represents the singular value decomposition of a matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="requestedFactors">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors" />
            value that specifies which factors of the decomposition should be computed.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.#ctor(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.#ctor(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="requestedFactors">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors" />
            value that specifies which factors of the decomposition should be computed.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.Decompose">
      <summary>
            Calculates the actual singular value decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.GetPseudoInverse">
      <summary>
            Calculates the pseudo-inverse of the factorized <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the Moore-Penrose pseudo-inverse of
            this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.GetPseudoInverse(System.Single)">
      <summary>
            Calculates the pseudo-inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="tolerance">The absolute tolerance for singular values to be considered zero.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the Moore-Penrose pseudo-inverse of
            this instance.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.LeftSingularVectors">
      <summary>
            Gets the left singular vectors of the decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.RequestedFactors">
      <summary>
            Gets or sets which factors of the singular value decomposition should be calculated.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.RightSingularVectors">
      <summary>
            Gets the right singular vectors of the decomposition.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.SingularValueMatrix">
      <summary>
            Gets a matrix with the singular values on the diagonal.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.SingularValues">
      <summary>
            Gets a vector containing the singular values.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSingularValueDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition">
      <summary>
            Represents the LU decomposition of a general
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition" /> object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.#ctor(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition" /> object.,
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is to be
            factorized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.ApplyP(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and returns the result as a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /><paramref name="matrix" />
            with its elements permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.ApplyP(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.TransposeOperation,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="matrix" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> is returned.
            </param>
      <param name="transpose">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that indicates whether
            the permutation matrix should be transposed before applying it to <paramref name="matrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the elements of
            <paramref name="matrix" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.ApplyP(Extreme.Mathematics.SingleMatrix,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="matrix" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> is returned.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the elements of
            <paramref name="matrix" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.ApplyP(Extreme.Mathematics.SingleVector)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a vector.
            </summary>
      <param name="vector">A single-precision vector with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.SingleVector" /><paramref name="vector" />
            with its elements permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector" />
            does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.ApplyP(Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a vector.
            </summary>
      <param name="vector">A single-precision vector with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="vector" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.SingleVector" /> is returned.
            </param>
      <param name="transpose">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that indicates whether
            the permutation matrix should be transposed before applying it to <paramref name="vector" />.</param>
      <returns>A single-precision vector with the elements of
            <paramref name="vector" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector" />
            does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.ApplyP(Extreme.Mathematics.SingleVector,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a vector.
            </summary>
      <param name="vector">A single-precision vector with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="vector" /> is overwritten by the result.
            If <span class="keyword">false</span>, a new <see cref="T:Extreme.Mathematics.SingleVector" /> is returned.
            </param>
      <returns>A single-precision vector with the elements of
            <paramref name="vector" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector" />
            does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.ColumnPermutation">
      <summary>
            Gets the column permutation of the decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.Decompose">
      <summary>
            Performs the actual LU decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the matrix underlying this
            system of equations.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the inverse of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.LowerTriangularFactor">
      <summary>
            Returns the lower <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            component of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.RowPermutation">
      <summary>
            Gets the row permutation of the decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition.UpperTriangularFactor">
      <summary>
            Gets the upper <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseLUDecomposition" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix">
      <summary>
            Represents a sparse matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.#ctor(System.Int32,System.Int32,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" /> object.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> from serialization
            data.
            </summary>
      <param name="info">The data needed to serialize or deserialize
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.Add(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds a multiple of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> to this <see cref="T:Extreme.Mathematics.SingleMatrix" /> and returns
            the result.
            </summary>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before adding.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before adding.</param>
      <param name="factor">Multiplier for the matrix <paramref name="matrix" />.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the sum of the specified form of this matrix
            and the matrix <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and the matrix
            <paramref name="matrix" /> are not compatible for the specified operation.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.AddAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Adds a value to the component at the specified location.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The value to be added to the component.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.ComponentwiseMultiply(Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies the components of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by the corresponding
            components of a sparse matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="sparseMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" /> whose components are equal to the
            products of the components of <paramref name="sparseMatrix" /> and <paramref name="matrix" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="sparseMatrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of <paramref name="sparseMatrix" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of <paramref name="sparseMatrix" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix)">
      <summary>
            Multiplies the components of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> by the corresponding
            components of a sparse matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="sparseMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" /> whose components are equal to the
            products of the components of <paramref name="matrix" /> and <paramref name="sparseMatrix" /> .</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="sparseMatrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of <paramref name="sparseMatrix" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of <paramref name="sparseMatrix" />.</para></exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.DiagonalMode">
      <summary>
            Gets a value that indicates whether the diagonal elements of
            a triangular <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" /> are all equal to 1.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.DivideAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Divides the component at the specified location by a value.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The divisor.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.ExtractTriangle(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs an upper or lower triangular sparse matrix from a general sparse matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies
            whether the upper or lower triangle of the matrix should be returned.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that specifies
            whether the diagonal of the returned matrix should contain all ones.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.FillFactor">
      <summary>
            Gets the fraction of nonzero components in the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.GetColumnSums">
      <summary>
            Returns the sums of the components of each column of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the sum of the corresponding column of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.GetNonzeroComponents(System.Int32[]@,System.Int32[]@)">
      <summary>
            Returns the nonzero components
            </summary>
      <param name="rows">On return, an integer array containing the row indexes of the nonzero components.</param>
      <param name="columns">On return, an integer array containing the column indexes of the nonzero components.</param>
      <returns>A <see cref="T:System.Single" /> array containing the nonzero components of the <see cref="!:SingleSparseCompressedColumnMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.GetRowSums">
      <summary>
            Returns the sums of the components of each row of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the sum of the corresponding row of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.IncrementNonzeroCount(System.Int32)">
      <summary>
            Called by inheritors to increment the number of nonzero components by the specified amount.
            </summary>
      <param name="amount">The amount to increase the number of nonzero components by.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.InsertClique(Extreme.Mathematics.SingleMatrix,System.Int32[],System.Int32[])">
      <summary>
            Inserts a two-dimensional set of values at the specified positions in the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.
            </summary>
      <param name="values">Array of values to insert.</param>
      <param name="rows">Array of  zero-based row indexes where the elements of <paramref name="values" />
            are to be inserted.</param>
      <param name="columns">Array zero-based column indexes where the elements of <paramref name="values" />
            are to be inserted.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="rows" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="columns" /> is <see langword="null" /></para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.InsertColumn(System.Int32,System.Single[],System.Int32[])">
      <summary>
            Inserts a set of values at the specified column in the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.
            </summary>
      <param name="column">The zero-based column index where the elements of <paramref name="values" />
            are to be inserted.</param>
      <param name="values">Array of values to insert.</param>
      <param name="rows">Array of  zero-based row indexes where the elements of <paramref name="values" />
            are to be inserted.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="rows" /> is <see langword="null" /></para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.InsertEntries(System.Single[],System.Int32[],System.Int32[])">
      <summary>
            Inserts a set of values at the specified positions in the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.
            </summary>
      <param name="values">Array of values to insert.</param>
      <param name="rows">Array of  zero-based row indexes where the elements of <paramref name="values" />
            are to be inserted.</param>
      <param name="columns">Array zero-based column indexes where the elements of <paramref name="values" />
            are to be inserted.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="rows" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="columns" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="rows" /> is not equal to the length of <paramref name="values" />.</para>
        <para>-or-</para>
        <para>The length of <paramref name="columns" /> is not equal to the length of <paramref name="values" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.InsertEntry(System.Single,System.Int32,System.Int32)">
      <summary>
            Inserts a value at the specified position in the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.
            </summary>
      <param name="value">The value to insert.</param>
      <param name="row">The zero-based row where <paramref name="value" /> is to be inserted.</param>
      <param name="column">The zero-based column where <paramref name="value" /> is to be inserted.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.InsertRow(System.Int32,System.Single[],System.Int32[])">
      <summary>
            Inserts a set of values at the specified row in the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.
            </summary>
      <param name="row">The zero-based row index where the elements of <paramref name="values" />
            are to be inserted.</param>
      <param name="values">Array of values to insert.</param>
      <param name="columns">Array of  zero-based column indexes where the elements of <paramref name="values" />
            are to be inserted.</param>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="columns" /> is <see langword="null" /></para>
      </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.IsUnitDiagonal">
      <summary>
            Gets a value indicating whether all diagonal elements
            of this instance are equal to 1.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.MultiplyAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Multiplies the component at the specified location by a value.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The multiplier.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.NonzeroCount">
      <summary>
            Gets the number of nonzero components in the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.SparseGetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get.</param>
      <param name="row">The zero-based row index of
            the element to get.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" /> in the position specified by
            <paramref name="row" /> and <paramref name="column" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.SparseSetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to set.</param>
      <param name="row">The zero-based row index of
            the element to set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.Structure">
      <summary>
            Gets a value that indicates the structure of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.SubtractAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Subtracts a value from the component at the specified location.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The value to be subtracted from the component.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.SwapRows(System.Int32,System.Int32)">
      <summary>
            Interchanges the specified rows of the matrix.
            </summary>
      <param name="row1">The first row.</param>
      <param name="row2">The second row.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix.TriangleMode">
      <summary>
            Gets a value that indicates whether a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            is upper or lower triangular.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleSparseVector">
      <summary>
            Represents a vector with a vector with relatively few non-zero components.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" /> of the specified length.
            </summary>
      <param name="length">The length of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" /> of the specified length.
            </summary>
      <param name="length">The length of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</param>
      <param name="capacity">An integer specifying the expected number of nonzero components of the vector.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="capacity" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.#ctor(System.Int32,System.Int32[],System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" /> with the specified components.
            </summary>
      <param name="length">The length of the new vector.</param>
      <param name="indexes">An integer array containing the zero-based indexes of the nonzero components.</param>
      <param name="values">A <see cref="T:System.Double" /> array containing the corresponding values.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="indexes" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="values" /> is not equal to the length of <paramref name="indexes" />.</para>
      </exception>
      <exception cref="T:System.ArgumentException">
            One or more elements of <paramref name="indexes" /> is less than zero or greater than or equal to
            <paramref name="length" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.#ctor(System.Int32,System.Single)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" /> of the specified length.
            </summary>
      <param name="length">The length of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.</param>
      <param name="fillFactor">A value between 0 and 1 that specifies the initial capacity of nonzero components
            as a proportion of the total number of components of the matrix.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="fillFactor" /> is less than or equal to zero or greater than 1.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.AbsoluteMaxIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.AbsoluteMinIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.Add(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Adds a scaled Vector to this vector.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">The vector to add.</param>
      <returns>A reference to this vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="vector" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="vector" /> does not equal the length of
            this instance.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.SingleVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.CloneData">
      <summary>
            If possible, gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.Compact">
      <summary>
            Sets the capacity to the actual number of nonzero components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.ComponentwiseDivide(Extreme.Mathematics.SingleVector)">
      <summary>
            Divides the components of this instance by the corresponding
            components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.ComponentwiseMultiply(Extreme.Mathematics.SingleVector)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another vector.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.CopyTo(Extreme.Mathematics.SingleVector,System.Int32)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.SingleVector" />
            to another vector starting at the specified position.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.SingleVector" /> whose
            components are to be set.</param>
      <param name="index">The index in <paramref name="vector" />
            where copying is to start.</param>
      <returns>A reference to the destination vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="vector" /> is less than <paramref name="index" /> plus the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.DotProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.SingleVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.GetSubvector(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.Intent)">
      <summary>
            Returns a vector that points to a part of
            this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /></summary>
      <param name="startIndex">The index of the first element of this
            vector to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            vector to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this vector corresponding to an
            increment of one in the new vector.</param>
      <param name="intent">
            A <see cref="T:Extreme.Mathematics.Intent" /> value that indicates how the subvector will be used once it is created.
            </param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.SingleVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="startIndex" /> is less than zero or greater than the length of the vector.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than the length of the vector.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.GetSum">
      <summary>
            Gets the sum of the components of the vector.
            </summary>
      <returns>The sum of the components.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>Always returns <see langword="true" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.IsSparse">
      <summary>
            Gets a value that indicates whether the vector is sparse.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.Max">
      <summary>
            Returns the value of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The value of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.MaxIndex">
      <summary>
            Returns the index of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The index of the largest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.Min">
      <summary>
            Returns the value of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The value of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.MinIndex">
      <summary>
            Returns the index of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The index of the smallest component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.Multiply(System.Single)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.NonzeroComponents">
      <summary>
            Gets a collection of <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleIndexValuePair" /> objects
            representing the nonzero components of this instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.NonzeroCount">
      <summary>
            Gets the number of nonzero components in the vector.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.NormInternal(System.Int32)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <param name="order">An integer specifying the order
            of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.NormInternal(System.Single)">
      <summary>
            Returns the norm of the specified order of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <param name="order">A float-precision floating-point
            number specifying the order of the norm.</param>
      <returns>The norm of order <paramref name="order" /> of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.OneNorm">
      <summary>
            Returns the one-norm of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>The one-norm of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleSparseVector)~Extreme.Mathematics.LinearAlgebra.SparseVector">
      <summary>
            Converts a single-precision sparse vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.SparseVector)~Extreme.Mathematics.LinearAlgebra.SingleSparseVector">
      <summary>
            Converts a double-precision sparse vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.SetValue(System.Single)">
      <summary>
            Sets all the components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> to
            the specified value.
            </summary>
      <param name="value">The value to be assigned to each component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.SetValue(System.Single,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the vector in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.ToArray">
      <summary>
            Gets the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Vector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.ToSparseVector">
      <summary>
            Creates a copy of the vector as a <see cref="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.ToSparseVector" />.
            </summary>
      <returns>A <see cref="M:Extreme.Mathematics.LinearAlgebra.SingleSparseVector.ToSparseVector" /> with the same value as this instance.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition">
      <summary>
            Represents the symmetric eigenvalue decomposition of a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SymmetricEigenvalueDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SymmetricEigenvalueDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.Decompose">
      <summary>
            Calculates the actual eigenvalue decomposition.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.Eigenvalues">
      <summary>
            Gets the eigenvalues of the matrix.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.Eigenvectors">
      <summary>
            Gets the eigenvectors of the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricEigenvalueDecomposition.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix">
      <summary>
            Represents a <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is symmetrical about the main diagonal.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            with the specified dimension.
            </summary>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.#ctor(System.Int32,System.Single[],Extreme.Mathematics.MatrixTriangle)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> of the
            specified dimension using the specified data.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            the upper or lower triangle of the component data.</param>
      <param name="data">An <see cref="T:System.Array" /> of
            <see cref="T:System.Single" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.#ctor(System.Int32,System.Single[],Extreme.Mathematics.MatrixTriangle,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> of the
            specified dimension using the specified data.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            the upper or lower triangle of the component data.</param>
      <param name="data">An <see cref="T:System.Array" /> of
            <see cref="T:System.Single" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <param name="reuseComponentArray">A bool value that indicates
            whether the <paramref name="data" /> array should be
            copied or reused for internal storage.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.AddOuterProduct(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Updates a symmetric matrix with the product
            of a matrix and its transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.AddOuterProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Updates a symmetric matrix with the outer product of
            a vector and itself.
            </summary>
      <param name="vector">The first (column) vector.</param>
      <returns>A reference to this instance</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the number
            of rows and columns in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.AddOuterProduct(System.Single,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Updates a symmetric matrix with the scaled outer product
            of a matrix and its transpose.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.AddOuterProduct(System.Single,Extreme.Mathematics.SingleVector)">
      <summary>
            Updates a symmetric matrix with the scaled outer product
            of a vector and its transpose.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.SingleVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.AddSymmetricOuterProduct(System.Single,Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Updates a symmetric matrix with the scaled outer product
            of a vector and its transpose.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="matrix1">A single-precision vector.</param>
      <param name="matrix2">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="matrix1" /> or <paramref name="matrix2" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.AddSymmetricOuterProduct(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Updates a symmetric matrix with the scaled outer product
            of a vector and a transposed vector.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector1">A single-precision vector.</param>
      <param name="vector2">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> or <paramref name="vector2" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.ApplyMatrixFunction(System.Func{System.Single,System.Single})">
      <summary>
            Computes a matrix function.
            </summary>
      <param name="function">A delegate that represents a function of one variable that specifies the function to apply.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that represents <paramref name="function" /> applied
            to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of this instance.</para></exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.Extract(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.MatrixTriangle,System.Boolean)">
      <summary>
            Creates a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> from a part of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">The matrix that contains the components of the new matrix.</param>
      <param name="dimension">The number of rows and columns of the new matrix.</param>
      <param name="startRow">The row in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="startColumn">The column in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates
            whether the components of the symmetric matrix are stored in the upper or lower
            triangular portion of the block specified by <paramref name="startRow" /> and
            <paramref name="startColumn" />.</param>
      <param name="reuseComponentArray">A bool value that indicates
            whether the <paramref name="data" /> array should be
            copied or reused for internal storage.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less than zero
            <para>-or-</para><para><paramref name="startRow" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para><para>-or-</para><para><paramref name="startColumn" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para></exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="startRow" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.Extract(Extreme.Mathematics.SingleMatrix,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.MatrixTriangle)">
      <summary>
            Creates a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> from a part of a <see cref="T:Extreme.Mathematics.SingleMatrix" />.
            </summary>
      <param name="matrix">The matrix that contains the components of the new matrix.</param>
      <param name="dimension">The number of rows and columns of the new matrix.</param>
      <param name="startRow">The row in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="startColumn">The column in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates
            whether the components of the symmetric matrix are stored in the upper or lower
            triangular portion of the block specified by <paramref name="startRow" /> and
            <paramref name="startColumn" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less than zero
            <para>-or-</para><para><paramref name="startRow" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para><para>-or-</para><para><paramref name="startColumn" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para></exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="startRow" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.FromOuterProduct(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            by multiplying a matrix on the left by its transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>The new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.FromOuterProduct(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.MatrixOperationSide)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            by multiplying a matrix by its transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="side">Specifies whether the transposed
            matrix is the left or right operand.</param>
      <returns>The new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            underlying this system of equations.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a vector view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> view of the specified
            diagonal of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to -
            <see cref="F:Extreme.Mathematics.Matrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.Matrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.GetEigenvalues">
      <summary>
            Gets a vector containing the eigenvalues of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the eigenvalues of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.GetInverse">
      <summary>
            Calculates the inverse matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            is singular and does not have an inverse.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>Always returns <span class="keyword">true</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.IsSymmetrical">
      <summary>
            Gets a value that indicates if the matrix is symmetrical about the main diagonal.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether the matrix <paramref name="a" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product of this matrix
            and the <see cref="T:Extreme.Mathematics.SingleMatrix" /><paramref name="a" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="matrix" /> are not compatible with the dimensions of this instance
            for the requested operation..
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.MultiplySymmetric(Extreme.Mathematics.SingleVector)">
      <summary>
            Computes the symmetric product of a vector and this matrix.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>The product of <paramref name="vector" /> as a row vector, this matrix, and <paramref name="vector" /> as a column vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix)~Extreme.Mathematics.LinearAlgebra.SymmetricMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SymmetricMatrix" /> with the same size and with the same components as
            <see cref="!:original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SymmetricMatrix)~Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix">
      <summary>
            Converts a double-precision symmetric matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SymmetricMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the vector <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.SubtractOuterProduct(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Updates a symmetric matrix by subtracting the product
            of a matrix and its transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.SubtractOuterProduct(Extreme.Mathematics.SingleVector)">
      <summary>
            Updates a symmetric matrix with the outer product of
            a vector and its transpose.
            </summary>
      <param name="vector">A single-precision vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix.TriangleMode">
      <summary>
            Gets a value that indicates whether the components of a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" /> are stored in the upper or lower
            triangle.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix">
      <summary>
            Represents a <see cref="T:Extreme.Mathematics.SingleMatrix" /> whose elements above or below the main diagonal are zero.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="RowCount">The number of rows.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="values">A float array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            will also affect the original array. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="data">A float array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="data" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="data">A float array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="resultVector" /> does not equal the
            number of columns in <paramref name="vector" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.CloneData(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies whether to store the elements in
            column or in row major order.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.DiagonalMode">
      <summary>
            Gets a value that indicates whether the diagonal elements of
            this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> are all equal to 1.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="RowCount">The number of rows in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</param>
      <param name="columnCount">The number of columns in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the triangleMode triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the triangleMode triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the upper triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the upper triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the upper triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="RowCount">The number of rows in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</param>
      <param name="columnCount">The number of columns in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs an upper <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose
            elements are contained in the upper triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSymmetricMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A single-precision vector.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a vector view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A single-precision vector view of the specified
            diagonal of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to
            -<see cref="F:Extreme.Mathematics.Matrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.Matrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.GetInverse">
      <summary>
            Calculates the inverse matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A single-precision vector.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsLowerTriangular">
      <summary>
            Gets a value indicating whether this
            instance is lower triangular.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsSparse">
      <summary>
            Gets a value that indicates whether the matrix is sparse.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsUnitDiagonal">
      <summary>
            Gets a value indicating whether all diagonal elements
            of this instance are equal to 1.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsUpperTriangular">
      <summary>
            Gets a value indicating whether this
            instance is triangleMode triangular.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.Multiply(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> by a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />.
            </summary>
      <param name="denseMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="triangularMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix">triangular
            matrix</see>.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the product
            of <paramref name="denseMatrix" /> and <paramref name="triangularMatrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="denseMatrix" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="triangularMatrix" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether the matrix <paramref name="matrix" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product of this matrix
            and <see cref="T:Extreme.Mathematics.SingleMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix)~Extreme.Mathematics.LinearAlgebra.TriangularMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.TriangularMatrix" /> with the same size and with the same components as
            <paramref name="original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.TriangularMatrix)~Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix">
      <summary>
            Converts a double-precision triangular matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.TriangularMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.SetValue(System.Single,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:System.Single" /> specifying the new value of the component.</param>
      <returns>The component of the matrix in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">For an
            triangleMode-triangular matrix (<see cref="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsUpperTriangular" />
            is <span class="keyword">true</span>), you try to set an component
            below the diagonal.
            <para>-or-</para><para>For a lower-triangular matrix
            (<see cref="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsLowerTriangular" />is <span class="keyword">true</span>), you
            try to set an component above the diagonal.
            </para><para>-or-</para><para>The matrix has <see cref="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.IsUnitDiagonal" /> set
            to <span class="keyword">true</span>, and you try to set a diagonal component.
            </para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves a triangular system of equations that this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> represents.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that specifies
            the right-hand side of the system of equations.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> that is the solution
            of the system of equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in this matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves a triangular system of equations that this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> represents.
            </summary>
      <param name="rightHandSide">A single-precision vector that specifies
            the right-hand side of the system of equations.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the vector <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix.TriangleMode">
      <summary>
            Gets a value that indicates whether a <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleTriangularMatrix" />
            is upper or lower triangular.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix">
      <summary>
            Represents a complex matrix that is the Fourier transform of a real signal.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix" /> object.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="matrix" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="column">The zero-based index of the column.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix.Multiply(Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a matrix by a given factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix.SetValue(Extreme.Mathematics.SingleComplex,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="column">The zero-based index of the column.</param>
      <param name="value">A <see cref="!:single" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector">
      <summary>
            Represents a complex vector that is the Fourier transform of a real signal.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SignalProcessing.ComplexConjugateSignalVector" /> object.
            </summary>
      <param name="length">The length of the new vector.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector.Apply(System.Func{Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex})">
      <summary>
            Applies a function to the elements of a dense comlex vector.
            </summary>
      <param name="function">A delegate that represents a function of one complex variable</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector.ComponentwiseMultiply(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another vector.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector.Multiply(Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector.SetValue(Extreme.Mathematics.SingleComplex,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="!:single" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleFft">
      <summary>
            Represents a discrete one-dimensional Fourier Transform implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.#ctor(Extreme.Mathematics.SignalProcessing.FftDomain,System.Int32)">
      <summary>
            Constructs a new FFT transform implementation.
            </summary>
      <param name="domain">The domain of the signal.</param>
      <param name="length">The length of the transform.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransform(Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal and returns the result.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SignalProcessing.ComplexConjugateSignalVector" /> vector to hold the transformed signal.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransform(Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="output">A <see cref="T:System.Double" /> vector containing the input signal.</param>
      <param name="input">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransform(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal and returns the result..
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector containing the input signal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the transformed signal.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransform(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector to hold the transformed signal.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransform(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="output">A <see cref="T:System.Double" /> vector containing the input signal.</param>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransform(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleVector,Extreme.Mathematics.SignalProcessing.RealFftFormat)">
      <summary>
            Computes the inverse discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector containing the transformed signal.</param>
      <param name="output">A <see cref="T:System.Double" /> vector to hold the restored real signal.</param>
      <param name="outputFormat">A <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value that specifies whether to return
            a one-sided or a two-sided transform.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="outputFormat" /> is not a valid <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="outputFormat" /> equals <c>OneSided</c> and the length of <paramref name="input" />
            does not equal half the length of <paramref name="output" /> plus one.
            <para>-or-</para><para><paramref name="outputFormat" /> equals <c>TwoSided</c> and the length of <paramref name="input" />
            does not equal the length of <paramref name="output" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the inverse discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a dense comlex vector containing the input signal.
            On output, the inverse transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.BackwardTransformInPlace(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Computes the inverse discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> vector containing the input signal.
            On output, the inverse transform of the input.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransform(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> vector containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransform(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal and returns the result.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> vector containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransform(Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransform(Extreme.Mathematics.SingleVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal and returns the result.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> vector containing the input signal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SignalProcessing.ComplexConjugateSignalVector" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransform(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> vector containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransform(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SignalProcessing.RealFftFormat)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> vector containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> vector to hold the transformed signal.</param>
      <param name="outputFormat">A <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value that specifies whether to return
            a one-sided or a two-sided transform.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="outputFormat" /> is not a valid <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="outputFormat" /> equals <c>OneSided</c> and the length of <paramref name="output" />
            does not equal half the length of <paramref name="input" /> plus one.
            <para>-or-</para><para><paramref name="outputFormat" /> equals <c>TwoSided</c> and the length of <paramref name="input" />
            does not equal the length of <paramref name="output" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a dense comlex vector containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft.ForwardTransformInPlace(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> vector containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleFft2D">
      <summary>
            Represents a discrete 2-dimensional Fourier Transform implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.#ctor(Extreme.Mathematics.SignalProcessing.FftDomain,System.Int32,System.Int32)">
      <summary>
            Constructs a new FFT transform implementation.
            </summary>
      <param name="domain">The domain of the signal.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransform(Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal and returns the result.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix" /> matrix to hold the transformed signal.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransform(Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="output">A <see cref="T:System.Double" /> matrix containing the input signal.</param>
      <param name="input">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransform(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal and returns the result..
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix containing the input signal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the transformed signal.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransform(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix to hold the transformed signal.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransform(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="output">A <see cref="T:System.Double" /> matrix containing the input signal.</param>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransform(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SignalProcessing.RealFftFormat)">
      <summary>
            Computes the inverse discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix containing the transformed signal.</param>
      <param name="output">A <see cref="T:System.Double" /> matrix to hold the restored real signal.</param>
      <param name="outputFormat">A <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value that specifies whether to return
            a one-sided or a two-sided transform.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="outputFormat" /> is not a valid <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="outputFormat" /> equals <c>OneSided</c> and the length of <paramref name="input" />
            does not equal half the length of <paramref name="output" /> plus one.
            <para>-or-</para><para><paramref name="outputFormat" /> equals <c>TwoSided</c> and the length of <paramref name="input" />
            does not equal the length of <paramref name="output" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the inverse discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the input signal.
            On output, the inverse transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.BackwardTransformInPlace(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Computes the inverse discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix containing the input signal.
            On output, the inverse transform of the input.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransform(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> matrix containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="input" /> does not equal the length of <paramref name="output" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransform(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal and returns the result.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransform(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransform(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal and returns the result.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> matrix containing the input signal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransform(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> matrix containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix to hold the transformed signal.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransform(Extreme.Mathematics.SingleMatrix,Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SignalProcessing.RealFftFormat)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> matrix containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix to hold the transformed signal.</param>
      <param name="outputFormat">A <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value that specifies whether to return
            a one-sided or a two-sided transform.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="outputFormat" /> is not a valid <see cref="T:Extreme.Mathematics.SignalProcessing.RealFftFormat" /> value.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <paramref name="outputFormat" /> equals <c>OneSided</c> and the length of <paramref name="output" />
            does not equal half the length of <paramref name="input" /> plus one.
            <para>-or-</para><para><paramref name="outputFormat" /> equals <c>TwoSided</c> and the length of <paramref name="input" />
            does not equal the length of <paramref name="output" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFft2D.ForwardTransformInPlace(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> matrix containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleFftBase">
      <summary>
            Represents a discrete Fourier Transform implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftBase.#ctor(Extreme.Mathematics.SignalProcessing.FftDomain,System.Int32)">
      <summary>
            Constructs a new one-dimensional FFT transform implementation.
            </summary>
      <param name="domain">The domain of the signal.</param>
      <param name="length">The length of the transform.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftBase.#ctor(Extreme.Mathematics.SignalProcessing.FftDomain,System.Int32,System.Int32)">
      <summary>
            Constructs a new two-dimensional FFT transform implementation.
            </summary>
      <param name="domain">The domain of the signal.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.BackwardScaleFactor">
      <summary>
            Gets or sets the scale factor used in forward transforms.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftBase.Commit">
      <summary>
            Commits the implementation.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.Committed">
      <summary>
            Gets a value that indicates whether the FFT implementation has committed to its current property values.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.Dimension">
      <summary>
            Gets or sets the dimension of the FFT.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftBase.Dispose">
      <summary>
            Implements the <see cref="T:System.IDisposable" /> interface.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftBase.Dispose(System.Boolean)">
      <summary>
            Implements the Dispose pattern.
            </summary>
      <param name="disposing">
        <markup>
          <include item="SMCAutoDocDisposeParam">
            <parameter>Extreme.Mathematics.SignalProcessing.SingleFftBase</parameter>
          </include>
        </markup>
      </param>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.Domain">
      <summary>
            Gets or sets the domain of the FFT.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.ForwardScaleFactor">
      <summary>
            Gets or sets the scale factor used in forward transforms.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftBase.GetLength(System.Int32)">
      <summary>
            Returns the length of the transform for the specified dimension.
            </summary>
      <param name="dimension">The zero-based index of the dimension.</param>
      <returns>The length of the transform in the specified dimension.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less than zero or greater than the dimension of the transform.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.InPlace">
      <summary>
            Gets or sets a value that indicates whether the transform should be performed in place.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleFftProvider">
      <summary>
            Provides access to a specific FFT implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftProvider.#ctor">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFftProvider" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftProvider.Create1DComplexFft(System.Int32)">
      <summary>
            Creates a Fast Fourier Transformer for one-dimensional real data.
            </summary>
      <param name="length">The length of the data vectors.</param>
      <returns>An <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFft" /> object that can be used to compute an FFT of length equal to <paramref name="length" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftProvider.Create1DRealFft(System.Int32)">
      <summary>
            Creates a Fast Fourier Transformer for one-dimensional real data.
            </summary>
      <param name="length">The length of the data vectors.</param>
      <returns>An <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFft" /> object that can be used to compute an FFT of length equal to <paramref name="length" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftProvider.Create2DComplexFft(System.Int32,System.Int32)"></member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleFftProvider.Create2DRealFft(System.Int32,System.Int32)">
      <summary>
            Creates a Fast Fourier Transformer for two-dimensional real data.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>An <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFft" /> object that can be used to compute an FFT of length equal to <paramref name="length" />.</returns>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleManagedFft">
      <summary>
            Represents a managed FFT implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft.#ctor(Extreme.Mathematics.SignalProcessing.FftDomain,System.Int32)">
      <summary>
            Constructs a new managed FFT implementation.
            </summary>
      <param name="domain">An <see cref="T:Extreme.Mathematics.SignalProcessing.FftDomain" /> value that specifies whether the forward transform
            is of a real or a complex signal.</param>
      <param name="length">The length of the transform.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft.BackwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.Domain" /> of the transform is not complex.
            <para>-or-</para><para>The input and output are the same, but the transform was not set up for in place calculation</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft.BackwardTransform(Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft.BackwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the inverse discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.
            On output, the inverse transform of the input.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft.ForwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept complex input.
            <para>-or-</para><para><paramref name="input" /> and <paramref name="output" /> are the same, but the Fourier transform implementation is not configured
            to handle in-place transforms.</para></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft.ForwardTransform(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalVector)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft.ForwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Computes the discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept complex input.
            <para>-or-</para><para>The Fourier transform implementation is not configured to handle in-place transforms.</para></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D">
      <summary>
            Represents a managed two-dimensional FFT implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D.#ctor(Extreme.Mathematics.SignalProcessing.FftDomain,System.Int32,System.Int32)">
      <summary>
            Constructs a new managed FFT implementation.
            </summary>
      <param name="domain">An <see cref="T:Extreme.Mathematics.SignalProcessing.FftDomain" /> value that specifies whether the forward transform
            is of a real or a complex signal.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D.BackwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">
            The <see cref="P:Extreme.Mathematics.SignalProcessing.SingleFftBase.Domain" /> of the transform is not complex.
            <para>-or-</para><para>The input and output are the same, but the transform was not set up for in place calculation</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D.BackwardTransform(Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix,Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D.BackwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the inverse discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.
            On output, the inverse transform of the input.</param>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D.ForwardTransform(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal.
            </summary>
      <param name="input">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept complex input.
            <para>-or-</para><para><paramref name="input" /> and <paramref name="output" /> are the same, but the Fourier transform implementation is not configured
            to handle in-place transforms.</para></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D.ForwardTransform(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,Extreme.Mathematics.SignalProcessing.SingleComplexConjugateSignalMatrix)">
      <summary>
            Computes the discrete Fourier transform of a real signal.
            </summary>
      <param name="input">A <see cref="T:System.Double" /> array containing the input signal.</param>
      <param name="output">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array to hold the transformed signal.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept real input.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="output" /> is <see langword="null" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFft2D.ForwardTransformInPlace(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Computes the discrete Fourier transform of a complex signal in place.
            </summary>
      <param name="input">On input, a <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the input signal.
            On output, the forward transform of the input.</param>
      <exception cref="T:System.InvalidOperationException">The Fourier transform implementation is not configured
            to accept complex input.
            <para>-or-</para><para>The Fourier transform implementation is not configured to handle in-place transforms.</para></exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="input" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider">
      <summary>
            Represents the provider of managed FFT implementations.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider.ComplexManagedThresholdLength">
      <summary>
            Gets or sets the threshold for switching between the managed and native FFT providers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider.Create1DComplexFft(System.Int32)">
      <summary>
            Creates a Fast Fourier Transformer for one-dimensional complex data.
            </summary>
      <param name="length">The length of the data vectors.</param>
      <returns>An <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFft" /> object that can be used to compute an FFT of length equal to <paramref name="length" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider.Create1DRealFft(System.Int32)">
      <summary>
            Creates a Fast Fourier Transformer for one-dimensional real data.
            </summary>
      <param name="length">The length of the data vectors.</param>
      <returns>An <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFft" /> object that can be used to compute an FFT of length equal to <paramref name="length" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider.Create2DComplexFft(System.Int32,System.Int32)">
      <summary>
            Creates a Fast Fourier Transformer for two-dimensional complex data.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFft2D" /> object that can be used to compute 
            a 2D FFT of size <paramref name="RowCount" /> by <paramref name="columnCount" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider.Create2DRealFft(System.Int32,System.Int32)">
      <summary>
            Creates a Fast Fourier Transformer for two-dimensional real data.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <returns>An <see cref="T:Extreme.Mathematics.SignalProcessing.SingleFft" /> object that can be used to compute an FFT of length equal to <paramref name="length" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The total number of elements is greater than 2<sup>31</sup>-1.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.SignalProcessing.SingleManagedFftProvider.RealManagedThresholdLength">
      <summary>
            Gets or sets the threshold for switching between the managed and native FFT providers.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 1 BLAS.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Amax(System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Asum(System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Axpy(System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Copy(System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Dot(System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <returns>The dot product of the two vectors.</returns>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Nrm2(System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Rot(System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0)">
      <summary>
            Applies a Givens plane rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="c">The first rotation element,
            the cosine of the rotation angle.</param>
      <param name="s">The second rotation element,
            the sine of the rotation angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Rotg(`0@,`0@,`0@,`0@)">
      <summary>
            Generates the elements for a Givens plane rotation.
            </summary>
      <param name="a">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element <i>r</i>.</param>
      <param name="b">The second element of the input vector.
            On exit, this value is overwritten with the
            reconstruction value <i>z</i>.</param>
      <param name="c">On exit, this value is overwritten with
            the first rotation element, the cosine of the rotation
            angle.</param>
      <param name="s">On exit, this value is overwritten with
            the second rotation element, the sine of the rotation
            angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Rotm(System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Rotmg(`0@,`0@,`0@,`0,`0[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="d1">The first scale factor for the modified
            Givens transform.</param>
      <param name="d2">The second scale factor for the modified
            Givens transform.</param>
      <param name="x1">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element.</param>
      <param name="y1">The second element of the input
            vector.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Scal(System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel1`1.Swap(System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 2 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Gbmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general band matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="ku">The upper bandwidth of the matrix <paramref name="a" />.</param>
      <param name="kl">The lower bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Gemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Ger(System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Sbmv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Symv(Extreme.Mathematics.MatrixTriangle,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Syr(Extreme.Mathematics.MatrixTriangle,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Syr2(Extreme.Mathematics.MatrixTriangle,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Performs a symmetric rank two update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Tbmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Tbsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular band system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Trmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel2`1.Trsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel3`1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 3 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel3`1.Gemm(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of two general matrices and a scaled matrix.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="transB">Specifies the operation to be
            performed on the matrix <paramref name="b" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply the product of the matrices.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel3`1.Symm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a symmetric and a general matrix and a scaled matrix.
            </summary>
      <param name="side">Specifies on which side the symmetric
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel3`1.Syr2k(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>2k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel3`1.Syrk(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="trans" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel3`1.Trmm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular and a general matrix.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.IBlasLevel3`1.Trsm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,`0,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Solution of a triangular linear system with
            multiple right-hand sides.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support T-precision real LAPACK routines
            for general matrices.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Gbcon(Extreme.Mathematics.MatrixNorm,System.Int32,System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],`0,`0@,System.Int32@)">
      <summary>
        <para>
            Estimates the reciprocal of the condition number of a real
            general band matrix A, in either the 1-norm or the infinity-norm,
            using the LU factorization computed by DGBTRF.</para>
      </summary>
      <param name="norm">
        <code>
            NORM is CHARACTER*1
            Specifies whether the 1-norm condition number or the
            infinity-norm condition number is required:
            = '1' or 'O':  1-norm;
            = 'I':         Infinity-norm.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="kl">
        <code>
            KL is INTEGER
            The number of subdiagonals within the band of A.  KL &gt;= 0.
            </code>
      </param>
      <param name="ku">
        <code>
            KU is INTEGER
            The number of superdiagonals within the band of A.  KU &gt;= 0.
            </code>
      </param>
      <param name="ab">
        <code>
            AB is DOUBLE PRECISION array, dimension (LDAB,N)
            Details of the LU factorization of the band matrix A, as
            computed by DGBTRF.  U is stored as an upper triangular band
            matrix with KL+KU superdiagonals in rows 1 to KL+KU+1, and
            the multipliers used during the factorization are stored in
            rows KL+KU+2 to 2*KL+KU+1.
            </code>
      </param>
      <param name="ldab">
        <code>
            LDAB is INTEGER
            The leading dimension of the array AB.  LDAB &gt;= 2*KL+KU+1.
            </code>
      </param>
      <param name="ipiv">
        <code>
            IPIV is INTEGER array, dimension (N)
            The pivot indices; for 1 &lt;= i &lt;= N, row i of the matrix was
            interchanged with row IPIV(i).
            </code>
      </param>
      <param name="aNorm">
        <code>
            ANORM is DOUBLE PRECISION
            If NORM = '1' or 'O', the 1-norm of the original matrix A.
            If NORM = 'I', the infinity-norm of the original matrix A.
            </code>
      </param>
      <param name="rcond">
        <code>
            RCOND is DOUBLE PRECISION
            The reciprocal of the condition number of the matrix A,
            computed as RCOND = 1/(norm(A) * norm(inv(A))).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0: if INFO = -i, the i-th argument had an illegal value
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Gbtrf(System.Int32,System.Int32,System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
        <para>
            Computes an LU factorization of a real m-by-n band matrix A
            using partial pivoting with row interchanges.</para>
      </summary>
      <param name="m">
        <code>
            M is INTEGER
            The number of rows of the matrix A.  M &gt;= 0.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The number of columns of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="kl">
        <code>
            KL is INTEGER
            The number of subdiagonals within the band of A.  KL &gt;= 0.
            </code>
      </param>
      <param name="ku">
        <code>
            KU is INTEGER
            The number of superdiagonals within the band of A.  KU &gt;= 0.
            </code>
      </param>
      <param name="ab">
        <code>
            AB is DOUBLE PRECISION array, dimension (LDAB,N)
            On entry, the matrix A in band storage, in rows KL+1 to
            2*KL+KU+1; rows 1 to KL of the array need not be set.
            The j-th column of A is stored in the j-th column of the
            array AB as follows:
            AB(kl+ku+1+i-j,j) = A(i,j) for max(1,j-ku)&lt;=i&lt;=min(m,j+kl)
            On exit, details of the factorization: U is stored as an
            upper triangular band matrix with KL+KU superdiagonals in
            rows 1 to KL+KU+1, and the multipliers used during the
            factorization are stored in rows KL+KU+2 to 2*KL+KU+1.
            See below for further details.
            </code>
      </param>
      <param name="ldab">
        <code>
            LDAB is INTEGER
            The leading dimension of the array AB.  LDAB &gt;= 2*KL+KU+1.
            </code>
      </param>
      <param name="ipiv">
        <code>
            IPIV is INTEGER array, dimension (min(M,N))
            The pivot indices; for 1 &lt;= i &lt;= min(M,N), row i of the
            matrix was interchanged with row IPIV(i).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0: successful exit
            &lt; 0: if INFO = -i, the i-th argument had an illegal value
            &gt; 0: if INFO = +i, U(i,i) is exactly zero. The factorization
                 has been completed, but the factor U is exactly
                 singular, and division by zero will occur if it is used
                 to solve a system of equations.
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Gbtrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Solves a system of linear equations
               A * X = B  or  A**T * X = B
            with a general band matrix A using the LU factorization computed
            by DGBTRF.</para>
      </summary>
      <param name="trans">
        <code>
            TRANS is CHARACTER*1
            Specifies the form of the system of equations.
            = 'N':  A * X = B  (No transpose)
            = 'T':  A**T* X = B  (Transpose)
            = 'C':  A**T* X = B  (Conjugate transpose = Transpose)
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="kl">
        <code>
            KL is INTEGER
            The number of subdiagonals within the band of A.  KL &gt;= 0.
            </code>
      </param>
      <param name="ku">
        <code>
            KU is INTEGER
            The number of superdiagonals within the band of A.  KU &gt;= 0.
            </code>
      </param>
      <param name="nrhs">
        <code>
            NRHS is INTEGER
            The number of right hand sides, i.e., the number of columns
            of the matrix B.  NRHS &gt;= 0.
            </code>
      </param>
      <param name="ab">
        <code>
            AB is DOUBLE PRECISION array, dimension (LDAB,N)
            Details of the LU factorization of the band matrix A, as
            computed by DGBTRF.  U is stored as an upper triangular band
            matrix with KL+KU superdiagonals in rows 1 to KL+KU+1, and
            the multipliers used during the factorization are stored in
            rows KL+KU+2 to 2*KL+KU+1.
            </code>
        <param name="ldab"></param>
        <code>
            LDAB is INTEGER
            The leading dimension of the array AB.  LDAB &gt;= 2*KL+KU+1.
            </code>
      </param>
      <param name="ipiv">
        <code>
            IPIV is INTEGER array, dimension (N)
            The pivot indices; for 1 &lt;= i &lt;= N, row i of the matrix was
            interchanged with row IPIV(i).
            </code>
      </param>
      <param name="b">
        <code>
            B is DOUBLE PRECISION array, dimension (LDB,NRHS)
            On entry, the right hand side matrix B.
            On exit, the solution matrix X.
            </code>
      </param>
      <param name="ldb">
        <code>
            LDB is INTEGER
            The leading dimension of the array B.  LDB &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0: if INFO = -i, the i-th argument had an illegal value
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Gecon(Extreme.Mathematics.MatrixNorm,System.Int32,`0[],System.Int32,System.Int32,`0,`0@,System.Int32@)">
      <summary>
            Estimates the reciprocal of the condition number of a general
            real matrix, in either the 1-norm or the infinity-norm, using
            the LU decomposition computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.
            </summary>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> value that specifies the norm.</param>
      <param name="n">An integer specifying the number of
            rows and columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.</param>
      <param name="a">Array that contains the elements of the LU decomposition
            computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the LU decomposition.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="anorm">The norm of type <paramref name="norm" /> of the matrix.</param>
      <param name="rcond">On output, an estimate for the reciprocal of the condition number of the matrix.</param>
      <param name="info">Reference to an integer containing a result code. Zero indicates success.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Geev(System.Char,System.Char,System.Int32,`0[],System.Int32,System.Int32,`0[],`0[],`0[],System.Int32,`0[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Geqrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32@)">
      <summary>
             DGEQRF computes a QR decomposition of a real M-by-N matrix A:
             A = Q * R.
            
             Arguments
             =========
            
             M       (input) INTEGER
             The number of rows of the matrix A.  M &gt;= 0.
            
             N       (input) INTEGER
             The number of columns of the matrix A.  N &gt;= 0.
            
             A       (input/output) DOUBLE PRECISION array, dimension (LDA,N)
             On entry, the M-by-N matrix A.
             On exit, the elements on and above the diagonal of the array
             contain the min(M,N)-by-N upper trapezoidal matrix R (R is
             upper triangular if m &gt;= n); the elements below the diagonal,
             with the array TAU, represent the orthogonal matrix Q as a
             product of min(m,n) elementary reflectors (see Further
             Details).
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= max(1,M).
            
             TAU     (output) DOUBLE PRECISION array, dimension (min(M,N))
             The scalar factors of the elementary reflectors (see Further
             Details).
            
             WORK    (workspace/output) DOUBLE PRECISION array, dimension (LWORK)
             On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
            
             LWORK   (input) INTEGER
             The dimension of the array WORK.  LWORK &gt;= max(1,N).
             For optimum performance LWORK &gt;= N*NB, where NB is
             the optimal blocksize.
            
             If LWORK = -1, then a workspace query is assumed; the routine
             only calculates the optimal size of the WORK array, returns
             this value as the first entry of the WORK array, and no error
             message related to LWORK is issued by XERBLA.
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
             Further Details
             ===============
            
             The matrix Q is represented as a product of elementary reflectors
            
                Q = H(1) H(2) . . . H(k), where k = min(m,n).
            
             Each H(i) has the form
            
                H(i) = I - tau * v * v'
            
             where tau is a real scalar, and v is a real vector with
             v(1:i-1) = 0 and v(i) = 1; v(i+1:m) is stored on exit inthis. A(i+1:m,i),
             and tau inthis. TAU(i).
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Gesdd(System.Char,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],`0[],System.Int32,`0[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
            Computes an LU decomposition of a general M-by-N matrix A
            using partial pivoting with row interchanges.
            <para>
            The decomposition has the form</para><para><center>A = P * L * U</center></para><para>where P is a permutation matrix, L is lower triangular with unit
            diagonal elements (lower trapezoidal if m &gt; n), and U is upper
            triangular (upper trapezoidal if m &lt; n).
            </para><para>
            This is the right-looking Level 3 BLAS version of the algorithm.
            </para></summary>
      <param name="m">An integer specifying the number of rows
            of the matrix <paramref name="a" />. Must be greater than
            or equal to zero.</param>
      <param name="n">An integer specifying the number of
            columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">Array specifying the
            <paramref name="m" />-by-<paramref name="n" /> matrix
            to be factored. On exit, the factors L and U from the
            decomposition A = P*L*U; the unit diagonal elements of
            L are not stored.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array of length
            min(<paramref name="m" />,<paramref name="n" />) that
            will hold the pivot indexes. Row <i>i</i> of the
            matrix was interchanged with row
            <paramref name="ipiv" />[<i>i</i>].</param>
      <param name="info">Reference to an integer containing a
            result code. Zero indicates success. Greater than zero
            indicates U(i,i) is exactly zero. The decomposition
            has been completed, but the factor U is exactly
            singular, and division by zero will occur if it is used
            to solve a system of equations.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getri(System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
            Computes the inverse of a matrix using the LU decomposition computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.
            </summary>
      <param name="n">An integer specifying the number of
            rows and columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.</param>
      <param name="a">On input, array that contains the elements of the LU decomposition
            computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />. On output, the elements of the inverse of the matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the LU decomposition.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array of length
            <paramref name="n" /> that holds the pivot indexes
            computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="info">Reference to an integer containing a result code. Zero indicates success.
            If greater than zero, it contains the 1-based index of the first zero element on the diagonal
            of U; the matrix is singular and its inverse could not be computed.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Solves a system of linear equations using the LU decomposition computed
            by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.
            </summary>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that specifies the form of the system
            of equations.</param>
      <param name="n">An integer specifying the number of
            rows and columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.</param>
      <param name="nrhs">An integer specifying the number of right-hand sides. Must be
            greater than or equal to zero.</param>
      <param name="a">Array that contains the elements of the LU decomposition
            computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the LU decomposition.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array of length
            <paramref name="n" /> that holds the pivot indexes
            computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Getrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="b">An array containing the elements of the right-hand side.</param>
      <param name="bOffset">Offset into <paramref name="b" /> of the first element of the right-hand side.</param>
      <param name="ldb">Distance between the first element of the columns of the right-hand side in the array <paramref name="b" />.</param>
      <param name="info">Reference to an integer containing a result code. Zero indicates success.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Lacpy(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Copies the specified portion of a matrix to another.
            </summary>
      <param name="storageTriangle">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies which part of the matrix to copy.</param>
      <param name="m">The number of rows of the matrix.</param>
      <param name="n">The number of columns of the matrix.</param>
      <param name="a">An array containing the elements of the source matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" /> of the first element of the source matrix.</param>
      <param name="lda">Distance between the first element of the columns of the source matrix in the array <paramref name="a" />.</param>
      <param name="b">An array containing the elements of the destination matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" /> of the first element of the destination matrix.</param>
      <param name="ldb">Distance between the first element of the columns of the destination matrix in the array <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Lange(Extreme.Mathematics.MatrixNorm,System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Computes the norm of a matrix.
            </summary>
      <param name="m">An integer specifying the number of rows
            of the matrix <paramref name="a" />. Must be greater than
            or equal to zero.</param>
      <param name="n">An integer specifying the number of
            columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">Array specifying the
            <paramref name="m" />-by-<paramref name="n" /> matrix
            to be factored. On exit, the factors L and U from the
            decomposition A = P*L*U; the unit diagonal elements of
            L are not stored.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> value that specifies the norm to compute.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Lantr(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,`0[],System.Int32,System.Int32)">
      <summary>
            Computes the norm of a triangular matrix.
            </summary>
      <param name="storageTriangle">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value thst specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">An integer specifying the number of rows
            of the matrix <paramref name="a" />. Must be greater than
            or equal to zero.</param>
      <param name="n">An integer specifying the number of
            columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">Array specifying the
            <paramref name="m" />-by-<paramref name="n" /> matrix
            to be factored. On exit, the factors L and U from the
            decomposition A = P*L*U; the unit diagonal elements of
            L are not stored.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> value that specifies the norm to compute.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Ormqr(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Multiplies the orthogonal component of a QR decomposition and a matrix.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that indicates whether the orthogonal
            matrix is the left or the right operand.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that indicates whether the orthogonal
            matrix should be transposed.</param>
      <param name="m">The number of rows of the matrix.</param>
      <param name="n">The number of columns of the matrix.</param>
      <param name="k">The number of columns that define the orthogonal matrix.</param>
      <param name="a">A <see cref="T:System.Double" /> array containing the components of the QR decomposition
            as computed by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Geqrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32@)" />.</param>
      <param name="aOffset">The offset of the first component of the QR decomposition in the array <paramref name="a" />.</param>
      <param name="lda">The distance between columns of the QR decomposition in the array <paramref name="a" />.</param>
      <param name="tau">A <see cref="T:System.Double" /> array containing the scalar factors of the QR decomposition as returned
            by <see cref="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Geqrf(System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32@)" />.</param>
      <param name="tauOffset">The offset of the first factor in the <paramref name="tau" /> array.</param>
      <param name="c">A <see cref="T:System.Double" /> array containing the components of the matrix to be multiplied.</param>
      <param name="cOffset">The offset of the first component of the matrix in the array <paramref name="c" />.</param>
      <param name="ldc">The distance between columns of the matrix <paramref name="c" />.</param>
      <param name="info">On output, a zero value indicates success.</param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Pbcon(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0,`0@,System.Int32@)">
      <summary>
        <para>
            Estimates the reciprocal of the condition number (in the
            1-norm) of a real symmetric positive definite band matrix using the
            Cholesky factorization A = U**T*U or A = L*L**T computed by DPBTRF.</para>
      </summary>
      <param name="storageTriangle">
        <code>
            UPLO is CHARACTER*1
            = 'U':  Upper triangular factor stored in AB;
            = 'L':  Lower triangular factor stored in AB.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="kd">
        <code>
            KD is INTEGER
            The number of superdiagonals of the matrix A if UPLO = 'U',
            or the number of subdiagonals if UPLO = 'L'.  KD &gt;= 0.
            </code>
      </param>
      <param name="ab">
        <code>
            AB is DOUBLE PRECISION array, dimension (LDAB,N)
            The triangular factor U or L from the Cholesky factorization
            A = U**T*U or A = L*L**T of the band matrix A, stored in the
            first KD+1 rows of the array.  The j-th column of U or L is
            stored in the j-th column of the array AB as follows:
            if UPLO ='U', AB(kd+1+i-j,j) = U(i,j) for max(1,j-kd)&lt;=i&lt;=j;
            if UPLO ='L', AB(1+i-j,j)    = L(i,j) for j&lt;=i&lt;=min(n,j+kd).
            </code>
      </param>
      <param name="ldab">
        <code>
            LDAB is INTEGER
            The leading dimension of the array AB.  LDAB &gt;= KD+1.
            </code>
      </param>
      <param name="aNorm">
        <code>
            ANORM is DOUBLE PRECISION
            The 1-norm (or infinity-norm) of the symmetric band matrix A.
            </code>
      </param>
      <param name="rcond">
        <code>
            RCOND is DOUBLE PRECISION
            The reciprocal of the condition number of the matrix A,
            computed as RCOND = 1/(ANORM * AINVNM), where AINVNM is an
            estimate of the 1-norm of inv(A) computed in this routine.
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Pbtrf(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Computes the Cholesky factorization of a real symmetric
            positive definite band matrix A.</para>
      </summary>
      <param name="storageTriangle">
        <code>
            UPLO is CHARACTER*1
            = 'U':  Upper triangle of A is stored;
            = 'L':  Lower triangle of A is stored.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="kd">
        <code>
            KD is INTEGER
            The number of superdiagonals of the matrix A if UPLO = 'U',
            or the number of subdiagonals if UPLO = 'L'.  KD &gt;= 0.
            </code>
      </param>
      <param name="ab">
        <code>
            AB is DOUBLE PRECISION array, dimension (LDAB,N)
            On entry, the upper or lower triangle of the symmetric band
            matrix A, stored in the first KD+1 rows of the array.  The
            j-th column of A is stored in the j-th column of the array AB
            as follows:
            if UPLO = 'U', AB(kd+1+i-j,j) = A(i,j) for max(1,j-kd)&lt;=i&lt;=j;
            if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j&lt;=i&lt;=min(n,j+kd).
            On exit, if INFO = 0, the triangular factor U or L from the
            Cholesky factorization A = U**T*U or A = L*L**T of the band
            matrix A, in the same storage format as A.
            </code>
      </param>
      <param name="ldab">
        <code>
            LDAB is INTEGER
            The leading dimension of the array AB.  LDAB &gt;= KD+1.
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            &gt; 0:  if INFO = i, the leading minor of order i is not
                  positive definite, and the factorization could not be
                  completed.
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Pbtrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Solves a system of linear equations A*X = B with a symmetric
            positive definite band matrix A using the Cholesky factorization
            A = U**T*U or A = L*L**T computed by DPBTRF.</para>
      </summary>
      <param name="storageTriangle">
        <code>
            UPLO is CHARACTER*1
            = 'U':  Upper triangular factor stored in AB;
            = 'L':  Lower triangular factor stored in AB.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="kd">
        <code>
            KD is INTEGER
            The number of superdiagonals of the matrix A if UPLO = 'U',
            or the number of subdiagonals if UPLO = 'L'.  KD &gt;= 0.
            </code>
      </param>
      <param name="nrhs">
        <code>
            NRHS is INTEGER
            The number of right hand sides, i.e., the number of columns
            of the matrix B.  NRHS &gt;= 0.
            </code>
      </param>
      <param name="ab">
        <code>
            AB is DOUBLE PRECISION array, dimension (LDAB,N)
            The triangular factor U or L from the Cholesky factorization
            A = U**T*U or A = L*L**T of the band matrix A, stored in the
            first KD+1 rows of the array.  The j-th column of U or L is
            stored in the j-th column of the array AB as follows:
            if UPLO ='U', AB(kd+1+i-j,j) = U(i,j) for max(1,j-kd)&lt;=i&lt;=j;
            if UPLO ='L', AB(1+i-j,j)    = L(i,j) for j&lt;=i&lt;=min(n,j+kd).
            </code>
      </param>
      <param name="ldab">
        <code>
            LDAB is INTEGER
            The leading dimension of the array AB.  LDAB &gt;= KD+1.
            </code>
      </param>
      <param name="b">
        <code>
            B is DOUBLE PRECISION array, dimension (LDB,NRHS)
            On entry, the right hand side matrix B.
            On exit, the solution matrix X.
            </code>
      </param>
      <param name="ldb">
        <code>
            LDB is INTEGER
            The leading dimension of the array B.  LDB &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Pocon(Extreme.Mathematics.MatrixTriangle,System.Int32,`0[],System.Int32,System.Int32,`0,`0@,System.Int32@)">
      <summary>
        <para>
            Estimates the reciprocal of the condition number (in the
            1-norm) of a real symmetric positive definite matrix using the
            Cholesky factorization A = U**T*U or A = L*L**T computed by DPOTRF.</para>
      </summary>
      <param name="uplo">
        <code>
            UPLO is CHARACTER*1
            = 'U':  Upper triangle of A is stored;
            = 'L':  Lower triangle of A is stored.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="a">
        <code>
            A is DOUBLE PRECISION array, dimension (LDA,N)
            The triangular factor U or L from the Cholesky factorization
            A = U**T*U or A = L*L**T, as computed by DPOTRF.
            </code>
        <code>
            LDA is INTEGER
            The leading dimension of the array A.  LDA &gt;= max(1,N).
            </code>
      </param>
      <param name="anorm">
        <code>
            ANORM is DOUBLE PRECISION
            The 1-norm (or infinity-norm) of the symmetric matrix A.
            </code>
      </param>
      <param name="rcond">
        <code>
            RCOND is DOUBLE PRECISION
            The reciprocal of the condition number of the matrix A,
            computed as RCOND = 1/(ANORM * AINVNM), where AINVNM is an
            estimate of the 1-norm of inv(A) computed in this routine.
            </code>
      </param>
      <param name="work">
        <code>
            WORK is DOUBLE PRECISION array, dimension (3*N)
            </code>
      </param>
      <param name="iwork">
        <code>
            IWORK is INTEGER array, dimension (N)
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &amp;lt; 0:  if INFO = -i, the i-th argument had an illegal value
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Potrf(Extreme.Mathematics.MatrixTriangle,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Computes the Cholesky factorization of a real symmetric
            positive definite matrix A.</para>
      </summary>
      <param name="uplo">
        <code>
            UPLO is CHARACTER*1
            = 'U':  Upper triangle of A is stored;
            = 'L':  Lower triangle of A is stored.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="a">
        <code>
            A is DOUBLE PRECISION array, dimension (LDA,N)
            On entry, the symmetric matrix A.  If UPLO = 'U', the leading
            N-by-N upper triangular part of A contains the upper
            triangular part of the matrix A, and the strictly lower
            triangular part of A is not referenced.  If UPLO = 'L', the
            leading N-by-N lower triangular part of A contains the lower
            triangular part of the matrix A, and the strictly upper
            triangular part of A is not referenced.
            On exit, if INFO = 0, the factor U or L from the Cholesky
            factorization A = U**T*U or A = L*L**T.
            </code>
        <code>
            LDA is INTEGER
            The leading dimension of the array A.  LDA &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            &gt; 0:  if INFO = i, the leading minor of order i is not
                  positive definite, and the factorization could not be
                  completed.
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Potri(Extreme.Mathematics.MatrixTriangle,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Computes the inverse of a real symmetric positive definite
            matrix A using the Cholesky factorization A = U**T*U or A = L*L**T
            computed by DPOTRF.</para>
      </summary>
      <param name="uplo">
        <code>
            UPLO is CHARACTER*1
            = 'U':  Upper triangle of A is stored;
            = 'L':  Lower triangle of A is stored.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="a">
        <code>
            A is DOUBLE PRECISION array, dimension (LDA,N)
            On entry, the triangular factor U or L from the Cholesky
            factorization A = U**T*U or A = L*L**T, as computed by
            DPOTRF.
            On exit, the upper or lower triangle of the (symmetric)
            inverse of A, overwriting the input factor U or L.
            </code>
        <code>
            LDA is INTEGER
            The leading dimension of the array A.  LDA &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            &gt; 0:  if INFO = i, the (i,i) element of the factor U or L is
                  zero, and the inverse could not be computed.
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Potrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Solves a system of linear equations A*X = B with a symmetric
            positive definite matrix A using the Cholesky factorization
            A = U**T*U or A = L*L**T computed by DPOTRF.</para>
      </summary>
      <param name="uplo">
        <code>
            UPLO is CHARACTER*1
            = 'U':  Upper triangle of A is stored;
            = 'L':  Lower triangle of A is stored.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="nrhs">
        <code>
            NRHS is INTEGER
            The number of right hand sides, i.e., the number of columns
            of the matrix B.  NRHS &gt;= 0.
            </code>
      </param>
      <param name="a">
        <code>
            A is DOUBLE PRECISION array, dimension (LDA,N)
            The triangular factor U or L from the Cholesky factorization
            A = U**T*U or A = L*L**T, as computed by DPOTRF.
            </code>
        <code>
            LDA is INTEGER
            The leading dimension of the array A.  LDA &gt;= max(1,N).
            </code>
      </param>
      <param name="b">
        <code>
            B is DOUBLE PRECISION array, dimension (LDB,NRHS)
            On entry, the right hand side matrix B.
            On exit, the solution matrix X.
            </code>
        <code>
            LDB is INTEGER
            The leading dimension of the array B.  LDB &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Syevd(System.Char,Extreme.Mathematics.MatrixTriangle,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Tbtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Solves a triangular system of the form
               A * X = B  or  A**T * X = B,
            where A is a triangular band matrix of order N, and B is an
            N-by NRHS matrix.</para>
      </summary>
      <param name="storageTriangle">
        <code>
            UPLO is CHARACTER*1
            = 'U':  A is upper triangular;
            = 'L':  A is lower triangular.
            </code>
      </param>
      <param name="trans">
        <code>
            TRANS is CHARACTER*1
            Specifies the form the system of equations:
            = 'N':  A * X = B  (No transpose)
            = 'T':  A**T * X = B  (Transpose)
            = 'C':  A**H * X = B  (Conjugate transpose = Transpose)
            </code>
      </param>
      <param name="diag">
        <code>
            DIAG is CHARACTER*1
            = 'N':  A is non-unit triangular;
            = 'U':  A is unit triangular.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="kd">
        <code>
            KD is INTEGER
            The number of superdiagonals or subdiagonals of the
            triangular band matrix A.  KD &gt;= 0.
            </code>
      </param>
      <param name="nrhs">
        <code>
            NRHS is INTEGER
            The number of right hand sides, i.e., the number of columns
            of the matrix B.  NRHS &gt;= 0.
            </code>
      </param>
      <param name="ab">
        <code>
            AB is DOUBLE PRECISION array, dimension (LDAB,N)
            The upper or lower triangular band matrix A, stored in the
            first kd+1 rows of AB.  The j-th column of A is stored
            in the j-th column of the array AB as follows:
            if UPLO = 'U', AB(kd+1+i-j,j) = A(i,j) for max(1,j-kd)&lt;=i&lt;=j;
            if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j&lt;=i&lt;=min(n,j+kd).
            If DIAG = 'U', the diagonal elements of A are not referenced
            and are assumed to be 1.
            </code>
      </param>
      <param name="ldab">
        <code>
            LDAB is INTEGER
            The leading dimension of the array AB.  LDAB &gt;= KD+1.
            </code>
      </param>
      <param name="b">
        <code>
            B is DOUBLE PRECISION array, dimension (LDB,NRHS)
            On entry, the right hand side matrix B.
            On exit, if INFO = 0, the solution matrix X.
            </code>
      </param>
      <param name="ldb">
        <code>
            LDB is INTEGER
            The leading dimension of the array B.  LDB &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            &gt; 0:  if INFO = i, the i-th diagonal element of A is zero,
                  indicating that the matrix is singular and the
                  solutions X have not been computed.
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Trcon(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,`0[],System.Int32,System.Int32,`0@,System.Int32@)">
      <summary>
        <para>
            Estimates the reciprocal of the condition number of a
            triangular matrix A, in either the 1-norm or the infinity-norm.</para>
      </summary>
      <param name="norm">
        <code>
            NORM is CHARACTER*1
            Specifies whether the 1-norm condition number or the
            infinity-norm condition number is required:
            = '1' or 'O':  1-norm;
            = 'I':         Infinity-norm.
            </code>
      </param>
      <param name="storageTriangle">
        <code>
            UPLO is CHARACTER*1
            = 'U':  A is upper triangular;
            = 'L':  A is lower triangular.
            </code>
      </param>
      <param name="diag">
        <code>
            DIAG is CHARACTER*1
            = 'N':  A is non-unit triangular;
            = 'U':  A is unit triangular.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="a">
        <code>
            A is DOUBLE PRECISION array, dimension (LDA,N)
            The triangular matrix A.  If UPLO = 'U', the leading N-by-N
            upper triangular part of the array A contains the upper
            triangular matrix, and the strictly lower triangular part of
            A is not referenced.  If UPLO = 'L', the leading N-by-N lower
            triangular part of the array A contains the lower triangular
            matrix, and the strictly upper triangular part of A is not
            referenced.  If DIAG = 'U', the diagonal elements of A are
            also not referenced and are assumed to be 1.
            </code>
      </param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">
        <code>
            LDA is INTEGER
            The leading dimension of the array A.  LDA &gt;= max(1,N).
            </code>
      </param>
      <param name="rcond">
        <code>
            RCOND is DOUBLE PRECISION
            The reciprocal of the condition number of the matrix A,
            computed as RCOND = 1/(norm(A) * norm(inv(A))).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Trtri(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Computes the inverse of a real upper or lower triangular
            matrix A.</para>
      </summary>
      <param name="storageTriangle">
        <code>
            UPLO is CHARACTER*1
            = 'U':  A is upper triangular;
            = 'L':  A is lower triangular.
            </code>
      </param>
      <param name="diag">
        <code>
            DIAG is CHARACTER*1
            = 'N':  A is non-unit triangular;
            = 'U':  A is unit triangular.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="a">
        <code>
            A is DOUBLE PRECISION array, dimension (LDA,N)
            On entry, the triangular matrix A.  If UPLO = 'U', the
            leading N-by-N upper triangular part of the array A contains
            the upper triangular matrix, and the strictly lower
            triangular part of A is not referenced.  If UPLO = 'L', the
            leading N-by-N lower triangular part of the array A contains
            the lower triangular matrix, and the strictly upper
            triangular part of A is not referenced.  If DIAG = 'U', the
            diagonal elements of A are also not referenced and are
            assumed to be 1.
            On exit, the (triangular) inverse of the original matrix, in
            the same storage format.
            </code>
      </param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">
        <code>
            LDA is INTEGER
            The leading dimension of the array A.  LDA &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0: successful exit
            &lt; 0: if INFO = -i, the i-th argument had an illegal value
            &gt; 0: if INFO = i, A(i,i) is exactly zero.  The triangular
                 matrix is singular and its inverse can not be computed.
            </code>
      </param>
    </member>
    <member name="M:Extreme.Mathematics.Generic.LinearAlgebra.Providers.ILapack`1.Trtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,`0[],System.Int32,System.Int32,`0[],System.Int32,System.Int32,System.Int32@)">
      <summary>
        <para>
            Solves a triangular system of the form
               A * X = B  or  A**T * X = B,
            where A is a triangular matrix of order N, and B is an N-by-NRHS
            matrix.</para>
      </summary>
      <param name="storageTriangle">
        <code>
            UPLO is CHARACTER*1
            = 'U':  A is upper triangular;
            = 'L':  A is lower triangular.
            </code>
      </param>
      <param name="trans">
        <code>
            TRANS is CHARACTER*1
            Specifies the form of the system of equations:
            = 'N':  A * X = B  (No transpose)
            = 'T':  A**T * X = B  (Transpose)
            = 'C':  A**H * X = B  (Conjugate transpose = Transpose)
            </code>
      </param>
      <param name="diag">
        <code>
            DIAG is CHARACTER*1
            = 'N':  A is non-unit triangular;
            = 'U':  A is unit triangular.
            </code>
      </param>
      <param name="n">
        <code>
            N is INTEGER
            The order of the matrix A.  N &gt;= 0.
            </code>
      </param>
      <param name="nrhs">
        <code>
            NRHS is INTEGER
            The number of right hand sides, i.e., the number of columns
            of the matrix B.  NRHS &gt;= 0.
            </code>
      </param>
      <param name="a">
        <code>
            A is DOUBLE PRECISION array, dimension (LDA,N)
            The triangular matrix A.  If UPLO = 'U', the leading N-by-N
            upper triangular part of the array A contains the upper
            triangular matrix, and the strictly lower triangular part of
            A is not referenced.  If UPLO = 'L', the leading N-by-N lower
            triangular part of the array A contains the lower triangular
            matrix, and the strictly upper triangular part of A is not
            referenced.  If DIAG = 'U', the diagonal elements of A are
            also not referenced and are assumed to be 1.
            </code>
      </param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">
        <code>
            LDA is INTEGER
            The leading dimension of the array A.  LDA &gt;= max(1,N).
            </code>
      </param>
      <param name="b">
        <code>
            B is DOUBLE PRECISION array, dimension (LDB,NRHS)
            On entry, the right hand side matrix B.
            On exit, if INFO = 0, the solution matrix X.
            </code>
      </param>
      <param name="bOffset">Offset into <paramref name="b" />
            of the first element of the matrix.</param>
      <param name="ldb">
        <code>
            LDB is INTEGER
            The leading dimension of the array B.  LDB &gt;= max(1,N).
            </code>
      </param>
      <param name="info">
        <code>
            INFO is INTEGER
            = 0:  successful exit
            &lt; 0: if INFO = -i, the i-th argument had an illegal value
            &gt; 0: if INFO = i, the i-th diagonal element of A is zero,
                 indicating that the matrix is singular and the solutions
                 X have not been computed.
            </code>
      </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexLeastSquaresSolver">
      <summary>
            Represents an object that can solve a system of linear
            equations in the least squares sense.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexLeastSquaresSolver.LeastSquaresSolve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the vector <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexLeastSquaresSolver.LeastSquaresSolve(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" /> and overwrites
            the right-hand side with the result.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix underlying
            this system of equations.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexStorage">
      <summary>
            Represents the interface that allows access to an object's
            internal storage of double-precision floating-point numbers.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexStorage.StorageArray">
      <summary>
            Gets the <see cref="T:Extreme.Mathematics.SingleComplex" /> array that stores
            the data for the instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexStorage.StorageIncrement">
      <summary>
            Gets the increment between successive elements of this
            instance in the <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexStorage.StorageArray" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexStorage.StorageOffset">
      <summary>
            Gets the index of the first element of this instance
            in the <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.ISingleComplexStorage.StorageArray" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector">
      <summary>
            Represents a <see cref="T:Extreme.Mathematics.ComplexVector" /> that has one or more zero components at
            the beginning and/or at the end.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" /> with the specified
            length and non-zero range.
            </summary>
      <param name="length">The length of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" />.</param>
      <param name="startIndex">The index of the first non-zero component
            of this vector.</param>
      <param name="endIndex">The index of the last non-zero component
            of this vector</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para><para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.#ctor(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" /> with the specified
            length and non-zero omponents.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="startIndex">The index of the first non-zero component
            of this vector.</param>
      <param name="endIndex">The index of the last non-zero component
            of this vector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para><para>-or-</para><para><paramref name="endIndex" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.#ctor(System.Int32,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" /> with the specified
            length and non-zero omponents.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="startIndex">The index of the first non-zero component
            of this vector.</param>
      <param name="endIndex">The index of the last non-zero component
            of this vector.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this instance
            will also affect the original array.If <span class="keyword">false</span>, the
            components are copied from <paramref name="values" /> to a new
            array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            <para>-or-</para><para><paramref name="startIndex" /> is less than zero or greater than <paramref name="length" />.</para><para>-or-</para><para><paramref name="endIndex" /> is less than zero or greater than <paramref name="length" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            instance that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            instance that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.AbsoluteMaxIndex">
      <summary>
            Returns the index of the component in this
            instance that has the largest absolute
            value.
            </summary>
      <returns>The index of the component in this
            instance that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            instance that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            instance that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.AbsoluteMinIndex">
      <summary>
            Returns the index of the component in this
            instance that has the smallest absolute
            value.
            </summary>
      <returns>The index of the component in this
            instance that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.Add(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds a scaled vector to this instance.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> to add.</param>
      <returns>A reference to this vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.Apply(System.Func{Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex})">
      <summary>
            Applies a function to the writeable elements of a <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="function">A delegate that represents a function of one complex variable</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this instance using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.CopyTo(Extreme.Mathematics.SingleComplex[])">
      <summary>
            Copies the components of this instance
            to another vector.
            </summary>
      <param name="array">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that
            is to hold the components of this instance.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="array" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.CopyTo(Extreme.Mathematics.SingleComplexVector,System.Int32)">
      <summary>
            Copies the components of this instance
            to another <see cref="T:Extreme.Mathematics.ComplexVector" /> starting at the specified position.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> whose
            components are to be set.</param>
      <param name="index">The index in <paramref name="vector" />
            where copying is to start.</param>
      <returns>A reference to the copied vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="vector" /> is less than <paramref name="index" /> plus the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.DotProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.EndIndex">
      <summary>
            Gets the index of the last non-zero component in this vector.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to.</param>
      <returns>
        <strong>True</strong> if the specified object is
            identical to this instance; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetComponents">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" />.
            </summary>
      <returns>An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.IEnumerator" /> instance for this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.ComplexBandVectorEnumerator" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetImaginaryPart">
      <summary>
            Returns a real vector containing the imaginary components of the vector.
            </summary>
      <returns>A single-precision vector containing the imaginary part of each component of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetRealPart">
      <summary>
            Returns a real vector containing the real components of the vector.
            </summary>
      <returns>A single-precision vector containing the real part of each component of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetSubvector(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a vector whose components are a subset of the components of
            this instance
            </summary>
      <param name="startIndex">The index of the first element of this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this instance corresponding to an
            increment of one in the new vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.IsComponentWritable(System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.Multiply(Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            The vector contains a fixed unit element and <paramref name="factor" /> is not equal to 1.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.OneNorm">
      <summary>
            Returns the one-norm of this instance.
            </summary>
      <returns>The one-norm of this instance.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector)~Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector">
      <summary>
            Converts a double-precision band vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector)~Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector">
      <summary>
            Converts a single-precision band vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.SetValue(Extreme.Mathematics.SingleComplex)">
      <summary>
            Sets all the writeable components of this instance to
            the specified value.
            </summary>
      <param name="value">The value to be assigned to each component
            of this instance.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.SetValue(Extreme.Mathematics.SingleComplex,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            An attempt is made to modify a component of a fixed
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" />.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.StartIndex">
      <summary>
            Gets the index of the first non-zero component in this vector.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.Swap(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector)">
      <summary>
            Swaps the elements of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexBandVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> is not equal to the length of
            <paramref name="vector2" />.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">The position of the
            non-zero part of <paramref name="vector1" /> is not equal to the position
            of the non-zero part of <paramref name="vector2" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.ToDenseVector">
      <summary>
            Makes a copy of this instance and returns it as a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that is a copy of
            this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexBandVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Vector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition">
      <summary>
            Represents the Cholesky decomposition of a
            positive-definite <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexCholeskyDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexCholeskyDecomposition" />
            object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> that is to be
            factorized. This matrix must be positive-definite,
            or the decomposition will fail.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.Decompose">
      <summary>
            Performs the actual Cholesky decomposition.
            </summary>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixNotPositiveDefiniteException">The
            matrix is not positive definite.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the decomposed <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the factorized
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> that is the inverse matrix of the
            <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDecomposition.BaseMatrix">base matrix</see> of this decomposition.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of the matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> and optionally overwrites
            the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexCholeskyDecomposition.TriangularFactor">
      <summary>
            Gets the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexCholeskyDecomposition" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexColumnCollection">
      <summary>
            Represents the collection of columns of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexColumnCollection.Count">
      <summary>
            Gets the number of columns in the collection.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexColumnCollection.GetEnumerator">
      <summary>
            Returns an enumerator that can iterate through the collection.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexColumnCollection.Item(System.Int32)">
      <summary>
            Gets or sets the components of the specified column in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexColumnCollection" />.
            </summary>
      <param name="index">The zero-based index of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the number of columns in the matrix.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector">
      <summary>
            Represents a vector whose components are all the same.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.#ctor(System.Int32,Extreme.Mathematics.SingleComplex)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexConstantVector" />.
            </summary>
      <param name="value">The constant value of all
            the components.</param>
      <param name="length">The length of the vector.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.ComplexVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.DotProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.GetComponents">
      <summary>
            Gets the components of the <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.GetImaginaryPart">
      <summary>
            Returns a real vector containing the imaginary components of the vector.
            </summary>
      <returns>A single-precision vector containing the imaginary part of each component of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.GetRealPart">
      <summary>
            Returns a real vector containing the real components of the vector.
            </summary>
      <returns>A single-precision vector containing the real part of each component of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>Always returns <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.ComplexConstantVector)~Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector">
      <summary>
            Converts a double-precision constant vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexConstantVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector)~Extreme.Mathematics.LinearAlgebra.Complex.ComplexConstantVector">
      <summary>
            Converts a single-precision vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexConstantVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.SetValue(Extreme.Mathematics.SingleComplex,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">
            An attempt is made to modify a component of a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexConstantVector" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexConstantVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition">
      <summary>
            Represents a matrix decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDecomposition" /> object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is to be
            factorized.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.#ctor(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDecomposition" /> object.,
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is to be
            factorized.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.BaseMatrix">
      <summary>
            Gets the underlying matrix of the decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.Decompose">
      <summary>
            Performs the actual decomposition.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.Done">
      <summary>
            Gets or sets a value that indicates whether the decomposition
            has been performed.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.BaseMatrix" /> of this decomposition
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.Overwrite">
      <summary>
            Gets or sets a value indicating whether the
            <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.BaseMatrix" /> should be overwritten by
            its decomposition.
            </summary>
      <exception cref="T:System.InvalidOperationException">The
            property is read-only because the matrix has already
            been factorized.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDecomposition.SetSingular">
      <summary>
            Sets a flag that indicates the underlying matrix of this
            decomposition is singular.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix">
      <summary>
            Represents a general, dense, square or rectangular <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.#ctor(Extreme.Mathematics.SingleComplex[0:,0:])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> from a
            two-dimensional array.
            </summary>
      <param name="values">A two-dimensional array of
            <see cref="T:Extreme.Mathematics.SingleComplex" /> values. The first dimension
            enumerates the rows. The second dimension
            enumerates the columns.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with the specified
            number of rows and columns
            </summary>
      <param name="rowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="rowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.#ctor(System.Int32,System.Int32,Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with the specified
            number of rows and columns
            </summary>
      <param name="rowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order of the elements in
            the storage array <paramref name="values" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="rowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.#ctor(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> with the specified
            number of rows and columns whose elements are all equal to the specified value.
            </summary>
      <param name="rowCount">The number of rows in the new
            matrix.</param>
      <param name="columnCount">The number of columns in the new
            matrix.</param>
      <param name="value">The value of each element.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="rowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.#ctor(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contain the elements of the matrix in the order specified by
            <paramref name="elementOrder" /></param>
      <param name="rowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="rowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.#ctor(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> of the specified
            dimensions using the specified data array.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contain the elements of the matrix in
            column-major elementOrder.</param>
      <param name="rowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies the order in which the matrix components are stored in
            the storage array <paramref name="values" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly for component storage without being copied. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />
            will also affect the original array, and vice versa. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new array. </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="rowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Add(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> objects and returns the result.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the sum
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="matrix1" /> do not
            equal the dimensions of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Add(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Adds two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> objects and stores the
            result in a third <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="factor">A <see cref="T:Extreme.Mathematics.SingleComplex" /> that specifies the
            multiplier for the second matrix.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="resultMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is to receive
            the result of the multiplication.</param>
      <returns>A reference to <paramref name="resultMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para><para>-or-</para><para><paramref name="resultMatrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of <paramref name="matrix2" /> does not
            equal the dimensions of <paramref name="matrix1" />.
            <para>-or-</para><para>The dimensions of <paramref name="resultMatrix" /> does not
            equal the dimensions of <paramref name="matrix1" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Add(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Adds a multiple of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="factor">The multiplication factor.</param>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to add
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of the matrix <paramref name="matrix" />
            do not match the dimensions of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Add(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Adds a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to add
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of the matrix <paramref name="matrix" />
            do not match the dimensions of this <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddConjugateOuterProduct(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a matrix with the scaled conjugated outer product of a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> and its conjugate.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows and columns of the matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddConjugateOuterProduct(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a matrix with the scaled conjugated outer product of two vectors.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector1">The first (column) vector.</param>
      <param name="vector2">The second (row) vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector1" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />, or the length
            of <paramref name="vector1" /> does not equal the number
            of columns.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddConjugateOuterProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a matrix with the conjugated outer product of a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> and its conjugate.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows and columns of the matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddOuterProduct(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a matrix with the scaled unconjugated outer product of
            a <see cref="T:Extreme.Mathematics.ComplexVector" /> and itself.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows and columns of the matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddOuterProduct(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a matrix with the scaled unconjugated outer product of two vectors.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector1">The first (column) vector.</param>
      <param name="vector2">The second (row) vector.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="vector1" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />, or the length
            of <paramref name="vector1" /> does not equal the number
            of columns.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddOuterProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a matrix with the outer product of a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> and itself.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the
            number of rows and columns of the matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddProduct(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Adds the product of two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> objects
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of any of the three matrices involved
            in this operation are not compatible.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddProduct(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Adds a multiple of the product of two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> object
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="factor">Multiplier for the matrix product.</param>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of any of the three matrices involved
            in this operation are not compatible.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.AddProductToVector(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.CloneData(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies whether to store the elements
            in column-major or row-major elementOrder.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns<br />
            - or - <br /><paramref name="startRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetColumnEnumerator">
      <summary>
            Gets an <see cref="T:System.Collections.IEnumerator" /> than can be used to enumerate
            the columns of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <returns>An object that implements <see cref="T:System.Collections.IEnumerator" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the specified
            diagonal of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to -
            <see cref="F:Extreme.Mathematics.ComplexMatrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.ComplexMatrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetIdentity(System.Int32)">
      <summary>
            Returns an identity matrix of the specified dimension.
            </summary>
      <param name="dimension">An integer greater than 0.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> of the specified
            dimension that has ones on the main diagonal and is zero everywhere
            else.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetRowEnumerator">
      <summary>
            Constructs an <see cref="T:System.Collections.IEnumerator" /> object that can be used
            to enumerate the rows of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.ComplexGeneralMatrixRowEnumerator" /> structure.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetSubmatrix(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is a submatrix of
            this matrix.
            </summary>
      <param name="startRow">Index of the first row of the sub-matrix.</param>
      <param name="endRow">Index of the last row of the sub-matrix.</param>
      <param name="startColumn">Index of the first column of the sub-matrix.</param>
      <param name="endColumn">Index of the last column of the sub-matrix.</param>
      <param name="rowStride">The increment for the row index in the original matrix corresponding to an
            increment of one in the row index of the new matrix.</param>
      <param name="columnStride">The increment for the column index in the original matrix corresponding to an
            increment of one in the column index of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not the new matrix should be transposed.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that contains the specified rows and columns. </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> is less
            than zero or greater than or equal to the number of columns.</para>
        <para>-or-</para>
        <para>
          <paramref name="endColumn" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of columns.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>Always returns <span class="keyword">true</span>.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns in this
            <see cref="T:Extreme.Mathematics.SingleMatrix" />. Or, <paramref name="row" />
            is less than zero or greater than or equal to the
            number of rows in this <see cref="T:Extreme.Mathematics.SingleMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Multiply(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the product
            of <paramref name="matrix1" /> and <paramref name="matrix2" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Multiply(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Multiplies two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> objects and stores
            the result in a third <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the left factor of
            the multiplication.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the right factor of
            the multiplication.</param>
      <param name="resultMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is to receive
            the result of the multiplication.</param>
      <returns>A reference to <paramref name="resultMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para><para>-or-</para><para><paramref name="resultMatrix" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="resultMatrix" />.
            <para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not
            equal the number of columns of <paramref name="resultMatrix" />.</para><para>-or-</para><para>The number of columns of <paramref name="matrix1" /> does not
            equal the number of rows of <paramref name="matrix2" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether the matrix <paramref name="a" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the product of this matrix
            and <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and
            the matrix <paramref name="matrix" /> are not compatible for the specified operation.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="matrix" /> are not compatible with the dimensions of this instance
            for the requested operation..
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Multiply(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> on the right by a
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the product
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with <paramref name="matrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not match
            the number of columns in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />,
            or the matrix <paramref name="matrix" /> is not square.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.MultiplyByConjugateTranspose">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> by its
            <see cref="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Transpose" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> that is
            the product of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with its
            conjugate transpose.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseMatrix)~Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix">
      <summary>
            Converts a double-precision matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.SingleMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)~Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseMatrix" /> with the same size and with the same components as
            <see cref="!:original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.PreMultiply(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> on the left by a
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">The second <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the product
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with <paramref name="matrix" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not match
            the number of columns in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />,
            or the matrix <paramref name="matrix" /> is not square.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.SetValue(Extreme.Mathematics.SingleComplex,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Subtract(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> objects.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is equals the
            matrix <paramref name="matrix2" /> subtracted from
            <paramref name="matrix1" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="matrix1" /> do not
            equal the dimensions of <paramref name="matrix2" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Subtract(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Subtracts two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> objects and stores the
            result in a third <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="resultMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is to receive
            the result of the multiplication.</param>
      <returns>A reference to <paramref name="resultMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix1" /> is <see langword="null" /><para>-or-</para><para><paramref name="matrix2" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.SubtractProduct(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Subtracts the product of two <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> object
            to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="matrix2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A reference to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The dimensions of any of the three matrices involved
            in this operation are not compatible.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector">
      <summary>
            Represents a <see cref="T:Extreme.Mathematics.ComplexVector" /> with arbitrary components.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.#ctor(Extreme.Mathematics.SingleComplex[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="values">A variable length list of
            SingleComplex parameters specifying the components of the
            vector, or an array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.#ctor(Extreme.Mathematics.SingleComplex[],System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />
            will also affect the original array.If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            length.
            </summary>
      <param name="length">The length of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.#ctor(System.Int32,Extreme.Mathematics.SingleComplex[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.#ctor(System.Int32,Extreme.Mathematics.SingleComplex[],System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="values">An array of <see cref="T:Extreme.Mathematics.SingleComplex" />
            values containing the components of the new
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <param name="length">The number of elements in the
            new vector.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array
            referenced by <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />
            will also affect the original array. If <span class="keyword">false</span>, the
            components are copied from <paramref name="values" /> to a new
            array.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="values" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="length" /> is less than zero.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.#ctor(System.Single[],System.Single[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the specified
            components.
            </summary>
      <param name="realComponents">An array of SingleComplex values specifying the
            real parts of the components of the vector.</param>
      <param name="imaginaryComponents">An array of SingleComplex values specifying the
            imaginary parts of the components of the vector.</param>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="realComponents" />
            does not equal the length of <paramref name="imaginaryComponents" />.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="realComponents" /> is <see langword="null" /><para>-or-</para><para><paramref name="imaginaryComponents" /> is <see langword="null" /></para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.AbsoluteMax">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.AbsoluteMaxIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the largest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the largest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.AbsoluteMin">
      <summary>
            Returns the value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The value of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.AbsoluteMinIndex">
      <summary>
            Returns the index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the smallest absolute
            value.
            </summary>
      <returns>The index of the component in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that has the smallest absolute
            value.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.Add(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds the scaled product of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> and a
            <see cref="T:Extreme.Mathematics.ComplexVector" /> to this <strong>ComplexVector</strong>.
            </summary>
      <param name="factor">The scale factor for the matrix-vector
            product.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the length of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the length of
            <paramref name="vector" />.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.Add(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Adds a scaled ComplexVector to this vector.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">The vector to add.</param>
      <returns>A reference to this vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="vector" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="vector" /> does not equal the length of
            this instance.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.Apply(System.Func{Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex})">
      <summary>
            Applies a function to the elements of a dense comlex vector.
            </summary>
      <param name="function">A delegate that represents a function of one complex variable</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="function" /> is <see langword="null" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.AsGeneralVector">
      <summary>
            Returns a dense comlex vector with the same components as this vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with the same components as this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.Clone(Extreme.Mathematics.LinearAlgebra.CloningMethod)">
      <summary>
            Makes a copy of this <see cref="T:Extreme.Mathematics.ComplexVector" /> using the specified
            method.
            </summary>
      <param name="method">A <see cref="T:Extreme.Mathematics.LinearAlgebra.CloningMethod" /> value that specifies
            how the vector should be cloned.</param>
      <returns>The cloned <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.CopyTo(Extreme.Mathematics.SingleComplex[])">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />
            to another vector.
            </summary>
      <param name="array">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that
            is to hold the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="array" /> is less than the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.CopyTo(Extreme.Mathematics.SingleComplexVector,System.Int32)">
      <summary>
            Copies the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />
            to another vector starting at the specified position.
            </summary>
      <param name="vector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> whose
            components are to be set.</param>
      <param name="index">The index in <paramref name="vector" />
            where copying is to start.</param>
      <returns>A reference to the copied vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero.
            </exception>
      <exception cref="T:System.ArgumentException">
            The length of <paramref name="vector" /> is less than <paramref name="index" /> plus the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.DotProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Returns the dot product of this vector with another
            vector.
            </summary>
      <param name="vector">The second <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>The dot product of the two vectors.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the length of this instance.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.Equals(System.Object)">
      <summary>
            Determines whether the specified <see cref="T:System.Object" />
            is equal to the current <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <param name="obj">The object to compare this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> to.</param>
      <returns>
        <strong>True</strong> if the specified object is
            identical to this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />; otherwise
            <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.FromPolar(Extreme.Mathematics.SingleVector,Extreme.Mathematics.SingleVector)">
      <summary>
            Returns a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> from real vectors containing the amplitude and phase.
            </summary>
      <param name="amplitude">A single-precision vector containing the amplitudes.</param>
      <param name="phase">A single-precision vector containing the phases.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> of the same length as <paramref name="amplitude" />
            and <paramref name="phase" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="amplitude" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="phase" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="argument" /> does not equal the length of <paramref name="phase" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.GetComponents">
      <summary>
            Gets the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <returns>An array of <see cref="T:Extreme.Mathematics.SingleComplex" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.GetEnumerator">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.ComplexGeneralVectorEnumerator" /> for this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.ComplexGeneralVectorEnumerator" /> object for this
            instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.GetHashCode">
      <summary>
            Returns the hash code for this instance.
            </summary>
      <returns>A 32-bit signed integer hash code.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.GetSubvector(System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a vector that points to a part of
            this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /></summary>
      <param name="startIndex">The index of the first element of this
            vector to be contained in the new
            vector.</param>
      <param name="endIndex">The index of the last element of this
            vector to be contained in the new
            vector.</param>
      <param name="stride">The increment for the index
            in this vector corresponding to an
            increment of one in the new vector.</param>
      <returns>A reference to the new <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="startIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
        <para>-or-</para>
        <para>
          <paramref name="endIndex" /> is less than zero or greater than or equal
            to the length of the vector.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>Always returns <span class="keyword">true</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.Multiply(Extreme.Mathematics.SingleComplex)">
      <summary>
            Multiplies a vector by a given factor.
            </summary>
      <param name="factor">The factor to multiply the vector by.</param>
      <returns>a reference to this vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.OneNorm">
      <summary>
            Returns the one-norm of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </summary>
      <returns>The one-norm of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector)~Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector">
      <summary>
            Converts a double-precision vector to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)~Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector">
      <summary>
            Converts a single-precision vector to its double-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.SingleComplexVector" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.SetValue(Extreme.Mathematics.SingleComplex)">
      <summary>
            Sets all the components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> to
            the specified value.
            </summary>
      <param name="value">The value to be assigned to each component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <returns>A reference to this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.SetValue(Extreme.Mathematics.SingleComplex,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.StorageArray">
      <summary>
            Gets the <see cref="T:Extreme.Mathematics.SingleComplex" /> array that stores
            the data for the instance.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.StorageIncrement">
      <summary>
            Gets the increment between successive elements of this
            instance in the <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.IComplexStorage.StorageArray" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.StorageOffset">
      <summary>
            Gets the index of the first element of this instance
            in the <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.IComplexStorage.StorageArray" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.Swap(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Swaps the elements of two vectors.
            </summary>
      <param name="vector1">The first <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <param name="vector2">The second <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector1" /> is <see langword="null" /><para>-or-</para><para><paramref name="vector2" /> is <see langword="null" /></para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> is not equal to the
            length of <paramref name="vector2" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the vector.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix">
      <summary>
            Represents a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is symmetrical about the main diagonal.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.#ctor(System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />
            with the specified dimension.
            </summary>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.#ctor(System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixTriangle)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> of the
            specified dimension using the specified data.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            the upper or lower triangle of the component data.</param>
      <param name="data">An <see cref="T:System.Array" /> of
            <see cref="T:Extreme.Mathematics.SingleComplex" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.#ctor(System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixTriangle,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> of the
            specified dimension using the specified data.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to take the elements from
            the upper or lower triangle of the component data.</param>
      <param name="data">An <see cref="T:System.Array" /> of
            <see cref="T:Extreme.Mathematics.SingleComplex" /> values containing the elements
            of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> in
            column-major order</param>
      <param name="dimension">The number of rows and columns
            in the new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <param name="reuseComponentArray">A bool value that indicates
            whether the <paramref name="data" /> array should be
            copied or reused for internal storage.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddConjugateOuterProduct(System.Single,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Updates a hermitian matrix with the scaled outer product
            of a matrix and its conjugate transpose.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddOuterProduct(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Updates a hermitian matrix with the product
            of a matrix and its conjugate transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddOuterProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a hermitian matrix with the outer product of
            a vector and itself.
            </summary>
      <param name="vector">The first (column) vector.</param>
      <returns>A reference to this instance</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the number
            of rows and columns in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddOuterProduct(System.Single,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Updates a hermitian matrix with the scaled outer product
            of a matrix and its conjugate transpose.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddOuterProduct(System.Single,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a hermitian matrix with the scaled outer product
            of a vector and its conjugate transpose.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddProductToVector(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.ComplexVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddSymmetricOuterProduct(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Updates a hermitian matrix with the scaled outer product
            of a vector and its conjugate transpose.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="matrix1">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="matrix2">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="matrix1" /> or <paramref name="matrix2" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.AddSymmetricOuterProduct(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a hermitian matrix with the scaled outer product
            of a vector and a transposed vector.
            </summary>
      <param name="factor">The scale factor.</param>
      <param name="vector1">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="vector2">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector1" /> or <paramref name="vector2" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.ConjugateTranspose">
      <summary>
            Returns the conjugate transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            conjugate transpose of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.
            </summary>
      <returns>An estimate for the condition number of
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.Extract(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.MatrixTriangle,System.Boolean)">
      <summary>
            Creates a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> from a part of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">The matrix that contains the components of the new matrix.</param>
      <param name="dimension">The number of rows and columns of the new matrix.</param>
      <param name="startRow">The row in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="startColumn">The column in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates
            whether the components of the hermitian matrix are stored in the upper or lower
            triangular portion of the block specified by <paramref name="startRow" /> and
            <paramref name="startColumn" />.</param>
      <param name="reuseComponentArray">A bool value that indicates
            whether the <paramref name="data" /> array should be
            copied or reused for internal storage.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less than zero
            <para>-or-</para><para><paramref name="startRow" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para><para>-or-</para><para><paramref name="startColumn" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para></exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="startRow" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.Extract(Extreme.Mathematics.SingleComplexMatrix,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.MatrixTriangle)">
      <summary>
            Creates a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> from a part of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="matrix">The matrix that contains the components of the new matrix.</param>
      <param name="dimension">The number of rows and columns of the new matrix.</param>
      <param name="startRow">The row in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="startColumn">The column in <paramref name="matrix" /> of the first component
            of the new matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates
            whether the components of the hermitian matrix are stored in the upper or lower
            triangular portion of the block specified by <paramref name="startRow" /> and
            <paramref name="startColumn" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="dimension" /> is less than zero
            <para>-or-</para><para><paramref name="startRow" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para><para>-or-</para><para><paramref name="startColumn" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para></exception>
      <exception cref="T:System.ArgumentException">
        <para>
          <paramref name="startRow" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="startColumn" /> plus <paramref name="dimension" /> is greater than
            or equal to the number of columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.FromOuterProduct(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />
            by multiplying a matrix on the left by its conjugate transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>The new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.FromOuterProduct(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.MatrixOperationSide)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />
            by multiplying a matrix by its conjugate transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="side">Specifies whether the transposed
            matrix is the left or right operand.</param>
      <returns>The new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />
            underlying this system of equations.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> view of the specified
            diagonal of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to -
            <see cref="F:Extreme.Mathematics.ComplexMatrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.ComplexMatrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.GetImaginaryPart">
      <summary>
            Returns a real matrix containing the imaginary components of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the imaginary part of each component of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.GetInverse">
      <summary>
            Calculates the inverse matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />
            is singular and does not have an inverse.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.GetRealPart">
      <summary>
            Returns a real matrix containing the real components of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the real part of each component of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>Always returns <span class="keyword">true</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether the matrix <paramref name="a" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the product of this matrix
            and the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /><paramref name="a" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="matrix" /> are not compatible with the dimensions of this instance
            for the requested operation..
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.ComplexHermitianMatrix)~Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix">
      <summary>
            Converts a double-precision Hermitian matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexHermitianMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix)~Extreme.Mathematics.LinearAlgebra.Complex.ComplexHermitianMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexHermitianMatrix" /> with the same size and with the same components as
            <see cref="!:original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.SetValue(Extreme.Mathematics.SingleComplex,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the vector <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.SubtractOuterProduct(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Updates a hermitian matrix by subtracting the product
            of a matrix and its conjugate transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows of <paramref name="matrix" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.SubtractOuterProduct(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Updates a hermitian matrix with the outer product of
            a vector and its conjugate transpose.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="vector" /> does not equal the number
            of rows in this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix.TriangleMode">
      <summary>
            Gets a value that indicates whether the components of a
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" /> are stored in the upper or lower
            triangle.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver">
      <summary>
            Represents the solution to a least squares problem.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.LeastSquaresSolver" />
            from the matrix of observations and the vector of
            outcomes.
            </summary>
      <param name="observations">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> whose rows
            contain the observations of the least squares problem.
            </param>
      <param name="outcomes">A <see cref="T:Extreme.Mathematics.ComplexVector" /> containing
            the outcomes of each of the observations in
            <paramref name="observations" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.GetPredictions">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the predicted
            outcomes of the least squares solution.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the predicted
            outcomes of the least squares solution.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.GetResiduals">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the residuals
            of the least squares solution.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the residuals
            of the least squares solution.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.GetResidualSumOfSquares">
      <summary>
            Returns the sum of the squares of the residuals
            of the least squares solution.
            </summary>
      <returns>The sum of the squares of the residuals
            of the least squares solution.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.GetResidues">
      <summary>
            Returns a <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the residuals
            of the least squares solution.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the residuals
            of the least squares solution.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.Solution">
      <summary>
            Gets the solution to the least squares problem.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the least
            norm solution to the least squares problem.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.SolutionMethod">
      <summary>
            Gets or sets the <see cref="T:Extreme.Mathematics.LinearAlgebra.LeastSquaresSolutionMethod" />
            used to calculate this <see cref="T:Extreme.Mathematics.LinearAlgebra.LeastSquaresSolver" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLeastSquaresSolver.Solve">
      <summary>
            Solves the least squares problem and returns the
            least norm solution.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the least
            norm solution to the least squares problem.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation">
      <summary>
            Defines methods for the solution of a system of
            simultaneous linear equations and related operations.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.#ctor">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation" /> from serialization
            data.
            </summary>
      <param name="info">The data needed to serialize or deserialize
            the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleLinearTransformation" />. </param>
      <param name="context">The source and destination of a given
            serialized stream.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition number of a matrix.
            </summary>
      <returns>An estimate for the condition number of
            the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.GetDeterminant">
      <summary>
            Calculates the determinant of a matrix.
            </summary>
      <returns>The determinant of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.GetInverse">
      <summary>
            Calculates the inverse matrix..
            </summary>
      <returns>The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> inverse of
            the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            linear transformation is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> of the linear transformation
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.Rank">
      <summary>
            Returns the numerical rank of a matrix.
            </summary>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.Solve(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLinearTransformation.Solve(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Solves the system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows in the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition">
      <summary>
            Represents the LU decomposition of a general
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexLUDecomposition" /> object.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is to be
            factorized.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.#ctor(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexLUDecomposition" /> object.,
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is to be
            factorized.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.ApplyP(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="matrix" /> is overwritten by the result.
            If <span class="keyword">false</span>, matrix new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> is returned.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with the elements of
            <paramref name="matrix" /> permuted.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.ApplyP(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />
            and returns the result as a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /><paramref name="matrix" />
            with its elements permuted.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number of rows
            in <paramref name="matrix" /> does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.ApplyP(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>The <see cref="T:Extreme.Mathematics.ComplexVector" /><paramref name="vector" />
            with its elements permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector" />
            does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.ApplyP(Extreme.Mathematics.SingleComplexVector,System.Boolean)">
      <summary>
            Applies the permutation <i>P</i> of the decomposition
            <i>PA</i>= <i>LU</i> to a <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.ComplexVector" /> with length
            equal to the number of rows in the underlying
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">true</span>, the vector
            <paramref name="vector" /> is overwritten by the result.
            If <span class="keyword">false</span>, vector new <see cref="T:Extreme.Mathematics.ComplexVector" /> is returned.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> with the elements of
            <paramref name="vector" /> permuted.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The length of <paramref name="vector" />
            does not equal the number of rows in the
            permutation matrix.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.Decompose">
      <summary>
            Performs the actual LU decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the matrix underlying this
            system of equations.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the inverse of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.GetInverse(System.Boolean)">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="overwrite">If <span class="keyword">false</span>, the inverse matrix is returned as a new instance.
            If <span class="keyword">true</span>, the decomposition is overwritten with the solution. In this case,
            the LU decomposition is no longer valid after the call to this method.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the inverse of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.LowerTriangularFactor">
      <summary>
            Returns the lower <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />
            component of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexLUDecomposition" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix underlying
            this system of equations.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexLUDecomposition.UpperTriangularFactor">
      <summary>
            Gets the upper <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> component
            of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexLUDecomposition" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView">
      <summary>
            Represents a view on all or part of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.#ctor(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexMatrixView" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to create
            the view on.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix <paramref name="matrix" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.#ctor(Extreme.Mathematics.SingleComplexMatrix,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.TransposeOperation)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexMatrixView" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> to create
            the view on.</param>
      <param name="startRow">Index of the first row
            of <paramref name="matrix" /> in the view.</param>
      <param name="endRow">Index of the last row
            of <paramref name="matrix" /> in the view.</param>
      <param name="startColumn">Index of the first column
            of <paramref name="matrix" /> in the view.</param>
      <param name="endColumn">Index of the last column
            of <paramref name="matrix" /> in the view.</param>
      <param name="rowStride">The increment for the row index
            of <paramref name="matrix" /> corresponding to an
            increment of one in the rows of the new matrix.</param>
      <param name="columnStride">The increment for the column index
            of <paramref name="matrix" /> corresponding to an
            increment of one in the columns of the new matrix.</param>
      <param name="transposeOperation">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that specifies whether or not this view should show the
            transpose of the matrix <paramref name="matrix" />.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" /></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.Conjugate">
      <summary>
            Returns the conjugate transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            conjugate transpose of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.ConjugateTranspose">
      <summary>
            Returns the conjugate transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            conjugate transpose of this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A column <see cref="T:Extreme.Mathematics.ComplexVector" /> vector that
            allows you to iterate through the rows of this matrix.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns<br />
            - or - <br /><paramref name="startRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A row <see cref="T:Extreme.Mathematics.ComplexVector" /> vector that
            allows you to iterate through the columns of this matrix.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.SetValue(Extreme.Mathematics.SingleComplex,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexMatrixView.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition">
      <summary>
            Represents the QR decomposition of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is to be
            decomposed.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.#ctor(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />.
            </summary>
      <param name="matrix">The <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is to be
            decomposed.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.ApplyQ(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Multiplies a matrix in place by the orthogonal matrix
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with
            the same number of rows as Q.</param>
      <returns>A reference to the transformed matrix.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.ApplyQ(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Multiplies a vector in place by the orthogonal vector
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with
            the same number of rows as Q.</param>
      <returns>A reference to the transformed vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.ApplyQ(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Multiplies a matrix in place by the orthogonal matrix
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />, or its
            transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with
            the same number of rows as Q.</param>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" />
            value that specifies whether the matrix Q (or its
            transpose) should be the left or right operand of
            the multiplication.</param>
      <param name="operation">A <see cref="T:Extreme.Mathematics.TransposeOperation" />
            enumeration value that specifies whether to multiply
            by the original or the transposed orthogonal matrix Q.</param>
      <returns>A reference to the transformed matrix.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="operation" /> parameter is not equal to either
            <c>None</c> or <c>ConjugateTranspose</c>.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of columns of <paramref name="matrix" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.ApplyQ(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Multiplies a matrix in place by the orthogonal matrix
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />, or its
            transpose.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> with
            the same number of rows as Q.</param>
      <param name="operation">A <see cref="T:Extreme.Mathematics.TransposeOperation" />
            enumeration value that specifies whether to multiply
            by the transposed orthogonal matrix.</param>
      <returns>A reference to the transformed matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.ApplyQ(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Multiplies a vector in place by the orthogonal vector
            Q of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />, or its
            transpose.
            </summary>
      <param name="vector">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> with
            the same number of rows as Q.</param>
      <param name="operation">A <see cref="T:Extreme.Mathematics.TransposeOperation" />
            enumeration value that specifies whether to multiply
            by the transposed orthogonal vector.</param>
      <returns>A reference to the transformed vector.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The <paramref name="operation" /> parameter is not equal to either
            <c>None</c> or <c>ConjugateTranspose</c>.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The length of <paramref name="vector" /> does not equal the number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.Decompose">
      <summary>
            Calculates the actual QR decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the inverse of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.LeastSquaresSolve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" />.</param>
      <param name="overwrite">if <span class="keyword">true</span>, the vector
            <paramref name="rightHandSide" /> is overwritten by the solution
            to the system of equations. If <span class="keyword">false</span>, a new
            <see cref="T:Extreme.Mathematics.ComplexVector" /> containing the solution is
            returned.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.LeastSquaresSolve(Extreme.Mathematics.SingleComplexVector)">
      <summary>
            Solves the system of linear equations in the
            least-squares sense for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the least squares solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.OrthogonalFactor">
      <summary>
            Gets the orthogonal matrix Q of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.TrimmedUpperTriangularFactor">
      <summary>
            Gets the upper triangular matrix R of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.QRDecomposition" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexQRDecomposition.UpperTriangularFactor">
      <summary>
            Gets the upper triangular matrix R of this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexQRDecomposition" />.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexRowCollection">
      <summary>
            Represents the collection of rows of a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexRowCollection.Count">
      <summary>
            Gets the number of rows in the collection.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexRowCollection.GetEnumerator">
      <summary>
            Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for this <see cref="T:Extreme.Mathematics.LinearAlgebra.RowCollection" />.
            </summary>
      <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> for this <see cref="T:Extreme.Mathematics.LinearAlgebra.RowCollection" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexRowCollection.Item(System.Int32)">
      <summary>
            Gets or sets the components of the specified row in this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexRowCollection" />.
            </summary>
      <param name="index">The zero-based index of the column.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than zero or greater than the number of rows in the matrix.
            </exception>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="value" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition">
      <summary>
            Represents the singular value decomposition of a complex matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="requestedFactors">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors" />
            value that specifies which factors of the decomposition should be computed.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.#ctor(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>, the matrix
            is preserved. (This is the default.) If <span class="keyword">true</span>,
            the matrix <paramref name="matrix" /> is destroyed by the decomposition.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.#ctor(Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.#ctor(Extreme.Mathematics.SingleComplexMatrix,Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecomposition" /> object.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="requestedFactors">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingularValueDecompositionFactors" />
            value that specifies which factors of the decomposition should be computed.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.Decompose">
      <summary>
            Calculates the actual singular value decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.GetDeterminant">
      <summary>
            Calculates the determinant of the decomposed
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>The determinant of the matrix.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The matrix
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.GetInverse">
      <summary>
            Calculates the inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            matrix is not square.</exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The matrix
            is singular.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.GetPseudoInverse">
      <summary>
            Calculates the pseudo-inverse of the factorized <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the Moore-Penrose pseudo-inverse of
            this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.GetPseudoInverse(System.Single)">
      <summary>
            Calculates the pseudo-inverse of the factorized
            <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.
            </summary>
      <param name="tolerance">The absolute tolerance for singular values to be considered zero.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the Moore-Penrose pseudo-inverse of
            this instance.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.LeftSingularVectors">
      <summary>
            Gets the left singular vectors of the decomposition.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.Rank(System.Single)">
      <summary>
            Returns the numerical rank of a matrix using the specified tolerance.
            </summary>
      <param name="tolerance">The absolute tolerance used to determine if a
            matrix component is considered zero.</param>
      <returns>An integer indicating the numerical rank of the matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.RequestedFactors">
      <summary>
            Gets or sets which factors of the singular value decomposition should be calculated.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.RightSingularVectors">
      <summary>
            Gets the right singular vectors of the decomposition.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.SingularValueMatrix">
      <summary>
            Gets a matrix with the singular values on the diagonal.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.SingularValues">
      <summary>
            Gets a vector containing the singular values.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexSingularValueDecomposition.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix">
      <summary>
            Represents a <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> whose elements above or below the main diagonal are zero.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="RowCount">The number of rows.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex[])">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="data">A SingleComplex array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.MatrixElementOrder,System.Boolean)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="diagonal">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="values">A SingleComplex array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
      <param name="reuseComponentArray">If <span class="keyword">true</span>, the array referenced by
            <paramref name="values" /> is used directly. Any
            changes to the components of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />
            will also affect the original array. If <span class="keyword">false</span>, the components are
            copied from <paramref name="values" /> to a new
            array. </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.#ctor(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether to construct an
            upper or a lower triangular matrix.</param>
      <param name="data">A SingleComplex array containing the
            components.</param>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="order">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that indicates whether the elements are stored
            in column major or row major order.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.AddProductToVector(Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplexVector,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.ComplexVector" /> by this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="vector" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="resultVector" />.</param>
      <param name="vector">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of columns of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of rows
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.CloneData(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
      <param name="elementOrder">A <see cref="T:Extreme.Mathematics.MatrixElementOrder" />
            value that specifies whether to store the elements in
            column or in row major order.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.DiagonalMode">
      <summary>
            Gets a value that indicates whether the diagonal elements of
            this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> are all equal to 1.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.EstimateConditionNumber">
      <summary>
            Calculates an estimate for the condition
            number of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <returns>An estimate for the condition
            number of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="RowCount">The number of rows in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</param>
      <param name="columnCount">The number of columns in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The elements of <paramref name="matrix" /> are not stored in its lower triangular part.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractLowerTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The elements of <paramref name="matrix" /> are not stored in its lower triangular part.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the triangleMode triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the triangleMode triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the upper triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the upper triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Int32,System.Int32,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the upper triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="RowCount">The number of rows in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</param>
      <param name="columnCount">The number of columns in the
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero or greater than or equal to the number of
            rows in <paramref name="matrix" />.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero or greater than or equal to the number of
            columns in <paramref name="matrix" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix)">
      <summary>
            Constructs a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the lower triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The elements of <paramref name="matrix" /> are not stored in its upper triangular part.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ExtractUpperTriangle(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs an upper <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose
            elements are contained in the upper triangular portion
            of a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexHermitianMatrix" />.</param>
      <param name="unitDiagonal">If <span class="keyword">true</span>, the matrix
            is unit triangular. Only the elements below the diagonal
            in <paramref name="matrix" /> are considered. If <span class="keyword">false</span>,
            the diagonal elements of <paramref name="matrix" /> are
            taken as the diagonal elements of the triangular matrix.
            </param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> whose elements
            are contained in the lower triangular portion of
            <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.InvalidOperationException">
            The elements of <paramref name="matrix" /> are not stored in its upper triangular part.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns<br />
            - or - <br /><paramref name="startRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetDeterminant">
      <summary>
            Calculates the determinant of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <returns>The determinant of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetDiagonal(System.Int32)">
      <summary>
            Gets a <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the specified diagonal
            of this instance.
            </summary>
      <param name="index">The index of the diagonal. A value
            of zero indicates the main diagonal. A value greater
            than zero indicates a superdiagonal. A value less than
            zero indicates a subdiagonal.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" /> view of the specified
            diagonal of this <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index" /> is less than or equal to
            -<see cref="F:Extreme.Mathematics.ComplexMatrix.rowCount" />, or greater than or equal
            to <see cref="F:Extreme.Mathematics.ComplexMatrix.columnCount" />.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetImaginaryPart">
      <summary>
            Returns a real matrix containing the imaginary components of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the imaginary part of each component of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetInverse">
      <summary>
            Calculates the inverse matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> that is the matrix inverse of
            this instance.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetRealPart">
      <summary>
            Returns a real matrix containing the real components of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> containing the real part of each component of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.ComplexVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.ComplexVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.ComplexVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets the matrix component at the specified position.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Returns a value that indicates whether the value of the component at
            the specified row and column can be changed.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsLowerTriangular">
      <summary>
            Gets a value indicating whether this
            instance is lower triangular.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsSingular">
      <summary>
            Gets a value indicating whether the <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />
            is singular.
            </summary>
      <returns>
        <span class="keyword">true</span> if the matrix is singular;
            otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsUnitDiagonal">
      <summary>
            Gets a value indicating whether all diagonal elements
            of this instance are equal to 1.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsUpperTriangular">
      <summary>
            Gets a value indicating whether this
            instance is triangleMode triangular.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.Multiply(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix)">
      <summary>
            Multiplies a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> by a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />.
            </summary>
      <param name="denseMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" />.</param>
      <param name="triangularMatrix">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix">triangular
            matrix</see>.</param>
      <returns>A new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the product
            of <paramref name="denseMatrix" /> and <paramref name="triangularMatrix" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleComplexMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether <paramref name="matrix" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> that is the product of this matrix
            and <see cref="T:Extreme.Mathematics.SingleComplexMatrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            dimensions of <paramref name="" /> are not compatible with the dimensions of this instance
            for the requested operation..
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.ComplexTriangularMatrix)~Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix">
      <summary>
            Converts a double-precision triangular matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexTriangularMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix)~Extreme.Mathematics.LinearAlgebra.Complex.ComplexTriangularMatrix">
      <summary>
            Converts a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> to an equivalent double-precision matrix.
            </summary>
      <param name="original">The <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexTriangularMatrix" /> with the same size and with the same components as
            <paramref name="original" />.
            </returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.SetValue(Extreme.Mathematics.SingleComplex,System.Int32,System.Int32)">
      <summary>
            Sets the matrix component at the specified position to the specified value.
            </summary>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.SingleComplexMatrix" /> in the
            <paramref name="column" />th column of the
            <paramref name="row" />th row.</returns>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.ComponentReadOnlyException">For an
            triangleMode-triangular matrix (<see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsUpperTriangular" />
            is <span class="keyword">true</span>), you try to set an component
            below the diagonal.
            <para>-or-</para><para>For a lower-triangular matrix
            (<see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsLowerTriangular" />is <span class="keyword">true</span>), you
            try to set an component above the diagonal.
            </para><para>-or-</para><para>The matrix has <see cref="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.IsUnitDiagonal" /> set
            to <span class="keyword">true</span>, and you try to set a diagonal component.
            </para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix,System.Boolean)">
      <summary>
            Solves a triangular system of equations that this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> represents.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that specifies
            the right-hand side of the system of equations.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseMatrix" /> that is the solution
            of the system of equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.Solve(Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexDenseVector,System.Boolean)">
      <summary>
            Solves a triangular system of equations that this
            <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> represents.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.ComplexVector" /> that specifies
            the right-hand side of the system of equations.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.ComplexVector" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the vector <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.ComplexDenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix underlying the system of simultaneous linear
            equations is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix.TriangleMode">
      <summary>
            Gets a value that indicates whether a <see cref="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexTriangularMatrix" />
            is upper or lower triangular.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexVectorView">
      <summary>
            Represents a view on all or part of a <see cref="T:Extreme.Mathematics.ComplexVector" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexVectorView.CloneData">
      <summary>
            If possible, gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexVectorView.GetValue(System.Int32)">
      <summary>
            Gets the vector component at the specified position.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexVectorView.IsComponentWritable(System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified index can be changed.
            </summary>
      <param name="index">Zero-based index of the component.</param>
      <returns>
        <span class="keyword">true</span> if you can change the value of this
            component; otherwise <span class="keyword">false</span>.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Complex.SingleComplexVectorView.SetValue(Extreme.Mathematics.SingleComplex,System.Int32)">
      <summary>
            Sets the vector component at the specified position to the specified value.
            </summary>
      <param name="index">The zero-based index of the component.</param>
      <param name="value">A <see cref="T:Extreme.Mathematics.SingleComplex" /> specifying the new value of the component.</param>
      <returns>The component of the <see cref="T:Extreme.Mathematics.ComplexVector" /> in the
            <paramref name="index" />th position.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 1 BLAS.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Dasum(System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Daxpy(System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Dcopy(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Ddot(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <returns>The dot product of the two vectors.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Dnrm2(System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Drot(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Applies a Givens plane rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="c">The first rotation element,
            the cosine of the rotation angle.</param>
      <param name="s">The second rotation element,
            the sine of the rotation angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Drotg(System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Generates the elements for a Givens plane rotation.
            </summary>
      <param name="a">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element <i>r</i>.</param>
      <param name="b">The second element of the input vector.
            On exit, this value is overwritten with the
            reconstruction value <i>z</i>.</param>
      <param name="c">On exit, this value is overwritten with
            the first rotation element, the cosine of the rotation
            angle.</param>
      <param name="s">On exit, this value is overwritten with
            the second rotation element, the sine of the rotation
            angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Drotm(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Drotmg(System.Double@,System.Double@,System.Double@,System.Double,System.Double[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="d1">The first scale factor for the modified
            Givens transform.</param>
      <param name="d2">The second scale factor for the modified
            Givens transform.</param>
      <param name="x1">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element.</param>
      <param name="y1">The second element of the input
            vector.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Dscal(System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Dswap(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel1.Idamax(System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 2 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dgbmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general band matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="ku">The upper bandwidth of the matrix <paramref name="a" />.</param>
      <param name="kl">The lower bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dger(System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dsbmv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dsymv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dsyr(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dsyr2(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a symmetric rank two update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dtbmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dtbsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular band system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dtrmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel2.Dtrsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 3 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3.Dgemm(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of two general matrices and a scaled matrix.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="transB">Specifies the operation to be
            performed on the matrix <paramref name="b" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3.Dsymm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a symmetric and a general matrix and a scaled matrix.
            </summary>
      <param name="side">Specifies on which side the symmetric
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3.Dsyr2k(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="trans" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3.Dsyrk(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="trans" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3.Dtrmm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular and a general matrix.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the number of columns of the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.BlasLevel3.Dtrsm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Solution of a triangular linear system with
            multiple right-hand sides.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 1 BLAS.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Dzasum(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Dznrm2(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Izamax(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Zaxpy(System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Zcopy(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Zdotc(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Zdotu(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Zscal(System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel1.Zswap(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 2 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Zgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Zgerc(System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Zgeru(System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Zhemv(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a hermitian matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Zher(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a hermitian.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Zher2(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a hermitian rank two update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Ztrmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel2.Ztrsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 3 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3.Zgemm(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of two general matrices and a scaled matrix.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="transB">Specifies the operation to be
            performed on the matrix <paramref name="b" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply the product of the matrices.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3.Zhemm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a hermitian and a general matrix and a scaled matrix.
            </summary>
      <param name="side">Specifies on which side the hermitian
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3.Zher2k(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Double,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>2k</i> update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="trans" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3.Zherk(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Double,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="trans" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3.Ztrmm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular and a general matrix.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexBlasLevel3.Ztrsm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Solution of a triangular linear system with
            multiple right-hand sides.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack">
      <summary>
            Specifies the methods that must be implemented by a
            class to support DoubleComplex-precision real LAPACK routines
            for general matrices.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zgecon(Extreme.Mathematics.MatrixNorm,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Double,System.Double@,System.Int32@)">
      <summary>
             ZGECON estimates the reciprocal of the condition number of a general
             real matrix A, inthis. either the 1-norm or the infinity-norm, using
             the LU decomposition computed by ZGETRF.
            
             An estimate is obtained for norm(inv(A)), and the reciprocal of the
             condition number is computed as
                RCOND = 1 / ( norm(A) * norm(inv(A)) ).
            
             Arguments
             =========
            
             NORM    (input) CHARACTER*1
             Specifies whether the 1-norm condition number or the
             infinity-norm condition number is required:
                = '1' or 'O':  1-norm;
                = 'I':         Infinity-norm.
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             A       (input) ZOUBLE PRECISION array, dimension (LDA,N)
             The factors L and U from the decomposition A = P*L*U
             as computed by ZGETRF.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             ANORM   (input) ZOUBLE PRECISION
             If NORM = '1' or 'O', the 1-norm of the original matrix A.
             If NORM = 'I', the infinity-norm of the original matrix A.
            
             RCOND   (output) ZOUBLE PRECISION
             The reciprocal of the condition number of the matrix A,
             computed as RCOND = 1/(norm(A) * norm(inv(A))).
            
             WORK    (workspace) ZOUBLE PRECISION array, dimension (4*N)
            
             IWORK   (workspace) INTEGER array, dimension (N)
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
            
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zgeqrf(System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32@)">
      <summary>
             ZGEQRF computes a QR decomposition of a real M-by-N matrix A:
             A = Q * R.
            
             Arguments
             =========
            
             M       (input) INTEGER
             The number of rows of the matrix A.  M &gt;= 0.
            
             N       (input) INTEGER
             The number of columns of the matrix A.  N &gt;= 0.
            
             A       (input/output) ZOUBLE PRECISION array, dimension (LDA,N)
             On entry, the M-by-N matrix A.
             On exit, the elements on and above the diagonal of the array
             contain the min(M,N)-by-N upper trapezoidal matrix R (R is
             upper triangular if m &gt;= n); the elements below the diagonal,
             with the array TAU, represent the orthogonal matrix Q as a
             product of min(m,n) elementary reflectors (see Further
             Zetails).
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= max(1,M).
            
             TAU     (output) ZOUBLE PRECISION array, dimension (min(M,N))
             The scalar factors of the elementary reflectors (see Further
             Zetails).
            
             WORK    (workspace/output) ZOUBLE PRECISION array, dimension (LWORK)
             On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
            
             LWORK   (input) INTEGER
             The dimension of the array WORK.  LWORK &gt;= max(1,N).
             For optimum performance LWORK &gt;= N*NB, where NB is
             the optimal blocksize.
            
             If LWORK = -1, then a workspace query is assumed; the routine
             only calculates the optimal size of the WORK array, returns
             this value as the first entry of the WORK array, and no error
             message related to LWORK is issued by XERBLA.
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
             Further Zetails
             ===============
            
             The matrix Q is represented as a product of elementary reflectors
            
                Q = H(1) H(2) . . . H(k), where k = min(m,n).
            
             Each H(i) has the form
            
                H(i) = I - tau * v * v'
            
             where tau is a real scalar, and v is a real vector with
             v(1:i-1) = 0 and v(i) = 1; v(i+1:m) is stored on exit inthis. A(i+1:m,i),
             and tau inthis. TAU(i).
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zgesdd(System.Char,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Double[],Extreme.Mathematics.DoubleComplex[],System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zgetrf(System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
             ZGETRF computes an LU decomposition of a general M-by-N matrix A
             using partial pivoting with row interchanges.
             <para>
             The decomposition has the form</para><para><center>A = P * L * U</center></para><para>where P is a permutation matrix, L is lower triangular with unit
             diagonal elements (lower trapezoidal if m &gt; n), and U is upper
             triangular (upper trapezoidal if m &lt; n).
             </para><para>
             This is the right-looking Level 3 BLAS version of the algorithm.
             </para></summary>
      <param name="m">An integer specifying the number of rows
             of the matrix <paramref name="a" />. Must be greater than
             or equal to zero.</param>
      <param name="n">An integer specifying the number of
             columns of the matrix <paramref name="a" />. Must be
             greater than or equal to zero.
             </param>
      <param name="a">DoubleComplex precision array specifying the
             <paramref name="m" />-by-<paramref name="n" /> matrix
             to be factored. On exit, the factors L and U from the
             decomposition A = P*L*U; the unit diagonal elements of
             L are not stored.</param>
      <param name="aOffset">Offset into <paramref name="a" />
             of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
             <paramref name="a" />. Must be greater than or
             equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array of length
             min(<paramref name="m" />,<paramref name="n" />) that
             will hold the pivot indexes. Row <i>i</i> of the
             matrix was interchanged with row
             <paramref name="ipiv" />[<i>i</i>].</param>
      <param name="info">Reference to an integer containing a
             result code. Zero indicates success. Greater than zero
             indicates U(i,i) is exactly zero. The decomposition
             has been completed, but the factor U is exactly
             singular, and division by zero will occur if it is used
             to solve a system of equations.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zgetri(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
             ZGETRI computes the inverse of a matrix using the LU decomposition
             computed by ZGETRF.
            
             This method inverts U and then computes inv(A) by solving the system
             inv(A)*L = inv(U) for inv(A).
            
             Arguments
             =========
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             A       (input/output) ZOUBLE PRECISION array, dimension (LDA,N)
             On entry, the factors L and U from the decomposition
             A = P*L*U as computed by ZGETRF.
             On exit, if INFO = 0, the inverse of the original matrix A.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             IPIV    (input) INTEGER array, dimension (N)
             The pivot indexes from ZGETRF; for 1&lt; =i&lt; =N, row i of the
             matrix was interchanged with row IPIVi.
            
             WORK    (workspace/output) ZOUBLE PRECISION array, dimension (LWORK)
             On exit, if INFO =0, then WORK(1) returns the optimal LWORK.
            
             LWORK   (input) INTEGER
             The dimension of the array WORK.  LWORK &gt;= Max(1,N).
             For optimal performance LWORK &gt;= N*NB, where NB is
             the optimal blocksize returned by ILAENV.
            
             If LWORK = -1, then a workspace query is assumed; the routine
             only calculates the optimal size of the WORK array, returns
             this value as the first entry of the WORK array, and no error
             message related to LWORK is issued by XERBLA.
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
             &gt; 0:  if INFO = i, U(i,i) is exactly zero; the matrix is
             singular and its inverse could not be computed.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zgetrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32[],Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
             ZGETRS solves a system of linear equations
                A * X = B  or  A' * X = B
             with a general N-by-N matrix A using the LU decomposition computed
             by ZGETRF.
            
             Arguments
             =========
            
             TRANS   (input) CHARACTER*1
             Specifies the form of the system of equations:
                = 'N':  A * X = B  (No transpose)
                = TransposeOperation.Transpose:  A'* X = B  (Transpose)
                = 'C':  A'* X = B  (Conjugate transpose = Transpose)
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             NRHS    (input) INTEGER
             The number of right hand sides, i.e., the number of columns
             of the matrix B.  NRHS &gt;= 0.
            
             A       (input) ZOUBLE PRECISION array, dimension (LDA,N)
             The factors L and U from the decomposition A = P*L*U
             as computed by ZGETRF.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             IPIV    (input) INTEGER array, dimension (N)
             The pivot indexes from ZGETRF; for 1&lt; =i&lt; =N, row i of the
             matrix was interchanged with row IPIVi.
            
             B       (input/output) ZOUBLE PRECISION array, dimension (LDB,NRHS)
             On entry, the right hand side matrix B.
             On exit, the solution matrix X.
            
             LDB     (input) INTEGER
             The leading dimension of the array B.  LDB &gt;= Max(1,N).
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
             =====================================================================
            
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zlacpy(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies the specified elements of a complex matrix.
            </summary>
      <param name="uplo">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies which part of the matrix should be copied.</param>
      <param name="m">The number of rows of the matrices.</param>
      <param name="n">The number of columns of the matrices.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array containing the data for the source matrix.</param>
      <param name="aOffset">Offset of the first component of the source matrix.</param>
      <param name="lda">Increment between elements of the same row in the source matrix.</param>
      <param name="b">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array containing the data for the destination matrix.</param>
      <param name="bOffset">Offset of the first component of the destination matrix.</param>
      <param name="ldb">Increment between elements of the same row in the destination matrix.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zpocon(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Double,System.Double@,System.Int32@)">
      <summary>
            Estimates the reciprocal of the condition number of a factored hermitian matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="aNorm">The norm of the matrix.</param>
      <param name="rcond">On output, an estimate for the reciprocal of the condition number of the matrix.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zpotrf(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Factors a symmetric positive definite matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zpotri(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Computes the inverse of a factored hermitian matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zpotrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Solves a hermitian system of equations.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="nrhs">The number of right hand sides.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="b">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the right-hand side(s).</param>
      <param name="bOffset">The offset of the first element of the right-hand side in <paramref name="b" />.</param>
      <param name="ldb">The stride between columns of the right-hand side in <paramref name="b" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Ztrcon(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Double@,System.Int32@)">
      <summary>
            Approximates the reciprocal of the condition number of a complex triangular matrix.
            </summary>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> value that specifies which norm to use in the expression for the condition number.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix is upper
            or lower triangular.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the matrix is unit diagonal.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="rcond">On output, an estimate for the reciprocal of the condition number of the matrix.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Ztrtri(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Computes the inverse of a complex triangular matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix is upper
            or lower triangular.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the matrix is unit diagonal.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Ztrtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Solves a complex triangular system of equations.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix is upper
            or lower triangular.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that indicates if the matrix should be transposed or not.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the matrix is unit diagonal.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="nrhs">The number of right hand sides.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="b">A <see cref="T:Extreme.Mathematics.DoubleComplex" /> array that contains the components of the right-hand side(s).</param>
      <param name="bOffset">The offset of the first element of the right-hand side in <paramref name="b" />.</param>
      <param name="ldb">The stride between columns of the right-hand side in <paramref name="b" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexLapack.Zunmqr(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas">
      <summary>
            Summary description for SparseBlasLevel1.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zcscmm(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.DoubleComplex[],System.Int32[],System.Int32[],System.Int32[],Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense matrix by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="b">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="b" />.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">The leading dimension of the matrix <paramref name="b" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="c" />.
            The elements of <paramref name="c" /> are overwritten with
            the result.
            </param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">The leading dimension of the matrix <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zcscmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.DoubleComplex[],System.Int32[],System.Int32[],System.Int32[],Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense vector by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zcscsv(Extreme.Mathematics.TransposeOperation,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.DoubleComplex[],System.Int32[],System.Int32[],System.Int32[],Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Solves for a dense vector for a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zusaxpy(System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32[],System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zusdot(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32[],System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the dot product of a sparse and a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zusga(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zusgz(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector and zeros the original components.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ComplexSparseBlas.Zussc(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32[],System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies the nonzero components of a sparse vector into the corresponding components of a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.Lapack">
      <summary>
            Specifies the methods that must be implemented by a
            class to support double-precision real LAPACK routines
            for general matrices.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.Lapack</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgbcon(Extreme.Mathematics.MatrixNorm,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Double,System.Double@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgbtrf(System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgbtrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgecon(Extreme.Mathematics.MatrixNorm,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double@,System.Int32@)">
      <summary>
             DGECON estimates the reciprocal of the condition number of a general
             real matrix A, inthis. either the 1-norm or the infinity-norm, using
             the LU decomposition computed by DGETRF.
            
             An estimate is obtained for norm(inv(A)), and the reciprocal of the
             condition number is computed as
                RCOND = 1 / ( norm(A) * norm(inv(A)) ).
            
             Arguments
             =========
            
             NORM    (input) CHARACTER*1
             Specifies whether the 1-norm condition number or the
             infinity-norm condition number is required:
                = '1' or 'O':  1-norm;
                = 'I':         Infinity-norm.
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             A       (input) DOUBLE PRECISION array, dimension (LDA,N)
             The factors L and U from the decomposition A = P*L*U
             as computed by DGETRF.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             ANORM   (input) DOUBLE PRECISION
             If NORM = '1' or 'O', the 1-norm of the original matrix A.
             If NORM = 'I', the infinity-norm of the original matrix A.
            
             RCOND   (output) DOUBLE PRECISION
             The reciprocal of the condition number of the matrix A,
             computed as RCOND = 1/(norm(A) * norm(inv(A))).
            
             WORK    (workspace) DOUBLE PRECISION array, dimension (4*N)
            
             IWORK   (workspace) INTEGER array, dimension (N)
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
            
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgeev(System.Char,System.Char,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Double[],System.Double[],System.Int32,System.Double[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgeqp3(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Double[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgeqrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32@)">
      <summary>
             DGEQRF computes a QR decomposition of a real M-by-N matrix A:
             A = Q * R.
            
             Arguments
             =========
            
             M       (input) INTEGER
             The number of rows of the matrix A.  M &gt;= 0.
            
             N       (input) INTEGER
             The number of columns of the matrix A.  N &gt;= 0.
            
             A       (input/output) DOUBLE PRECISION array, dimension (LDA,N)
             On entry, the M-by-N matrix A.
             On exit, the elements on and above the diagonal of the array
             contain the min(M,N)-by-N upper trapezoidal matrix R (R is
             upper triangular if m &gt;= n); the elements below the diagonal,
             with the array TAU, represent the orthogonal matrix Q as a
             product of min(m,n) elementary reflectors (see Further
             Details).
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= max(1,M).
            
             TAU     (output) DOUBLE PRECISION array, dimension (min(M,N))
             The scalar factors of the elementary reflectors (see Further
             Details).
            
             WORK    (workspace/output) DOUBLE PRECISION array, dimension (LWORK)
             On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
            
             LWORK   (input) INTEGER
             The dimension of the array WORK.  LWORK &gt;= max(1,N).
             For optimum performance LWORK &gt;= N*NB, where NB is
             the optimal blocksize.
            
             If LWORK = -1, then a workspace query is assumed; the routine
             only calculates the optimal size of the WORK array, returns
             this value as the first entry of the WORK array, and no error
             message related to LWORK is issued by XERBLA.
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
             Further Details
             ===============
            
             The matrix Q is represented as a product of elementary reflectors
            
                Q = H(1) H(2) . . . H(k), where k = min(m,n).
            
             Each H(i) has the form
            
                H(i) = I - tau * v * v'
            
             where tau is a real scalar, and v is a real vector with
             v(1:i-1) = 0 and v(i) = 1; v(i+1:m) is stored on exit inthis. A(i+1:m,i),
             and tau inthis. TAU(i).
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgesdd(System.Char,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Double[],System.Int32,System.Double[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
             Computes an LU decomposition of a general M-by-N matrix A
             using partial pivoting with row interchanges.
             <para>
             The decomposition has the form</para><para><center>A = P * L * U</center></para><para>where P is a permutation matrix, L is lower triangular with unit
             diagonal elements (lower trapezoidal if m &gt; n), and U is upper
             triangular (upper trapezoidal if m &lt; n).
             </para><para>
             This is the right-looking Level 3 BLAS version of the algorithm.
             </para></summary>
      <param name="m">An integer specifying the number of rows
             of the matrix <paramref name="a" />. Must be greater than
             or equal to zero.</param>
      <param name="n">An integer specifying the number of
             columns of the matrix <paramref name="a" />. Must be
             greater than or equal to zero.
             </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
             <paramref name="m" />-by-<paramref name="n" /> matrix
             to be factored. On exit, the factors L and U from the
             decomposition A = P*L*U; the unit diagonal elements of
             L are not stored.</param>
      <param name="aOffset">Offset into <paramref name="a" />
             of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
             <paramref name="a" />. Must be greater than or
             equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array of length
             min(<paramref name="m" />,<paramref name="n" />) that
             will hold the pivot indexes. Row <i>i</i> of the
             matrix was interchanged with row
             <paramref name="ipiv" />[<i>i</i>].</param>
      <param name="info">Reference to an integer containing a
             result code. Zero indicates success. Greater than zero
             indicates U(i,i) is exactly zero. The decomposition
             has been completed, but the factor U is exactly
             singular, and division by zero will occur if it is used
             to solve a system of equations.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetri(System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
            Computes the inverse of a matrix using the LU decomposition
            computed by <see cref="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.
            </summary>
      <param name="n">An integer specifying the number of
            rows and columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="n" />-by-<paramref name="n" /> matrix
            containing the lower and upper triangular factors as computed
            by <see cref="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array containing the pivot indexes
            computed by <see cref="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="info">Reference to an integer containing a
            result code. Zero indicates success. Greater than zero
            indicates U(i,i) is exactly zero. The matrix is singular
            and its inverse could not be computed.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Double[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Solves a system of linear equations
            with a general N-by-N matrix A using the LU decomposition computed
            by <see cref="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.
            </summary>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that specifies
            whether the regular or the transposed system should be solved.</param>
      <param name="n">An integer specifying the number of
            rows and columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="nrhs">An integer specifying the number of
            columns in the right-hand side matrix <paramref name="b" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="n" />-by-<paramref name="n" /> matrix
            containing the lower and upper triangular factors as computed
            by <see cref="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array containing the pivot indexes
            computed by <see cref="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dgetrf(System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)" />.</param>
      <param name="b">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="nrhs" />-by-<paramref name="n" /> matrix
            containing the right-hand sides.
            On exit, this matrix is overwritten with the solution.</param>
      <param name="bOffset">Offset into <paramref name="b" />
            of the first element of the matrix.</param>
      <param name="ldb">The leading dimension of the array
            <paramref name="b" />. Must be greater than or
            equal to Max(1,<paramref name="n" />).</param>
      <param name="info">Reference to an integer containing a
            result code. Zero indicates success. Greater than zero
            indicates U(i,i) is exactly zero. The decomposition
            has been completed, but the factor U is exactly
            singular, and division by zero will occur if it is used
            to solve a system of equations.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dlacpy(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Copies part of a matrix to another.
            </summary>
      <param name="uplo">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies which part of the
            matrix to copy.</param>
      <param name="m">An integer specifying the number of rows
            of the matrix <paramref name="a" />. Must be greater than
            or equal to zero.</param>
      <param name="n">An integer specifying the number of
            columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="m" />-by-<paramref name="n" /> source matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="b">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="m" />-by-<paramref name="n" /> destination matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />
            of the first element of the matrix.</param>
      <param name="ldb">The leading dimension of the array
            <paramref name="b" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dlange(Extreme.Mathematics.MatrixNorm,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Computes the norm of a general rectangular matrix.
            </summary>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> that specifies the type of norm to compute.</param>
      <param name="m">The number of rows of the matrix.</param>
      <param name="n">The number of columns of the matrix.</param>
      <param name="a">A <see cref="T:System.Double" /> array containing the components of the matrix.</param>
      <param name="aOffset">The offset of the first component of the matrix in the array <paramref name="a" />.</param>
      <param name="lda">The distance between columns of the matrix in the array <paramref name="a" />.</param>
      <returns>The norm of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dlantr(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Computes the norm of a triangular matrix.
            </summary>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> that specifies the type of norm to compute.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies whether the
            matrix is upper or lower triangular.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the diagonal
            elements are all equal to one.</param>
      <param name="m">The number of rows of the matrix.</param>
      <param name="n">The number of columns of the matrix.</param>
      <param name="a">A <see cref="T:System.Double" /> array containing the components of the matrix.</param>
      <param name="aOffset">The offset of the first component of the matrix in the array <paramref name="a" />.</param>
      <param name="lda">The distance between columns of the matrix in the array <paramref name="a" />.</param>
      <returns>The norm of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dormqr(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dpbcon(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dpbtrf(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dpbtrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dpocon(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dpotrf(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dpotri(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dpotrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dsycon(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Double,System.Double@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dsyevd(System.Char,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dsytrf(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dsytri(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dsytrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32[],System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dtbtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dtrcon(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Double[],System.Int32,System.Int32,System.Double@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dtrtri(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.Lapack.Dtrtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider">
      <summary>
            Encapsulates the currently active BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.BaseName"></member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.BlasLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.BlasLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.BlasLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.ComplexBlasLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.ComplexBlasLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.ComplexBlasLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.ComplexLapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.ComplexSparseBlas">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.HasSharedDegreeOfParallelism"></member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.Lapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.MaxDegreeOfParallelism">
      <summary>
            Gets or sets the maximum degree of parallelism enabled by this instance.
            </summary>
      <exception cref="T:System.ArgumentOutOfRangeException">
            The value is zero or less than <math>-1</math>.
            </exception>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.ParallelOptions">
      <summary>
            Gets an object that specifies how the calculations should be parallelized.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.LinearAlgebraProvider.SparseBlas">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1">
      <summary>
            Contains the default implementation for the Level 1
            BLAS for double-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Dasum(System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Daxpy(System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Dcopy(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Ddot(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <returns>The dot product of the two vectors.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Dnrm2(System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Drot(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double)">
      <summary>
            Applies a Givens plane rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="c">The first rotation element,
            the cosine of the rotation angle.</param>
      <param name="s">The second rotation element,
            the sine of the rotation angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Drotg(System.Double@,System.Double@,System.Double@,System.Double@)">
      <summary>
            Generates the elements for a Givens plane rotation.
            </summary>
      <param name="a">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element <i>r</i>.</param>
      <param name="b">The second element of the input vector.
            On exit, this value is overwritten with the
            reconstruction value <i>z</i>.</param>
      <param name="c">On exit, this value is overwritten with
            the first rotation element, the cosine of the rotation
            angle.</param>
      <param name="s">On exit, this value is overwritten with
            the second rotation element, the sine of the rotation
            angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Drotm(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Drotmg(System.Double@,System.Double@,System.Double@,System.Double,System.Double[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="d1">The first scale factor for the modified
            Givens transform.</param>
      <param name="d2">The second scale factor for the modified
            Givens transform.</param>
      <param name="x1">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element.</param>
      <param name="y1">The second element of the input
            vector.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Dscal(System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Dswap(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel1.Idamax(System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2">
      <summary>
            Contains the default implementation for the Level 2
            BLAS for double-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dgbmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general band matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="ku">The upper bandwidth of the matrix <paramref name="a" />.</param>
      <param name="kl">The lower bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dger(System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dsbmv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dsymv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dsyr(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dsyr2(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a symmetric rank two update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dtbmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dtbsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular band system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dtrmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel2.Dtrsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel3">
      <summary>
            Contains the default implementation for the Level 3
            BLAS for double-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel3.Dgemm(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of two general matrices and a scaled matrix.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="transB">Specifies the operation to be
            performed on the matrix <paramref name="b" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel3.Dsymm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a symmetric and a general matrix and a scaled matrix.
            </summary>
      <param name="side">Specifies on which side the symmetric
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="m">The number of rows in the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel3.Dsyr2k(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>2k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="trans" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel3.Dsyrk(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="trans" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel3.Dtrmm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular and a general matrix.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows and columns in the matrix <paramref name="a" />
            and the number of rows in the matrix <paramref name="b" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedBlasLevel3.Dtrsm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Solution of a triangular linear system with
            multiple right-hand sides.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1">
      <summary>
            Contains the default implementation for the Level 1
            BLAS for double-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Dzasum(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Dznrm2(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Izamax(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Zaxpy(System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Zcopy(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Zdotc(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Zdotu(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Zscal(System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel1.Zswap(System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2">
      <summary>
            Contains the default implementation for the Level 2
            BLAS for DoubleComplex-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Zgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Zgerc(System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Zgeru(System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Zhemv(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a hermitian matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Zher(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Double,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a hermitian.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Zher2(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.DoubleComplex,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a hermitian rank two update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Ztrmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedComplexBlasLevel2.Ztrsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32,Extreme.Mathematics.DoubleComplex[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider">
      <summary>
            Encapsulates the currently active BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.#ctor">
      <summary>
            Constructs a new <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider" />.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.BlasLevel1">
      <summary>
            Gets the implementation of the Level 1
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.BlasLevel2">
      <summary>
            Gets the implementation of the Level 2
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.BlasLevel3">
      <summary>
            Gets the implementation of the Level 3
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.ComplexBlasLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.ComplexBlasLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.ComplexBlasLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.ComplexLapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.ComplexSparseBlas">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.Lapack">
      <summary>
            Gets the LAPACK implementation
            for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.MaxDegreeOfParallelism">
      <summary>
            Returns the maximum degree of parallelism used by this provider.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.SparseBlas">
      <summary>
            Gets the implementation of the sparse
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider.WithMaxDegreeOfParallelism(System.Int32)">
      <summary>
            Returns a provider with the specified maximum degree of parallelism.
            </summary>
      <param name="maxDegreeOfParallelism">The maximum degree of parallelism.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedLinearAlgebraProvider" /> with the specified
            maximum degree of parallelism.</returns>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.ManagedSparseBlas">
      <summary>
            Contains the managed implementation of the sparse BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedSparseBlas.#ctor">
      <summary>
            Constructs a new <see cref="!:ManagedSparseLinearAlgebraOperations" /> object.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedSparseBlas.Dcscmm(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Double,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Double[],System.Int32[],System.Int32[],System.Int32[],System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Multiplies a matrix in compressed sparse column format with a dense matrix.
            </summary>
      <param name="transA"></param>
      <param name="m">The number of rows in the matrix A.</param>
      <param name="n">The number of columns in the matrix C.</param>
      <param name="k">The number of columns in the matric A.</param>
      <param name="alpha">The multiplier for the matrix product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that specifies the structural properties
            of the matrix A</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies whether the
            upper or lower triangular part of the matrix is used.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that specifies whether the
            diagonal of the sparse matrix contains all 1's.</param>
      <param name="a">A <see cref="T:System.Double" /> array that contains the values of the elements of the
            matrix A.</param>
      <param name="aRows">An integer array that contains the row indexes corresponding to the values in
            <paramref name="a" />.</param>
      <param name="aPointerB">An integer array that specifies the index into <paramref name="a" /> and
            <paramref name="aRows" /> of the first element of each column.</param>
      <param name="aPointerE">An integer array that specifies the index into <paramref name="a" /> and
            <paramref name="aRows" /> past the last element of each column.</param>
      <param name="b">A <see cref="T:System.Double" /> array that contains the components of the dense matrix.</param>
      <param name="bOffset">An integer that specifies the offset into <paramref name="b" /> of the first component
            of the dense matrix.</param>
      <param name="ldb">An integer that specifies the number of elements in <paramref name="b" /> between columns of the dense matrix.</param>
      <param name="beta">Multiplier for the matrix C.</param>
      <param name="c">A <see cref="T:System.Double" /> array that contains the components of the (dense) result matrix.</param>
      <param name="cOffset">An integer that specifies the offset into <paramref name="c" /> of the first component
            of the result matrix.</param>
      <param name="ldc">An integer that specifies the number of elements in <paramref name="c" /> 
            between columns of the result matrix.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedSparseBlas.Dcscmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Double[],System.Int32[],System.Int32[],System.Int32[],System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.ManagedSparseBlas.Dcscsv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Double,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Double[],System.Int32[],System.Int32[],System.Int32[],System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)"></member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 1 BLAS.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Isamax(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Sasum(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Saxpy(System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Scopy(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Sdot(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <returns>The dot product of the two vectors.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Snrm2(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Srot(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
            Applies a Givens plane rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="c">The first rotation element,
            the cosine of the rotation angle.</param>
      <param name="s">The second rotation element,
            the sine of the rotation angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Srotg(System.Single@,System.Single@,System.Single@,System.Single@)">
      <summary>
            Generates the elements for a Givens plane rotation.
            </summary>
      <param name="a">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element <i>r</i>.</param>
      <param name="b">The second element of the input vector.
            On exit, this value is overwritten with the
            reconstruction value <i>z</i>.</param>
      <param name="c">On exit, this value is overwritten with
            the first rotation element, the cosine of the rotation
            angle.</param>
      <param name="s">On exit, this value is overwritten with
            the second rotation element, the sine of the rotation
            angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Srotm(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Srotmg(System.Single@,System.Single@,System.Single@,System.Single,System.Single[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="d1">The first scale factor for the modified
            Givens transform.</param>
      <param name="d2">The second scale factor for the modified
            Givens transform.</param>
      <param name="x1">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element.</param>
      <param name="y1">The second element of the input
            vector.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Sscal(System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel1.Sswap(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 2 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Sgbmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general band matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="ku">The upper bandwidth of the matrix <paramref name="a" />.</param>
      <param name="kl">The lower bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Sgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Sger(System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Ssbmv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Ssymv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Ssyr(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a symmetric.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Ssyr2(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a symmetric rank two update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Stbmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Stbsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular band system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Strmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel2.Strsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 3 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3.Sgemm(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of two general matrices and a scaled matrix.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="transB">Specifies the operation to be
            performed on the matrix <paramref name="b" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3.Ssymm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a symmetric and a general matrix and a scaled matrix.
            </summary>
      <param name="side">Specifies on which side the symmetric
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3.Ssyr2k(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>2k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3.Ssyrk(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3.Strmm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular and a general matrix.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleBlasLevel3.Strsm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Solution of a triangular linear system with
            multiple right-hand sides.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 1 BLAS.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Caxpy(System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Ccopy(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Cdotc(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Cdotu(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Cscal(System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Cswap(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Icamax(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Scasum(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel1.Scnrm2(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 2 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Cgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Cgerc(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Cgeru(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Chemv(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a hermitian matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Cher(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a hermitian.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Cher2(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a hermitian rank two update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Ctrmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel2.Ctrsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3">
      <summary>
            Specifies the methods that must be implemented by a
            class to support level 3 BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3.Cgemm(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of two general matrices and a scaled matrix.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="transB">Specifies the operation to be
            performed on the matrix <paramref name="b" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply the product of the matrices.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3.Chemm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a hermitian and a general matrix and a scaled matrix.
            </summary>
      <param name="side">Specifies on which side the hermitian
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3.Cher2k(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Single,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>2k</i> update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3.Cherk(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Single,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3.Ctrmm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular and a general matrix.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexBlasLevel3.Ctrsm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Solution of a triangular linear system with
            multiple right-hand sides.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack">
      <summary>
            Specifies the methods that must be implemented by a
            class to support single-precision complex real LAPACK routines
            for general matrices.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cgecon(Extreme.Mathematics.MatrixNorm,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Single,System.Single@,System.Int32@)">
      <summary>
             CGECON estimates the reciprocal of the condition number of a general
             real matrix A, inthis. either the 1-norm or the infinity-norm, using
             the LU decomposition computed by CGETRF.
            
             An estimate is obtained for norm(inv(A)), and the reciprocal of the
             condition number is computed as
                RCOND = 1 / ( norm(A) * norm(inv(A)) ).
            
             Arguments
             =========
            
             NORM    (input) CHARACTER*1
             Specifies whether the 1-norm condition number or the
             infinity-norm condition number is required:
                = '1' or 'O':  1-norm;
                = 'I':         Infinity-norm.
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             A       (input) COUBLE PRECISION array, dimension (LDA,N)
             The factors L and U from the decomposition A = P*L*U
             as computed by CGETRF.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             ANORM   (input) COUBLE PRECISION
             If NORM = '1' or 'O', the 1-norm of the original matrix A.
             If NORM = 'I', the infinity-norm of the original matrix A.
            
             RCOND   (output) COUBLE PRECISION
             The reciprocal of the condition number of the matrix A,
             computed as RCOND = 1/(norm(A) * norm(inv(A))).
            
             WORK    (workspace) COUBLE PRECISION array, dimension (4*N)
            
             IWORK   (workspace) INTEGER array, dimension (N)
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
            
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cgeqrf(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32@)">
      <summary>
             CGEQRF computes a QR decomposition of a real M-by-N matrix A:
             A = Q * R.
            
             Arguments
             =========
            
             M       (input) INTEGER
             The number of rows of the matrix A.  M &gt;= 0.
            
             N       (input) INTEGER
             The number of columns of the matrix A.  N &gt;= 0.
            
             A       (input/output) COUBLE PRECISION array, dimension (LDA,N)
             On entry, the M-by-N matrix A.
             On exit, the elements on and above the diagonal of the array
             contain the min(M,N)-by-N upper trapezoidal matrix R (R is
             upper triangular if m &gt;= n); the elements below the diagonal,
             with the array TAU, represent the orthogonal matrix Q as a
             product of min(m,n) elementary reflectors (see Further
             Cetails).
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= max(1,M).
            
             TAU     (output) COUBLE PRECISION array, dimension (min(M,N))
             The scalar factors of the elementary reflectors (see Further
             Cetails).
            
             WORK    (workspace/output) COUBLE PRECISION array, dimension (LWORK)
             On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
            
             LWORK   (input) INTEGER
             The dimension of the array WORK.  LWORK &gt;= max(1,N).
             For optimum performance LWORK &gt;= N*NB, where NB is
             the optimal blocksize.
            
             If LWORK = -1, then a workspace query is assumed; the routine
             only calculates the optimal size of the WORK array, returns
             this value as the first entry of the WORK array, and no error
             message related to LWORK is issued by XERBLA.
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
             Further Cetails
             ===============
            
             The matrix Q is represented as a product of elementary reflectors
            
                Q = H(1) H(2) . . . H(k), where k = min(m,n).
            
             Each H(i) has the form
            
                H(i) = I - tau * v * v'
            
             where tau is a real scalar, and v is a real vector with
             v(1:i-1) = 0 and v(i) = 1; v(i+1:m) is stored on exit inthis. A(i+1:m,i),
             and tau inthis. TAU(i).
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cgesdd(System.Char,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Single[],Extreme.Mathematics.SingleComplex[],System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cgetrf(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
             CGETRF computes an LU decomposition of a general M-by-N matrix A
             using partial pivoting with row interchanges.
             <para>
             The decomposition has the form</para><para><center>A = P * L * U</center></para><para>where P is a permutation matrix, L is lower triangular with unit
             diagonal elements (lower trapezoidal if m &gt; n), and U is upper
             triangular (upper trapezoidal if m &lt; n).
             </para><para>
             This is the right-looking Level 3 BLAS version of the algorithm.
             </para></summary>
      <param name="m">An integer specifying the number of rows
             of the matrix <paramref name="a" />. Must be greater than
             or equal to zero.</param>
      <param name="n">An integer specifying the number of
             columns of the matrix <paramref name="a" />. Must be
             greater than or equal to zero.
             </param>
      <param name="a">single-precision complex array specifying the
             <paramref name="m" />-by-<paramref name="n" /> matrix
             to be factored. On exit, the factors L and U from the
             decomposition A = P*L*U; the unit diagonal elements of
             L are not stored.</param>
      <param name="aOffset">Offset into <paramref name="a" />
             of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
             <paramref name="a" />. Must be greater than or
             equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array of length
             min(<paramref name="m" />,<paramref name="n" />) that
             will hold the pivot indexes. Row <i>i</i> of the
             matrix was interchanged with row
             <paramref name="ipiv" />[<i>i</i>].</param>
      <param name="info">Reference to an integer containing a
             result code. Cero indicates success. Greater than zero
             indicates U(i,i) is exactly zero. The decomposition
             has been completed, but the factor U is exactly
             singular, and division by zero will occur if it is used
             to solve a system of equations.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cgetri(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
             CGETRI computes the inverse of a matrix using the LU decomposition
             computed by CGETRF.
            
             This method inverts U and then computes inv(A) by solving the system
             inv(A)*L = inv(U) for inv(A).
            
             Arguments
             =========
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             A       (input/output) COUBLE PRECISION array, dimension (LDA,N)
             On entry, the factors L and U from the decomposition
             A = P*L*U as computed by CGETRF.
             On exit, if INFO = 0, the inverse of the original matrix A.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             IPIV    (input) INTEGER array, dimension (N)
             The pivot indexes from CGETRF; for 1&lt; =i&lt; =N, row i of the
             matrix was interchanged with row IPIVi.
            
             WORK    (workspace/output) COUBLE PRECISION array, dimension (LWORK)
             On exit, if INFO =0, then WORK(1) returns the optimal LWORK.
            
             LWORK   (input) INTEGER
             The dimension of the array WORK.  LWORK &gt;= Max(1,N).
             For optimal performance LWORK &gt;= N*NB, where NB is
             the optimal blocksize returned by ILAENV.
            
             If LWORK = -1, then a workspace query is assumed; the routine
             only calculates the optimal size of the WORK array, returns
             this value as the first entry of the WORK array, and no error
             message related to LWORK is issued by XERBLA.
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
             &gt; 0:  if INFO = i, U(i,i) is exactly zero; the matrix is
             singular and its inverse could not be computed.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cgetrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32[],Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
             CGETRS solves a system of linear equations
                A * X = B  or  A' * X = B
             with a general N-by-N matrix A using the LU decomposition computed
             by CGETRF.
            
             Arguments
             =========
            
             TRANS   (input) CHARACTER*1
             Specifies the form of the system of equations:
                = 'N':  A * X = B  (No transpose)
                = TransposeOperation.Transpose:  A'* X = B  (Transpose)
                = 'C':  A'* X = B  (Conjugate transpose = Transpose)
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             NRHS    (input) INTEGER
             The number of right hand sides, i.e., the number of columns
             of the matrix B.  NRHS &gt;= 0.
            
             A       (input) COUBLE PRECISION array, dimension (LDA,N)
             The factors L and U from the decomposition A = P*L*U
             as computed by CGETRF.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             IPIV    (input) INTEGER array, dimension (N)
             The pivot indexes from CGETRF; for 1&lt; =i&lt; =N, row i of the
             matrix was interchanged with row IPIVi.
            
             B       (input/output) COUBLE PRECISION array, dimension (LDB,NRHS)
             On entry, the right hand side matrix B.
             On exit, the solution matrix X.
            
             LDB     (input) INTEGER
             The leading dimension of the array B.  LDB &gt;= Max(1,N).
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
             =====================================================================
            
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Clacpy(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies the specified elements of a complex matrix.
            </summary>
      <param name="uplo">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies which part of the matrix should be copied.</param>
      <param name="m">The number of rows of the matrices.</param>
      <param name="n">The number of columns of the matrices.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the data for the source matrix.</param>
      <param name="aOffset">Offset of the first component of the source matrix.</param>
      <param name="lda">Increment between elements of the same row in the source matrix.</param>
      <param name="b">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array containing the data for the destination matrix.</param>
      <param name="bOffset">Offset of the first component of the destination matrix.</param>
      <param name="ldb">Increment between elements of the same row in the destination matrix.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cpocon(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Single,System.Single@,System.Int32@)">
      <summary>
            Estimates the reciprocal of the condition number of a factored hermitian matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="aNorm">The norm of the matrix.</param>
      <param name="rcond">On output, an estimate for the reciprocal of the condition number of the matrix.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cpotrf(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Factors a symmetric positive definite matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cpotri(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Computes the inverse of a factored hermitian matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cpotrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Solves a hermitian system of equations.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix components
            are stored in the upper or lower triangular part.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="nrhs">The number of right hand sides.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="b">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the right-hand side(s).</param>
      <param name="bOffset">The offset of the first element of the right-hand side in <paramref name="b" />.</param>
      <param name="ldb">The stride between columns of the right-hand side in <paramref name="b" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Ctrcon(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Single@,System.Int32@)">
      <summary>
            Approximates the reciprocal of the condition number of a complex triangular matrix.
            </summary>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> value that specifies which norm to use in the expression for the condition number.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix is upper
            or lower triangular.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the matrix is unit diagonal.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="rcond">On output, an estimate for the reciprocal of the condition number of the matrix.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Ctrtri(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Computes the inverse of a complex triangular matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix is upper
            or lower triangular.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the matrix is unit diagonal.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Ctrtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Solves a complex triangular system of equations.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that indicates whether the matrix is upper
            or lower triangular.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that indicates if the matrix should be transposed or not.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the matrix is unit diagonal.</param>
      <param name="n">The number of rows and columns of the matrix.</param>
      <param name="nrhs">The number of right hand sides.</param>
      <param name="a">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the matrix.</param>
      <param name="aOffset">The offset of the first element of the matrix in <paramref name="a" />.</param>
      <param name="lda">The stride between columns of the matrix in <paramref name="a" />.</param>
      <param name="b">A <see cref="T:Extreme.Mathematics.SingleComplex" /> array that contains the components of the right-hand side(s).</param>
      <param name="bOffset">The offset of the first element of the right-hand side in <paramref name="b" />.</param>
      <param name="ldb">The stride between columns of the right-hand side in <paramref name="b" />.</param>
      <param name="info">On output, indicates error conditions.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexLapack.Cunmqr(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas">
      <summary>
            Summary description for SparseBlasLevel1.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Ccscmm(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.SingleComplex[],System.Int32[],System.Int32[],System.Int32[],Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense matrix by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="b">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="b" />.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">The leading dimension of the matrix <paramref name="b" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="c" />.
            The elements of <paramref name="c" /> are overwritten with
            the result.
            </param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">The leading dimension of the matrix <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Ccscmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.SingleComplex[],System.Int32[],System.Int32[],System.Int32[],Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense vector by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Ccscsv(Extreme.Mathematics.TransposeOperation,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,Extreme.Mathematics.SingleComplex[],System.Int32[],System.Int32[],System.Int32[],Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Solves for a dense vector for a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Cusaxpy(System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32[],System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Cusdot(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32[],System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the dot product of a sparse and a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Cusga(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Cusgz(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector and zeros the original components.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleComplexSparseBlas.Cussc(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32[],System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies the nonzero components of a sparse vector into the corresponding components of a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack">
      <summary>
            Specifies the methods that must be implemented by a
            class to support float-precision real LAPACK routines
            for general matrices.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgbcon(Extreme.Mathematics.MatrixNorm,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Single,System.Single@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgbtrf(System.Int32,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgbtrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgecon(Extreme.Mathematics.MatrixNorm,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single@,System.Int32@)">
      <summary>
             SGECON estimates the reciprocal of the condition number of a general
             real matrix A, inthis. either the 1-norm or the infinity-norm, using
             the LU decomposition computed by SGETRF.
            
             An estimate is obtained for norm(inv(A)), and the reciprocal of the
             condition number is computed as
                RCOND = 1 / ( norm(A) * norm(inv(A)) ).
            
             Arguments
             =========
            
             NORM    (input) CHARACTER*1
             Specifies whether the 1-norm condition number or the
             infinity-norm condition number is required:
                = '1' or 'O':  1-norm;
                = 'I':         Infinity-norm.
            
             N       (input) INTEGER
             The elementOrder of the matrix A.  N &gt;= 0.
            
             A       (input) SOUBLE PRECISION array, dimension (LDA,N)
             The factors L and U from the decomposition A = P*L*U
             as computed by SGETRF.
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= Max(1,N).
            
             ANORM   (input) SOUBLE PRECISION
             If NORM = '1' or 'O', the 1-norm of the original matrix A.
             If NORM = 'I', the infinity-norm of the original matrix A.
            
             RCOND   (output) SOUBLE PRECISION
             The reciprocal of the condition number of the matrix A,
             computed as RCOND = 1/(norm(A) * norm(inv(A))).
            
             WORK    (workspace) SOUBLE PRECISION array, dimension (4*N)
            
             IWORK   (workspace) INTEGER array, dimension (N)
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
            
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgeev(System.Char,System.Char,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Single[],System.Single[],System.Int32,System.Single[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgeqp3(System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Single[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgeqrf(System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32@)">
      <summary>
             SGEQRF computes a QR decomposition of a real M-by-N matrix A:
             A = Q * R.
            
             Arguments
             =========
            
             M       (input) INTEGER
             The number of rows of the matrix A.  M &gt;= 0.
            
             N       (input) INTEGER
             The number of columns of the matrix A.  N &gt;= 0.
            
             A       (input/output) SOUBLE PRECISION array, dimension (LDA,N)
             On entry, the M-by-N matrix A.
             On exit, the elements on and above the diagonal of the array
             contain the min(M,N)-by-N upper trapezoidal matrix R (R is
             upper triangular if m &gt;= n); the elements below the diagonal,
             with the array TAU, represent the orthogonal matrix Q as a
             product of min(m,n) elementary reflectors (see Further
             Setails).
            
             LDA     (input) INTEGER
             The leading dimension of the array A.  LDA &gt;= max(1,M).
            
             TAU     (output) SOUBLE PRECISION array, dimension (min(M,N))
             The scalar factors of the elementary reflectors (see Further
             Setails).
            
             WORK    (workspace/output) SOUBLE PRECISION array, dimension (LWORK)
             On exit, if INFO = 0, WORK(1) returns the optimal LWORK.
            
             LWORK   (input) INTEGER
             The dimension of the array WORK.  LWORK &gt;= max(1,N).
             For optimum performance LWORK &gt;= N*NB, where NB is
             the optimal blocksize.
            
             If LWORK = -1, then a workspace query is assumed; the routine
             only calculates the optimal size of the WORK array, returns
             this value as the first entry of the WORK array, and no error
             message related to LWORK is issued by XERBLA.
            
             INFO    (output) INTEGER
                = 0:  successful exit
             &lt; 0:  if INFO = -i, the i-th argument had an illegal value
            
             Further Setails
             ===============
            
             The matrix Q is represented as a product of elementary reflectors
            
                Q = H(1) H(2) . . . H(k), where k = min(m,n).
            
             Each H(i) has the form
            
                H(i) = I - tau * v * v'
            
             where tau is a real scalar, and v is a real vector with
             v(1:i-1) = 0 and v(i) = 1; v(i+1:m) is stored on exit inthis. A(i+1:m,i),
             and tau inthis. TAU(i).
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgesdd(System.Char,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Single[],System.Int32,System.Single[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgetrf(System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
             Computes an LU decomposition of a general M-by-N matrix A
             using partial pivoting with row interchanges.
             <para>
             The decomposition has the form</para><para><center>A = P * L * U</center></para><para>where P is a permutation matrix, L is lower triangular with unit
             diagonal elements (lower trapezoidal if m &gt; n), and U is upper
             triangular (upper trapezoidal if m &lt; n).
             </para><para>
             This is the right-looking Level 3 BLAS version of the algorithm.
             </para></summary>
      <param name="m">An integer specifying the number of rows
             of the matrix <paramref name="a" />. Must be greater than
             or equal to zero.</param>
      <param name="n">An integer specifying the number of
             columns of the matrix <paramref name="a" />. Must be
             greater than or equal to zero.
             </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
             <paramref name="m" />-by-<paramref name="n" /> matrix
             to be factored. On exit, the factors L and U from the
             decomposition A = P*L*U; the unit diagonal elements of
             L are not stored.</param>
      <param name="aOffset">Offset into <paramref name="a" />
             of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
             <paramref name="a" />. Must be greater than or
             equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array of length
             min(<paramref name="m" />,<paramref name="n" />) that
             will hold the pivot indexes. Row <i>i</i> of the
             matrix was interchanged with row
             <paramref name="ipiv" />[<i>i</i>].</param>
      <param name="info">Reference to an integer containing a
             result code. Zero indicates success. Greater than zero
             indicates U(i,i) is exactly zero. The decomposition
             has been completed, but the factor U is exactly
             singular, and division by zero will occur if it is used
             to solve a system of equations.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgetri(System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Int32@)">
      <summary>
            Computes the inverse of a matrix using the LU decomposition
            computed by <see cref="!:Dgetrf" />.
            </summary>
      <param name="n">An integer specifying the number of
            rows and columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="n" />-by-<paramref name="n" /> matrix
            containing the lower and upper triangular factors as computed
            by <see cref="!:Dgetrf" />.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array containing the pivot indexes
            computed by <see cref="!:Dgetrf" />.</param>
      <param name="info">Reference to an integer containing a
            result code. Zero indicates success. Greater than zero
            indicates U(i,i) is exactly zero. The matrix is singular
            and its inverse could not be computed.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sgetrs(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32[],System.Single[],System.Int32,System.Int32,System.Int32@)">
      <summary>
            Solves a system of linear equations
            with a general N-by-N matrix A using the LU decomposition computed
            by <see cref="!:Dgetrf" />.
            </summary>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that specifies
            whether the regular or the transposed system should be solved.</param>
      <param name="n">An integer specifying the number of
            rows and columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="nrhs">An integer specifying the number of
            columns in the right-hand side matrix <paramref name="b" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="n" />-by-<paramref name="n" /> matrix
            containing the lower and upper triangular factors as computed
            by <see cref="!:Dgetrf" />.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="ipiv">Integer array containing the pivot indexes
            computed by <see cref="!:Dgetrf" />.</param>
      <param name="b">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="nrhs" />-by-<paramref name="n" /> matrix
            containing the right-hand sides.
            On exit, this matrix is overwritten with the solution.</param>
      <param name="bOffset">Offset into <paramref name="b" />
            of the first element of the matrix.</param>
      <param name="ldb">The leading dimension of the array
            <paramref name="b" />. Must be greater than or
            equal to Max(1,<paramref name="n" />).</param>
      <param name="info">Reference to an integer containing a
            result code. Zero indicates success. Greater than zero
            indicates U(i,i) is exactly zero. The decomposition
            has been completed, but the factor U is exactly
            singular, and division by zero will occur if it is used
            to solve a system of equations.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Slacpy(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Copies part of a matrix to another.
            </summary>
      <param name="uplo">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies which part of the
            matrix to copy.</param>
      <param name="m">An integer specifying the number of rows
            of the matrix <paramref name="a" />. Must be greater than
            or equal to zero.</param>
      <param name="n">An integer specifying the number of
            columns of the matrix <paramref name="a" />. Must be
            greater than or equal to zero.
            </param>
      <param name="a">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="m" />-by-<paramref name="n" /> source matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />
            of the first element of the matrix.</param>
      <param name="lda">The leading dimension of the array
            <paramref name="a" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
      <param name="b">
        <see cref="T:System.Double" /> array specifying the
            <paramref name="m" />-by-<paramref name="n" /> destination matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />
            of the first element of the matrix.</param>
      <param name="ldb">The leading dimension of the array
            <paramref name="b" />. Must be greater than or
            equal to Max(1,<paramref name="m" />).</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Slange(Extreme.Mathematics.MatrixNorm,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Computes the norm of a general rectangular matrix.
            </summary>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> that specifies the type of norm to compute.</param>
      <param name="m">The number of rows of the matrix.</param>
      <param name="n">The number of columns of the matrix.</param>
      <param name="a">A <see cref="T:System.Double" /> array containing the components of the matrix.</param>
      <param name="aOffset">The offset of the first component of the matrix in the array <paramref name="a" />.</param>
      <param name="lda">The distance between columns of the matrix in the array <paramref name="a" />.</param>
      <returns>The norm of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Slantr(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Computes the norm of a triangular matrix.
            </summary>
      <param name="norm">A <see cref="T:Extreme.Mathematics.MatrixNorm" /> that specifies the type of norm to compute.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies whether the
            matrix is upper or lower triangular.</param>
      <param name="diag">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that indicates whether the diagonal
            elements are all equal to one.</param>
      <param name="m">The number of rows of the matrix.</param>
      <param name="n">The number of columns of the matrix.</param>
      <param name="a">A <see cref="T:System.Double" /> array containing the components of the matrix.</param>
      <param name="aOffset">The offset of the first component of the matrix in the array <paramref name="a" />.</param>
      <param name="lda">The distance between columns of the matrix in the array <paramref name="a" />.</param>
      <returns>The norm of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Sormqr(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Spbcon(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Spbtrf(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Spbtrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Spocon(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Spotrf(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Spotri(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Spotrs(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Ssyevd(System.Char,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Stbtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Strcon(Extreme.Mathematics.MatrixNorm,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Single[],System.Int32,System.Int32,System.Single@,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Strtri(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLapack.Strtrs(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Int32@)"></member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider">
      <summary>
            Encapsulates the currently active BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.BaseName"></member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.BlasLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.BlasLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.BlasLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.ComplexBlasLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.ComplexBlasLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.ComplexBlasLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.ComplexLapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.ComplexSparseBlas">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.Lapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleLinearAlgebraProvider.SparseBlas">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1">
      <summary>
            Contains the default implementation for the Level 1
            BLAS for float-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Isamax(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Sasum(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Saxpy(System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Scopy(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Sdot(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <returns>The dot product of the two vectors.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Snrm2(System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vector <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Srot(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single)">
      <summary>
            Applies a Givens plane rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="c">The first rotation element,
            the cosine of the rotation angle.</param>
      <param name="s">The second rotation element,
            the sine of the rotation angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Srotg(System.Single@,System.Single@,System.Single@,System.Single@)">
      <summary>
            Generates the elements for a Givens plane rotation.
            </summary>
      <param name="a">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element <i>r</i>.</param>
      <param name="b">The second element of the input vector.
            On exit, this value is overwritten with the
            reconstruction value <i>z</i>.</param>
      <param name="c">On exit, this value is overwritten with
            the first rotation element, the cosine of the rotation
            angle.</param>
      <param name="s">On exit, this value is overwritten with
            the second rotation element, the sine of the rotation
            angle.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Srotm(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Srotmg(System.Single@,System.Single@,System.Single@,System.Single,System.Single[])">
      <summary>
            Applies a modified Givens rotation.
            </summary>
      <param name="d1">The first scale factor for the modified
            Givens transform.</param>
      <param name="d2">The second scale factor for the modified
            Givens transform.</param>
      <param name="x1">The first element of the input vector.
            On exit, this value is overwritten with the rotated
            element.</param>
      <param name="y1">The second element of the input
            vector.</param>
      <param name="param">An array defining the type of transform
            matrix H used.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Sscal(System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel1.Sswap(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2">
      <summary>
            Contains the default implementation for the Level 2
            BLAS for float-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Sgbmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general band matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="ku">The upper bandwidth of the matrix <paramref name="a" />.</param>
      <param name="kl">The lower bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Sgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Sger(System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Ssbmv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Ssymv(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a symmetric matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Ssyr(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a symmetric.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Ssyr2(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a symmetric rank two update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Stbmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular band matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Stbsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular band system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="k">The bandwidth of the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Strmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel2.Strsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel3">
      <summary>
            Contains the default implementation for the Level 3
            BLAS for float-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel3.Sgemm(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of two general matrices and a scaled matrix.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="transB">Specifies the operation to be
            performed on the matrix <paramref name="b" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the number of rows of the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel3.Ssymm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a symmetric and a general matrix and a scaled matrix.
            </summary>
      <param name="side">Specifies on which side the symmetric
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel3.Ssyr2k(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>2k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel3.Ssyrk(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Performs a rank <i>k</i> update of a symmetric matrix.
            </summary>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="trans">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="n">The number of rows and columns in
            the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="c">Reference to the first element in a
            one-dimensional array containing the elements of the third
            matrix.</param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">Leading dimension of <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel3.Strmm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular and a general matrix.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedBlasLevel3.Strsm(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Solution of a triangular linear system with
            multiple right-hand sides.
            </summary>
      <param name="side">Specifies on which side the triangular
            matrix <paramref name="a" /> is to be multiplied.</param>
      <param name="triangleMode">Specifies whether the elements of
            the matrix <paramref name="a" /> are stored in the
            upper or lower triangular part.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />
            transformed as specified by <paramref name="transA" />,
            and the matrix <paramref name="c" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="b" />
            transformed as specified by <paramref name="transB" />,
            and the matrix <paramref name="c" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the first
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="b">Reference to the first element in a
            one-dimensional array containing the elements of the second
            matrix.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">Leading dimension of <paramref name="b" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1">
      <summary>
            Contains the default implementation for the Level 1
            BLAS for double-precision real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Caxpy(System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a vector
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Ccopy(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Copies a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the elements of <paramref name="x" />.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Cdotc(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Cdotu(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the inner product of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Cscal(System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Evaluates the product of a scalar and a vector.
            </summary>
      <param name="n">The number of elements in the vector
            <paramref name="x" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Cswap(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Exchanges the elements of two vectors.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Icamax(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the index of the element of a vector with
            maximum absolute value.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Scasum(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the sum of the absolute values of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel1.Scnrm2(System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Returns the square root of sum of the squares of
            the elements of a vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2">
      <summary>
            Contains the default implementation for the Level 2
            BLAS for single-precision complex real numbers.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Cgemv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Sum of the product of a general matrix and vector and a scaled vector.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Cgerc(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Cgeru(System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a matrix.
            </summary>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Chemv(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a hermitian matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Cher(Extreme.Mathematics.MatrixTriangle,System.Int32,System.Single,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a rank one update of a hermitian.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the
            matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Cher2(Extreme.Mathematics.MatrixTriangle,System.Int32,Extreme.Mathematics.SingleComplex,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Performs a hermitian rank two update of a hermitian matrix.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            outer product.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Ctrmv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Product of a triangular matrix and a vector.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedComplexBlasLevel2.Ctrsv(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.MatrixDiagonal,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32,Extreme.Mathematics.SingleComplex[],System.Int32,System.Int32)">
      <summary>
            Solves a triangular system of equations.
            </summary>
      <param name="triangleMode">Specifies whether the matrix is an
            upper or lower triangular matrix.</param>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="diag">Specifies whether or not
            <paramref name="a" /> is unit triangular.</param>
      <param name="n">The number of rows and columns in the matrix <paramref name="a" />.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aOffset">Offset into <paramref name="a" />.</param>
      <param name="lda">Leading dimension of <paramref name="a" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            The elements of <paramref name="x" /> are overwritten with
            the result.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider">
      <summary>
            Encapsulates the currently active BLAS implementation.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.BlasLevel1">
      <summary>
            Gets the implementation of the Level 1
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.BlasLevel2">
      <summary>
            Gets the implementation of the Level 2
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.BlasLevel3">
      <summary>
            Gets the implementation of the Level 3
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.ComplexBlasLevel1">
      <summary>
            Gets or sets the current implementation of the Level 1
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.ComplexBlasLevel2">
      <summary>
            Gets or sets the current implementation of the Level 2
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.ComplexBlasLevel3">
      <summary>
            Gets or sets the current implementation of the Level 3
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.ComplexLapack">
      <summary>
            Gets or sets the current LAPACK implementation
            for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.ComplexSparseBlas">
      <summary>
            Gets or sets the current implementation of the sparse
            BLAS for double-precision complex arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.Lapack">
      <summary>
            Gets the LAPACK implementation
            for double-precision arguments.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedLinearAlgebraProvider.SparseBlas">
      <summary>
            Gets the implementation of the sparse
            BLAS for double-precision arguments.
            </summary>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedSparseBlas">
      <summary>
            Contains the managed implementation of the sparse BLAS routines.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedSparseBlas.#ctor">
      <summary>
            Constructs a new <see cref="!:ManagedSparseLinearAlgebraOperations" /> object.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedSparseBlas.Scscmm(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Single,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Single[],System.Int32[],System.Int32[],System.Int32[],System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedSparseBlas.Scscmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Single[],System.Int32[],System.Int32[],System.Int32[],System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)"></member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleManagedSparseBlas.Scscsv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Single,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Single[],System.Int32[],System.Int32[],System.Int32[],System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)"></member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas">
      <summary>
            Summary description for SparseBlasLevel1.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Scscmm(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Single,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Single[],System.Int32[],System.Int32[],System.Int32[],System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense matrix by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="b">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="b" />.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">The leading dimension of the matrix <paramref name="b" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="c" />.
            The elements of <paramref name="c" /> are overwritten with
            the result.
            </param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">The leading dimension of the matrix <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Scscmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Single,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Single[],System.Int32[],System.Int32[],System.Int32[],System.Single[],System.Int32,System.Int32,System.Single,System.Single[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense vector by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Scscsv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Single,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Single[],System.Int32[],System.Int32[],System.Int32[],System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Solves for a dense vector for a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Susaxpy(System.Int32,System.Single,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Susdot(System.Int32,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Returns the dot product of a sparse and a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Susga(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Susgz(System.Int32,System.Single[],System.Int32,System.Int32,System.Single[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector and zeros the original components.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SingleSparseBlas.Sussc(System.Int32,System.Single[],System.Int32,System.Int32[],System.Int32,System.Single[],System.Int32,System.Int32)">
      <summary>
            Copies the nonzero components of a sparse vector into the corresponding components of a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas">
      <summary>
            Summary description for SparseBlasLevel1.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.#ctor">
      <summary>
        <markup>
          <include item="SMCAutoDocConstructor">
            <parameter>Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas</parameter>
          </include>
        </markup>
      </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dcscmm(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Int32,System.Double,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Double[],System.Int32[],System.Int32[],System.Int32[],System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense matrix by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="n">The number of columns in the matrix <paramref name="c" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-matrix product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="n" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="b">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="b" />.</param>
      <param name="bOffset">Offset into <paramref name="b" />.</param>
      <param name="ldb">The leading dimension of the matrix <paramref name="b" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="c" />.
            </param>
      <param name="c">A reference to a one-dimensional array
            containing the elements of the matrix <paramref name="c" />.
            The elements of <paramref name="c" /> are overwritten with
            the result.
            </param>
      <param name="cOffset">Offset into <paramref name="c" />.</param>
      <param name="ldc">The leading dimension of the matrix <paramref name="c" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dcscmv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Int32,System.Double,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Double[],System.Int32[],System.Int32[],System.Int32[],System.Double[],System.Int32,System.Int32,System.Double,System.Double[],System.Int32,System.Int32)">
      <summary>
            Multiplies a dense vector by a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="k">The number of columns in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="beta">The scalar used to multiply <paramref name="y" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dcscsv(Extreme.Mathematics.TransposeOperation,System.Int32,System.Double,Extreme.Mathematics.MatrixStructure,Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal,System.Double[],System.Int32[],System.Int32[],System.Int32[],System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Solves for a dense vector for a sparse matrix in coordinate format.
            </summary>
      <param name="transA">Specifies the operation to be
            performed on the matrix <paramref name="a" />.</param>
      <param name="m">The number of rows in the matrix <paramref name="a" />.</param>
      <param name="alpha">The scalar used to multiply the
            matrix-vector product.</param>
      <param name="structure">A <see cref="T:Extreme.Mathematics.MatrixStructure" /> value that
            specifies the structure of the matrix.</param>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" />
            value that specifies whether the matrix is upper or lower triangular.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" />
            value that indicates whether the diagional elements
            are all 1 or not.</param>
      <param name="a">Reference to the first element in a
            one-dimensional array containing the elements of the
            matrix.</param>
      <param name="aRows">Integer array containing the 1-based row indices of the corresponding elements
            of <paramref name="a" />.</param>
      <param name="aPointerB">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="aPointerE">Integer array of length <paramref name="m" /> containing the 1-based
            indices into <paramref name="a" /> of the first component of each column.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.</param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="incx">The increment for the array <paramref name="x" />.
            </param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.
            </param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dusaxpy(System.Int32,System.Double,System.Double[],System.Int32,System.Int32[],System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Evaluates a vector plus the product of a scalar and a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="alpha">The scalar value used to multiply
            the elements of <paramref name="x" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dusdot(System.Int32,System.Double[],System.Int32,System.Int32[],System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Returns the dot product of a sparse and a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dusga(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dusgz(System.Int32,System.Double[],System.Int32,System.Int32,System.Double[],System.Int32,System.Int32[],System.Int32)">
      <summary>
            Gathers specific elements of a dense vector into a sparse vector and zeros the original components.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Providers.SparseBlas.Dussc(System.Int32,System.Double[],System.Int32,System.Int32[],System.Int32,System.Double[],System.Int32,System.Int32)">
      <summary>
            Copies the nonzero components of a sparse vector into the corresponding components of a dense vector.
            </summary>
      <param name="n">The number of elements in the vectors
            <paramref name="x" /> and <paramref name="y" />.</param>
      <param name="x">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="x" />.
            </param>
      <param name="xOffset">Offset into <paramref name="x" />.</param>
      <param name="indx">Integer array of component indices.</param>
      <param name="indxOffset">Offset into <paramref name="x" />.</param>
      <param name="y">A reference to a one-dimensional array
            containing the elements of the vector <paramref name="y" />.
            The elements of <paramref name="y" /> are overwritten with
            the result.</param>
      <param name="yOffset">Offset into <paramref name="y" />.</param>
      <param name="incy">The increment for the array <paramref name="y" />.</param>
    </member>
    <member name="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix">
      <summary>
            Represents a sparse matrix in Compressed Sparse Column format.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.#ctor(System.Int32,System.Int32)">
      <summary>
            Constructs a new matrix in compressed sparse column format.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            Constructs a new matrix in compressed sparse column format.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="nonzeroCount">The expected number of nonzero components.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="nonzeroCount" /> is less than zero.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.#ctor(System.Int32,System.Int32,System.Int32[],System.Int32[],System.Single[])">
      <summary>
            Constructs a new matrix in compressed sparse column format.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="rowIndexes">An integer array containing the row indexes of the nonzero components.</param>
      <param name="columnIndexes">An integer array containing the column indexes of the nonzero components.</param>
      <param name="values">A <see cref="T:System.Single" /> array containing the values of the nonzero components.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
      </exception>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="values" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="rowIndexes" /> is <see langword="null" /></para>
        <para>-or-</para>
        <para>
          <paramref name="columnIndexes" /> is <see langword="null" /></para>
      </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
        <para>The length of <paramref name="rowIndexes" /> is not equal to the length of <paramref name="values" />.</para>
        <para>-or-</para>
        <para>The length of <paramref name="columnIndexes" /> is not equal to the length of <paramref name="values" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.#ctor(System.Int32,System.Int32,System.Single)">
      <summary>
            Constructs a new matrix in compressed sparse column format.
            </summary>
      <param name="RowCount">The number of rows.</param>
      <param name="columnCount">The number of columns.</param>
      <param name="fillFactor">A value between 0 and 1 that specifies the initial capacity of nonzero components
            as a proportion of the total number of components of the matrix.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <para>
          <paramref name="RowCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="columnCount" /> is less than zero.</para>
        <para>-or-</para>
        <para>
          <paramref name="fillFactor" /> is less than or equal to zero or greater than 1.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Add(Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Adds a multiple of a <see cref="T:Extreme.Mathematics.SingleMatrix" /> to this <see cref="T:Extreme.Mathematics.SingleMatrix" /> and returns
            the result.
            </summary>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before adding.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before adding.</param>
      <param name="factor">Multiplier for the matrix <paramref name="matrix" />.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the sum of the specified form of this matrix
            and the matrix <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The dimensions of this instance and the matrix
            <paramref name="matrix" /> are not compatible for the specified operation.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.AddAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Adds a value to the component at the specified location.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The value to be added to the component.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.AddProductToVector(System.Single,Extreme.Mathematics.SingleVector,Extreme.Mathematics.TransposeOperation,System.Single,Extreme.Mathematics.LinearAlgebra.SingleDenseVector)">
      <summary>
            Multiplies a vector by this <see cref="T:Extreme.Mathematics.SingleMatrix" />
            and stores the result in a second <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="alpha">Multiplier for the vector-matrix product of
            this matrix with the vector <paramref name="a" />.</param>
      <param name="beta">Multiplier for the vector <paramref name="b" />.</param>
      <param name="vector">A single-precision vector.</param>
      <param name="trans">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value that
            specifies the operation, if any, to be performed on this instance before the
            multiplication.</param>
      <param name="resultVector">The <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> that is to contain the
            result of the multiplication.</param>
      <returns>The vector <paramref name="resultVector" />.
            </returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="vector" /> is <see langword="null" />.
            <para>-or-</para><para><paramref name="resultVector" /> is <see langword="null" />.</para></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of the vector <paramref name="resultVector" /> does not equal the
            number of rows of this matrix.
            <para>-or-</para><para>The length of the vector <paramref name="vector" /> does not equal the number of columns
            of this matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.CloneData">
      <summary>
            Gives this instance its own copy of its elements.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Compact">
      <summary>
            Sets the capacity to the actual number of nonzero components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" />.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.ComponentwiseDivide(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Divides the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.ComponentwiseMultiply(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies the components of this instance by the corresponding
            components of another matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A reference to this instance.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="matrix" /> is <see langword="null" />.
            </exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">
            The number of rows of <paramref name="matrix" /> does not equal the number of rows of this instance.
            <para>-or-</para><para>The number of columns of <paramref name="matrix" /> does not equal the number of columns of this instance.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.DivideAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Divides the component at the specified location by a value.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The divisor.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.ElementOrder">
      <summary>
            Gets a value indicating the order in which the matrix
            elements are stored.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.ExtractTriangle(Extreme.Mathematics.MatrixTriangle,Extreme.Mathematics.MatrixDiagonal)">
      <summary>
            Constructs an upper or lower triangular sparse matrix from a general sparse matrix.
            </summary>
      <param name="triangleMode">A <see cref="T:Extreme.Mathematics.MatrixTriangle" /> value that specifies
            whether the upper or lower triangle of the matrix should be returned.</param>
      <param name="diagonalMode">A <see cref="T:Extreme.Mathematics.MatrixDiagonal" /> value that specifies
            whether the diagonal of the returned matrix should contain all ones.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.FromMatrix(Extreme.Mathematics.SingleMatrix)">
      <summary>
            Constructs a sparse matrix from a matrix.
            </summary>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" /></param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" /> copy of <paramref name="matrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.GetColumn(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a column <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified column and row and of the
            specified length.
            </summary>
      <param name="column">The zero-based index of the column.</param>
      <param name="startRow">The zero-based index of the
            row containing the first element in the column vector.
            </param>
      <param name="endRow">The row index of the last element in the
            column vector.</param>
      <param name="rowStride">The increment for the index
            in the column <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A column <see cref="T:Extreme.Mathematics.SingleVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="column" /> is less than zero or greater
            than or equal to the number of columns
            <para>-or-</para><para><paramref name="startRow" /> is less
            than zero or greater than or equal to the number of rows.</para><para>-or-</para><para><paramref name="endRow" /> or <paramref name="endRow" /> is less
            than zero or greater than or equal to the number of rows.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.GetColumnSums">
      <summary>
            Returns the sums of the components of each column of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the sum of the corresponding column of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.GetNonzeroComponents(System.Int32[]@,System.Int32[]@)">
      <summary>
            Returns the nonzero components
            </summary>
      <param name="rows">On return, an integer array containing the row indexes of the nonzero components.</param>
      <param name="columns">On return, an integer array containing the column indexes of the nonzero components.</param>
      <returns>A <see cref="T:System.Single" /> array containing the nonzero components of the <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo" /> with the data
            needed to serialize the target object.
            </summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> to populate with data.</param>
      <param name="context">The destination (see
            <see cref="T:System.Runtime.Serialization.StreamingContext" />) for this serialization.
            </param>
      <exception cref="T:System.Security.SecurityException">The caller does not
            have the required permission.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.GetRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Returns a row <see cref="T:Extreme.Mathematics.SingleVector" /> for this instance
            starting at the specified row and column and of the
            specified length.
            </summary>
      <param name="row">The zero-based index of the row.</param>
      <param name="startColumn">The zero-based index of the
            column containing the first element in the row vector.
            </param>
      <param name="endColumn">The column index of the last element in the
            row vector.</param>
      <param name="columnStride">The increment for the index
            in the row <see cref="T:Extreme.Mathematics.SingleVector" /> corresponding to an
            increment of one in the new vector.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" />.</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row" /> is less than zero or greater
            than or equal to the number of rows<br />
            - or - <br /><paramref name="startColumn" /> or <paramref name="endColumn" /> is less
            than zero or greater than or equal to the number of columns.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.GetRowSums">
      <summary>
            Returns the sums of the components of each row of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> whose components are the sum of the corresponding row of the matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.InsertEntry(System.Single,System.Int32,System.Int32)">
      <summary>
            Inserts a value at the specified position in the <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleSparseMatrix" />.
            </summary>
      <param name="value">The value to insert.</param>
      <param name="row">The zero-based row where <paramref name="value" /> is to be inserted.</param>
      <param name="column">The zero-based column where <paramref name="value" /> is to be inserted.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.IsComponentWritable(System.Int32,System.Int32)">
      <summary>
            Gets a value indicating whether the value of the component at
            the specified column and row can be changed.
            </summary>
      <param name="row">The zero-based row index of
            the element to get or set.</param>
      <param name="column">The zero-based column index of
            the element to get or set.</param>
      <returns>Always returns <see langword="true" />.</returns>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.IsLowerTriangular">
      <summary>
            Gets a value indicating whether this
            instance is lower triangular.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.IsSymmetrical">
      <summary>
            Gets a value that indicates if the matrix is symmetrical about the main diagonal.
            </summary>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.IsUpperTriangular">
      <summary>
            Gets a value indicating whether this
            instance is triangleMode triangular.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Multiply(Extreme.Mathematics.MatrixOperationSide,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.TransposeOperation,Extreme.Mathematics.SingleMatrix)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by another matrix and returns
            the result.
            </summary>
      <param name="side">A <see cref="T:Extreme.Mathematics.MatrixOperationSide" /> value that
            specifies whether the matrix <paramref name="a" /> is the left
            or right operand of the multiplication.</param>
      <param name="transposeA">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            this instance before multiplying.</param>
      <param name="transposeB">A <see cref="T:Extreme.Mathematics.TransposeOperation" /> value
            that indicates which operation, if any, should be performed on
            the matrix <paramref name="matrix" /> before multiplying.</param>
      <param name="matrix">A <see cref="T:Extreme.Mathematics.SingleMatrix" />.</param>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> that is the product of this matrix
            and the matrix <paramref name="matrix" />.</returns>
      <exception cref="T:System.ArgumentNullException">
        <para>
          <paramref name="matrix" /> is <see langword="null" />.</para>
      </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Multiply(System.Single)">
      <summary>
            Multiplies this <see cref="T:Extreme.Mathematics.SingleMatrix" /> by a scalar factor.
            </summary>
      <param name="factor">The factor to multiply the matrix by.</param>
      <returns>a reference to this matrix.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.MultiplyAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Multiplies the component at the specified location by a value.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The multiplier.</param>
    </member>
    <member name="P:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.NonzeroComponents">
      <summary>
            Gets a collection of the nonzero components of the matrix.
            </summary>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.op_Explicit(Extreme.Mathematics.LinearAlgebra.SparseCompressedColumnMatrix)~Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix">
      <summary>
            Converts a double-precision matrix to its single-precision equivalent.
            </summary>
      <param name="input">The <see cref="T:Extreme.Mathematics.LinearAlgebra.SparseCompressedColumnMatrix" /> to convert.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix" /> of the same size and with the same components as <paramref name="input" />.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Reserve(System.Int32)">
      <summary>
            Reserves storage for the specified number of nonzero elements.
            </summary>
      <param name="capacity">An integer specifiying the new capacity to reserve storage for.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            number of rows in <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Solve(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the system of simultaneous linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.SingleVector" />.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" /></exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal
            the number of rows in the matrix.
            <para>-or-</para><para>The matrix is not square.</para></exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            matrix is singular. A solution could not be found.
            </exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> and optionally overwrites the
            right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" />.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> instance containing the solution
            to the system of equations is returned. (This is the default.)
            If <span class="keyword">true</span>, the matrix <paramref name="rightHandSide" />
            is overwritten by the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.SingleDenseMatrix" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The number
            of rows of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.SolveTranspose(Extreme.Mathematics.LinearAlgebra.SingleDenseVector,System.Boolean)">
      <summary>
            Solves the transposed system of linear equations for the specified
            right-hand side <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> and optionally
            overwrites the right-hand side with the solution.
            </summary>
      <param name="rightHandSide">A single-precision vector.</param>
      <param name="overwrite">If <span class="keyword">false</span>,
            a new <see cref="T:Extreme.Mathematics.SingleVector" /> instance containing the solution
            to the system of equations is returned. If <span class="keyword">false</span>,
            the vector <paramref name="rightHandSide" /> is overwritten by
            the solution.</param>
      <returns>A <see cref="T:Extreme.Mathematics.LinearAlgebra.DenseVector" /> containing the solution
            of the system of simultaneous linear equations.</returns>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="rightHandSide" /> is <see langword="null" />.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            length of <paramref name="rightHandSide" /> does not equal the
            number of rows of the matrix underlying
            this system of equations.
            </exception>
      <exception cref="T:Extreme.Mathematics.LinearAlgebra.MatrixSingularException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is singular and does not have an inverse.</exception>
      <exception cref="T:Extreme.Mathematics.DimensionMismatchException">The
            <see cref="T:Extreme.Mathematics.SingleMatrix" /> underlying this system of equations
            is not square.</exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.SubtractAt(System.Int32,System.Int32,System.Single)">
      <summary>
            Subtracts a value from the component at the specified location.
            </summary>
      <param name="row">The row of the component.</param>
      <param name="column">The column of the component.</param>
      <param name="value">The value to be subtracted from the component.</param>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.SwapRows(System.Int32,System.Int32)">
      <summary>
            Interchanges the specified rows of the matrix.
            </summary>
      <param name="row1">The first row.</param>
      <param name="row2">The second row.</param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="row1" /> is less than zero or greater than or equal to the number of rows in the matrix.
            <para>-or-</para><para><paramref name="row2" /> is less than zero or greater than or equal to the number of rows in the matrix.</para></exception>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.ToArray(Extreme.Mathematics.MatrixElementOrder)">
      <summary>
            Gets the components of the vector.
            </summary>
      <returns>An array of <see cref="T:System.Single" /> values
            that contains the components of the vector.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.ToDoublePrecision">
      <summary>
            Returns a double-precision equivalent of the matrix.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.Matrix" /> of the same size and with the same components as this instance.</returns>
    </member>
    <member name="M:Extreme.Mathematics.LinearAlgebra.Sparse.SingleSparseCompressedColumnMatrix.Transpose">
      <summary>
            Returns the transpose of this instance.
            </summary>
      <returns>A <see cref="T:Extreme.Mathematics.SingleMatrix" /> representing the
            transpose of this matrix.</returns>
    </member>
  </members>
</doc>